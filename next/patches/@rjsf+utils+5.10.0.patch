diff --git a/node_modules/@rjsf/utils/dist/index.d.ts b/node_modules/@rjsf/utils/dist/index.d.ts
index 1aca0cc..67153b3 100644
--- a/node_modules/@rjsf/utils/dist/index.d.ts
+++ b/node_modules/@rjsf/utils/dist/index.d.ts
@@ -100,7 +100,7 @@ type Experimental_ArrayMinItems = {
      *        no values have been defined.
      * - `requiredOnly`: Ignore `minItems` on a field when calculating defaults unless the field is required.
      */
-    populate?: 'all' | 'requiredOnly';
+    populate?: 'all' | 'requiredOnly' | 'never';
     /** When `formData` is provided and does not contain `minItems` worth of data, this flag (`false` by default) controls
      * whether the extra data provided by the defaults is appended onto the existing `formData` items to ensure the
      * `minItems` condition is met. When false (legacy behavior), only the `formData` provided is merged into the default
diff --git a/node_modules/@rjsf/utils/dist/utils.esm.js b/node_modules/@rjsf/utils/dist/utils.esm.js
index 5c7068e..4118097 100644
--- a/node_modules/@rjsf/utils/dist/utils.esm.js
+++ b/node_modules/@rjsf/utils/dist/utils.esm.js
@@ -1568,8 +1568,9 @@ function computeDefaults(validator, rawSchema, _temp) {
             });
           });
         }
-        var ignoreMinItemsFlagSet = (experimental_defaultFormStateBehavior === null || experimental_defaultFormStateBehavior === void 0 ? void 0 : (_experimental_default3 = experimental_defaultFormStateBehavior.arrayMinItems) === null || _experimental_default3 === void 0 ? void 0 : _experimental_default3.populate) === 'requiredOnly';
-        if (ignoreMinItemsFlagSet && !required) {
+        var ignoreMinItemsRequiredOnly = (experimental_defaultFormStateBehavior === null || experimental_defaultFormStateBehavior === void 0 ? void 0 : (_experimental_default3 = experimental_defaultFormStateBehavior.arrayMinItems) === null || _experimental_default3 === void 0 ? void 0 : _experimental_default3.populate) === 'requiredOnly';
+        var ignoreMinItemsNever = (experimental_defaultFormStateBehavior === null || experimental_defaultFormStateBehavior === void 0 ? void 0 : (_experimental_default3 = experimental_defaultFormStateBehavior.arrayMinItems) === null || _experimental_default3 === void 0 ? void 0 : _experimental_default3.populate) === 'never';
+        if ((ignoreMinItemsRequiredOnly && !required) || ignoreMinItemsNever) {
           // If no form data exists or defaults are set leave the field empty/non-existent, otherwise
           // return form data/defaults
           return defaults ? defaults : undefined;
