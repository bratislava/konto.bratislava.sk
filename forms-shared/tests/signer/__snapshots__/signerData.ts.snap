// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`signerData > komunitneZahradyExample > should generate correct signer data 1`] = `
{
  "objectDescription": "Komunitné záhrady",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/00603481.komunitneZahrady/1.1",
  "objectId": "Komunitne_zahrady.xml",
  "signatureId": "form_data_7931c15ec593e9b21eaf93abe62a1bec19664bdc_20240101000000",
  "xdcIdentifier": "http://data.gov.sk/doc/eform/00603481.komunitneZahrady/1.1",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://schemas.gov.sk/form/00603481.komunitneZahrady/1.1"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://schemas.gov.sk/form/00603481.komunitneZahrady/1.1" 
           elementFormDefault="qualified" 
           attributeFormDefault="unqualified">

  <xs:element name="eform">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="JsonVersion" type="xs:string"/>
        <xs:element name="Json" type="xs:string"/>
        <xs:element name="Summary" type="SummaryType"/>
        <xs:element name="TermsAndConditions" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="SummaryType">
    <xs:sequence>
      <xs:element name="Form" type="FormType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FormType">
    <xs:sequence>
      <xs:element name="Step" type="StepType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="StepType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayType">
    <xs:sequence>
      <xs:element name="ArrayItem" type="ArrayItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayItemType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FieldType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="StringValue" type="xs:string"/>
      <xs:element name="FileValue" type="FileValueType"/>
      <xs:element name="NoneValue">
        <xs:complexType/>
      </xs:element>
      <xs:element name="InvalidValue">
        <xs:complexType/>
      </xs:element>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="label" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FileValueType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="id" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:e="http://schemas.gov.sk/form/00603481.komunitneZahrady/1.1"
>
  <xsl:output
    method="xml"
    indent="yes"
    encoding="UTF-8"
    omit-xml-declaration="yes"
  />
  <xsl:template match="/">
    <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE html&gt;
</xsl:text>
    <html lang="sk">
      <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title><xsl:value-of select="//e:eform/e:Summary/e:Form/@title"/></title>
        <style>
          body {
            font-family: Arial, sans-serif;
            color: #333;
          }
          .container {
            margin-bottom: 32px;
          }
          .container:last-child {
            margin-bottom: 0;
          }
          h1 {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 32px;
          }
          h2 {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 16px;
          }
          .box {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
          }
          .box-text {
            margin: 0;
            white-space: pre-wrap;
          }
          .field {
            border-bottom: 2px solid #e5e5e5;
            padding: 10px 0;
            overflow: hidden;
          }
          .field-label {
            font-weight: bold;
            float: left;
            width: 50%;
            padding-right: 4px;
            box-sizing: border-box;
          }
          .field-value {
            float: right;
            width: 50%;
          }
          .field-value-item {
            margin-bottom: 8px;
            margin-left: 4px;
          }
          .field-value-item:last-child {
            margin-bottom: 0;
          }
          .field-value-string {
            white-space: pre-wrap;
          }
          .array {
            margin-top: 16px;
          }
          .array-title {
            font-weight: bold;
            margin-bottom: 16px;
          }
          .array-item {
            border-left: 4px solid #e5e5e5;
            padding: 0 0 0 12px;
            margin-bottom: 16px;
          }
          .array-item:last-child {
            margin-bottom: 0;
          }
          .array-item-title {
            font-weight: bold;
            margin-bottom: 12px;
          }

          @media (max-width: 767px) {
            .field-label,
            .field-value {
              float: none;
              width: 100%;
            }
            .field-label {
              margin-bottom: 8px;
              padding-right: 0;
            }
            .field-value-item {
              margin-left: 0;
            }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1><xsl:value-of select="//e:eform/e:Summary/e:Form/@title" /></h1>
          <xsl:apply-templates select="//e:eform/e:Summary/e:Form/*" />
        </div>
        <div class="container">
          <h2>Ochrana osobných údajov</h2>
          <div class="box">
            <p class="box-text"><xsl:value-of select="//e:eform/e:TermsAndConditions" /></p>
          </div>
        </div>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="e:Step">
    <div class="container">
      <h2><xsl:value-of select="@title" /></h2>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:Field">
    <div class="field">
      <div class="field-label"><xsl:value-of select="@label" /></div>
      <div class="field-value">
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:StringValue">
    <div class="field-value-item">
      <span class="field-value-string"><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:FileValue">
    <div class="field-value-item">
      <span><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:NoneValue">
    <div class="field-value-item">
      <span>-</span>
    </div>
  </xsl:template>

  <xsl:template match="e:InvalidValue">
    <div class="field-value-item">
      <span class="field-value-error">Neznáma hodnota</span>
    </div>
  </xsl:template>

  <xsl:template match="e:Array">
    <div class="array">
      <div class="array-title"><xsl:value-of select="@title" /></div>
      <xsl:apply-templates />
    </div>
  </xsl:template>

  <xsl:template match="e:ArrayItem">
    <div class="array-item">
      <div class="array-item-title"><xsl:value-of select="@title" /></div>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "1.1",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><eform xmlns="http://schemas.gov.sk/form/00603481.komunitneZahrady/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><JsonVersion>1.0.0</JsonVersion><Json>{"ziadatel":{"menoPriezvisko":{"meno":"Ján","priezvisko":"Kováč"},"adresa":{"ulicaACislo":"Mierová 12","mestoPsc":{"mesto":"Bratislava","psc":"82108"}},"email":"jan.kovac@priklad.sk","telefon":"+421905987654"},"obcianskeZdruzenie":{"nazovObcianskehoZdruzenia":"Zelená Bratislava","ico":"12345678","adresaSidla":{"ulicaACislo":"Šancová 56","mestoPsc":{"mesto":"Bratislava","psc":"83104"}},"statutar":{"menoStatutara":"Marta","priezviskoStatutara":"Nováková"}},"pozemok":{"typPozemku":"predschvalenyPozemok","predschvalenyPozemokVyber":"Azalková"},"zahrada":{"dovodyZalozenia":"Priestor je v súčasnosti nevyužívaný a zanedbaný. Komunitná záhrada by poskytla miesto pre miestnych obyvateľov na pestovanie rastlín a stretávanie sa.","suhlasKomunity":"Získali sme podporu od miestnych obyvateľov prostredníctvom petície a verejných stretnutí.","organizacnyTim":"Tím bude pozostávať z miestnych dobrovoľníkov, ktorí sa budú starať o záhradu a organizovať komunitné aktivity.","prevadzka":"Údržbu zelene budú zabezpečovať dobrovoľníci. Odpad bude separovaný a recyklovaný, pričom sa budeme snažiť o zero-waste režim.","inkluzivnost":"Projekt bude otvorený pre všetkých miestnych obyvateľov. Záujemcovia o záhradkárčenie budú vybraní na základe transparentného procesu.","financovanie":"Plánujeme využiť granty a členské poplatky. Predbežný rozpočet už máme a plánujeme ho doplniť o ďalšie zdroje."},"prilohyPredschvalenyPozemok":{"umiestnenie":"ace1a8c2-f96e-4583-bdf9-64233b582572","dizajn":"27766841-1f8f-4daa-b6e9-df826b294ae0","fotografie":"7510f8c5-c777-4426-8166-90f253eb0738","ine":"1f174bf8-328c-4d1e-8dbb-2afe98e1a0f0"}}</Json><Summary><Form title="Komunitné záhrady"><Step id="root_ziadatel" title="Žiadateľ"><Field id="root_ziadatel_menoPriezvisko_meno" label="Meno"><StringValue>Ján</StringValue></Field><Field id="root_ziadatel_menoPriezvisko_priezvisko" label="Priezvisko"><StringValue>Kováč</StringValue></Field><Field id="root_ziadatel_adresa_ulicaACislo" label="Ulica a číslo"><StringValue>Mierová 12</StringValue></Field><Field id="root_ziadatel_adresa_mestoPsc_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_ziadatel_adresa_mestoPsc_psc" label="PSČ"><StringValue>82108</StringValue></Field><Field id="root_ziadatel_email" label="E-mail"><StringValue>jan.kovac@priklad.sk</StringValue></Field><Field id="root_ziadatel_telefon" label="Telefónne číslo"><StringValue>+421905987654</StringValue></Field></Step><Step id="root_obcianskeZdruzenie" title="Občianske združenie"><Field id="root_obcianskeZdruzenie_nazovObcianskehoZdruzenia" label="Názov občianskeho združenia"><StringValue>Zelená Bratislava</StringValue></Field><Field id="root_obcianskeZdruzenie_ico" label="IČO"><StringValue>12345678</StringValue></Field><Field id="root_obcianskeZdruzenie_adresaSidla_ulicaACislo" label="Ulica a číslo"><StringValue>Šancová 56</StringValue></Field><Field id="root_obcianskeZdruzenie_adresaSidla_mestoPsc_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_obcianskeZdruzenie_adresaSidla_mestoPsc_psc" label="PSČ"><StringValue>83104</StringValue></Field><Field id="root_obcianskeZdruzenie_statutar_menoStatutara" label="Meno"><StringValue>Marta</StringValue></Field><Field id="root_obcianskeZdruzenie_statutar_priezviskoStatutara" label="Priezvisko"><StringValue>Nováková</StringValue></Field></Step><Step id="root_pozemok" title="Pozemok"><Field id="root_pozemok_typPozemku" label="O aký pozemok máte záujem?"><StringValue>Predschválený mestský pozemok</StringValue></Field><Field id="root_pozemok_predschvalenyPozemokVyber" label="Ponuka predschválených mestských pozemkov"><StringValue>Azalková</StringValue></Field></Step><Step id="root_zahrada" title="Záhrada"><Field id="root_zahrada_dovodyZalozenia" label="Dôvody založenia komunitnej záhrady na danom pozemku"><StringValue>Priestor je v súčasnosti nevyužívaný a zanedbaný. Komunitná záhrada by poskytla miesto pre miestnych obyvateľov na pestovanie rastlín a stretávanie sa.</StringValue></Field><Field id="root_zahrada_suhlasKomunity" label="Súhlas miestnej komunity"><StringValue>Získali sme podporu od miestnych obyvateľov prostredníctvom petície a verejných stretnutí.</StringValue></Field><Field id="root_zahrada_organizacnyTim" label="Organizačný tím záhrady"><StringValue>Tím bude pozostávať z miestnych dobrovoľníkov, ktorí sa budú starať o záhradu a organizovať komunitné aktivity.</StringValue></Field><Field id="root_zahrada_prevadzka" label="Prevádzka a údržba záhrady"><StringValue>Údržbu zelene budú zabezpečovať dobrovoľníci. Odpad bude separovaný a recyklovaný, pričom sa budeme snažiť o zero-waste režim.</StringValue></Field><Field id="root_zahrada_inkluzivnost" label="Inkluzívnosť projektu a režim komunitnej záhrady"><StringValue>Projekt bude otvorený pre všetkých miestnych obyvateľov. Záujemcovia o záhradkárčenie budú vybraní na základe transparentného procesu.</StringValue></Field><Field id="root_zahrada_financovanie" label="Spôsob financovania záhrady"><StringValue>Plánujeme využiť granty a členské poplatky. Predbežný rozpočet už máme a plánujeme ho doplniť o ďalšie zdroje.</StringValue></Field></Step><Step id="root_prilohyPredschvalenyPozemok" title="Prílohy"><Field id="root_prilohyPredschvalenyPozemok_umiestnenie" label="Presné umiestnenie záhrady na pozemku"><FileValue id="ace1a8c2-f96e-4583-bdf9-64233b582572">umiestnenie.jpg</FileValue></Field><Field id="root_prilohyPredschvalenyPozemok_dizajn" label="Dizajn/projekt záhrady"><FileValue id="27766841-1f8f-4daa-b6e9-df826b294ae0">dizajn.jpg</FileValue></Field><Field id="root_prilohyPredschvalenyPozemok_fotografie" label="Fotografie miesta, na ktorom si chcete vytvoriť komunitnú záhradu"><FileValue id="7510f8c5-c777-4426-8166-90f253eb0738">fotografie.jpg</FileValue></Field><Field id="root_prilohyPredschvalenyPozemok_ine" label="Iné"><FileValue id="1f174bf8-328c-4d1e-8dbb-2afe98e1a0f0">ine.pdf</FileValue></Field></Step></Form></Summary><TermsAndConditions>Stiahnutím, uložením a/alebo odoslaním Žiadosti výslovne vyhlasujem, že som sa oboznámil s podmienkami spracúvania osobných údajov Hlavného mesta ako prevádzkovateľa osobných údajov a beriem na vedomie, že ich spracúvanie je nevyhnutné na splnenie zákonných povinností Hlavného mesta v súvislosti s vybavením tejto žiadosti.</TermsAndConditions></eform>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/00603481.komunitneZahrady/1.1",
  "xslMediaDestinationTypeDescription": "HTML",
  "xslReferenceURI": "http://schemas.gov.sk/form/00603481.komunitneZahrady/1.1/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > oznamenieOPoplatkovejPovinnostiZaKomunalneOdpadyExample > should generate correct signer data 1`] = `
{
  "objectDescription": "Oznámenie o poplatkovej povinnosti za komunálne odpady",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/00603481.oznamenieOPoplatkovejPovinnostiZaKomunalneOdpady/1.0",
  "objectId": "Oznamenie_o_poplatkovej_povinnosti_za_komunalne_odpady.xml",
  "signatureId": "form_data_8c0324b30fa36b30c8425d9af998dd0ef6cb4826_20240101000000",
  "xdcIdentifier": "http://data.gov.sk/doc/eform/00603481.oznamenieOPoplatkovejPovinnostiZaKomunalneOdpady/1.0",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://schemas.gov.sk/form/00603481.oznamenieOPoplatkovejPovinnostiZaKomunalneOdpady/1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://schemas.gov.sk/form/00603481.oznamenieOPoplatkovejPovinnostiZaKomunalneOdpady/1.0" 
           elementFormDefault="qualified" 
           attributeFormDefault="unqualified">

  <xs:element name="eform">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="JsonVersion" type="xs:string"/>
        <xs:element name="Json" type="xs:string"/>
        <xs:element name="Summary" type="SummaryType"/>
        <xs:element name="TermsAndConditions" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="SummaryType">
    <xs:sequence>
      <xs:element name="Form" type="FormType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FormType">
    <xs:sequence>
      <xs:element name="Step" type="StepType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="StepType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayType">
    <xs:sequence>
      <xs:element name="ArrayItem" type="ArrayItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayItemType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FieldType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="StringValue" type="xs:string"/>
      <xs:element name="FileValue" type="FileValueType"/>
      <xs:element name="NoneValue">
        <xs:complexType/>
      </xs:element>
      <xs:element name="InvalidValue">
        <xs:complexType/>
      </xs:element>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="label" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FileValueType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="id" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:e="http://schemas.gov.sk/form/00603481.oznamenieOPoplatkovejPovinnostiZaKomunalneOdpady/1.0"
>
  <xsl:output
    method="xml"
    indent="yes"
    encoding="UTF-8"
    omit-xml-declaration="yes"
  />
  <xsl:template match="/">
    <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE html&gt;
</xsl:text>
    <html lang="sk">
      <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title><xsl:value-of select="//e:eform/e:Summary/e:Form/@title"/></title>
        <style>
          body {
            font-family: Arial, sans-serif;
            color: #333;
          }
          .container {
            margin-bottom: 32px;
          }
          .container:last-child {
            margin-bottom: 0;
          }
          h1 {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 32px;
          }
          h2 {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 16px;
          }
          .box {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
          }
          .box-text {
            margin: 0;
            white-space: pre-wrap;
          }
          .field {
            border-bottom: 2px solid #e5e5e5;
            padding: 10px 0;
            overflow: hidden;
          }
          .field-label {
            font-weight: bold;
            float: left;
            width: 50%;
            padding-right: 4px;
            box-sizing: border-box;
          }
          .field-value {
            float: right;
            width: 50%;
          }
          .field-value-item {
            margin-bottom: 8px;
            margin-left: 4px;
          }
          .field-value-item:last-child {
            margin-bottom: 0;
          }
          .field-value-string {
            white-space: pre-wrap;
          }
          .array {
            margin-top: 16px;
          }
          .array-title {
            font-weight: bold;
            margin-bottom: 16px;
          }
          .array-item {
            border-left: 4px solid #e5e5e5;
            padding: 0 0 0 12px;
            margin-bottom: 16px;
          }
          .array-item:last-child {
            margin-bottom: 0;
          }
          .array-item-title {
            font-weight: bold;
            margin-bottom: 12px;
          }

          @media (max-width: 767px) {
            .field-label,
            .field-value {
              float: none;
              width: 100%;
            }
            .field-label {
              margin-bottom: 8px;
              padding-right: 0;
            }
            .field-value-item {
              margin-left: 0;
            }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1><xsl:value-of select="//e:eform/e:Summary/e:Form/@title" /></h1>
          <xsl:apply-templates select="//e:eform/e:Summary/e:Form/*" />
        </div>
        <div class="container">
          <h2>Ochrana osobných údajov</h2>
          <div class="box">
            <p class="box-text"><xsl:value-of select="//e:eform/e:TermsAndConditions" /></p>
          </div>
        </div>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="e:Step">
    <div class="container">
      <h2><xsl:value-of select="@title" /></h2>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:Field">
    <div class="field">
      <div class="field-label"><xsl:value-of select="@label" /></div>
      <div class="field-value">
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:StringValue">
    <div class="field-value-item">
      <span class="field-value-string"><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:FileValue">
    <div class="field-value-item">
      <span><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:NoneValue">
    <div class="field-value-item">
      <span>-</span>
    </div>
  </xsl:template>

  <xsl:template match="e:InvalidValue">
    <div class="field-value-item">
      <span class="field-value-error">Neznáma hodnota</span>
    </div>
  </xsl:template>

  <xsl:template match="e:Array">
    <div class="array">
      <div class="array-title"><xsl:value-of select="@title" /></div>
      <xsl:apply-templates />
    </div>
  </xsl:template>

  <xsl:template match="e:ArrayItem">
    <div class="array-item">
      <div class="array-item-title"><xsl:value-of select="@title" /></div>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "1.0",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><eform xmlns="http://schemas.gov.sk/form/00603481.oznamenieOPoplatkovejPovinnostiZaKomunalneOdpady/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><JsonVersion>1.0.0</JsonVersion><Json>{"typOznamenia":{"typOznamenia":"vznik"},"oznamovatel":{"voSvojomMene":true,"oznamovatelTyp":"fyzickaOsoba","vztahKNehnutelnosti":"vlastnik","maElektronickuSchranku":true,"meno":"Ján","priezvisko":"Kováč","titul":"Ing.","rodneCislo":"910313/1234","email":"jan.kovac@priklad.sk","telefon":"+421905987654","ulicaACislo":"Mierová 12","mesto":"Bratislava","psc":"82108","stat":"703","maPrechodnyPobyt":false},"informacieOOdvoze":{"datum":"2025-01-01","odvozneMiesto":"Mierová 12","typCisla":["supisneOrientacneCislo"],"mesto":"Bratislava","psc":"82108","katastralneUzemie":"805556","stanoviste":"Mierová 12","druhNehnutelnosti":"rodinnyDom","pocetOsob":4,"supisneCislo":"1234"},"poplatnici":{"poplatnici":[{"meno":"Ján","priezvisko":"Kováč","titul":"Ing.","rodneCislo":"910313/1234","zhodujeSaAdresa":true},{"meno":"Marta","priezvisko":"Nováková","titul":"Mgr.","rodneCislo":"920414/5678","zhodujeSaAdresa":true}]},"komunalnyOdpad":{"nadoby":[{"objemNadoby":"120LZbernaNadoba","pocetNadob":2,"frekvenciaOdvozu":"1X7Dni"}],"poznamka":"Odpad bude odvážaný každý týždeň."},"biologickyRozlozitelnyOdpadZoZahrad":{"nadoba":{"objemNadoby":"240LZbernaNadoba"},"poznamka":"Záhrada produkuje veľa bioodpadu."},"biologickyRozlozitelnyOdpadZKuchyne":{"nadoba":{"objemNadoby":"20az23LZbernaNadoba"},"poznamka":"Kuchynský bioodpad bude zbieraný do menších nádob."},"sposobPlatby":{"sposobPlatby":"bezhotovostnyPrevod"},"prilohy":{"prilohy":["4f01b72e-f5d6-429e-a4b4-ecb6432f05f7"]}}</Json><Summary><Form title="Oznámenie o poplatkovej povinnosti za komunálne odpady"><Step id="root_typOznamenia" title="Typ oznámenia"><Field id="root_typOznamenia_typOznamenia" label="Vyberte, prosím, druh oznámenia"><StringValue>Vznik poplatkovej povinnosti</StringValue></Field></Step><Step id="root_oznamovatel" title="Oznamovateľ"><Field id="root_oznamovatel_voSvojomMene" label="Podávate oznámenie vo svojom mene?"><StringValue>Áno</StringValue></Field><Field id="root_oznamovatel_oznamovatelTyp" label="Oznamovateľ je"><StringValue>Fyzická osoba</StringValue></Field><Field id="root_oznamovatel_vztahKNehnutelnosti" label="Označte vzťah k nehnuteľnosti"><StringValue>Vlastník</StringValue></Field><Field id="root_oznamovatel_meno" label="Meno"><StringValue>Ján</StringValue></Field><Field id="root_oznamovatel_priezvisko" label="Priezvisko"><StringValue>Kováč</StringValue></Field><Field id="root_oznamovatel_titul" label="Titul"><StringValue>Ing.</StringValue></Field><Field id="root_oznamovatel_rodneCislo" label="Rodné číslo"><StringValue>910313/1234</StringValue></Field><Field id="root_oznamovatel_email" label="Email"><StringValue>jan.kovac@priklad.sk</StringValue></Field><Field id="root_oznamovatel_telefon" label="Telefónne číslo"><StringValue>+421905987654</StringValue></Field><Field id="root_oznamovatel_ulicaACislo" label="Adresa trvalého pobytu"><StringValue>Mierová 12</StringValue></Field><Field id="root_oznamovatel_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_oznamovatel_psc" label="PSČ"><StringValue>82108</StringValue></Field><Field id="root_oznamovatel_stat" label="Štát"><StringValue>Slovenská republika</StringValue></Field><Field id="root_oznamovatel_maPrechodnyPobyt" label="Máte prechodný pobyt?"><StringValue>Nie</StringValue></Field><Field id="root_oznamovatel_maElektronickuSchranku" label="Máte aktivovanú elektronickú schránku na portáli Slovensko.sk?"><StringValue>Áno</StringValue></Field></Step><Step id="root_informacieOOdvoze" title="Informácie o odvoze"><Field id="root_informacieOOdvoze_datum" label="Dátum vzniku poplatkovej povinnosti odo dňa"><StringValue>1. 1. 2025</StringValue></Field><Field id="root_informacieOOdvoze_odvozneMiesto" label="Odvozné miesto"><StringValue>Mierová 12</StringValue></Field><Field id="root_informacieOOdvoze_typCisla" label="Vyberte, ktoré možnosti chcete vyplniť"><StringValue>Súpisné/orientačné číslo</StringValue></Field><Field id="root_informacieOOdvoze_supisneCislo" label="Súpisné/orientačné číslo"><StringValue>1234</StringValue></Field><Field id="root_informacieOOdvoze_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_informacieOOdvoze_psc" label="PSČ"><StringValue>82108</StringValue></Field><Field id="root_informacieOOdvoze_katastralneUzemie" label="Katastrálne územie"><StringValue>Ružinov</StringValue></Field><Field id="root_informacieOOdvoze_stanoviste" label="Stanovište"><StringValue>Mierová 12</StringValue></Field><Field id="root_informacieOOdvoze_druhNehnutelnosti" label="Druh nehnuteľnosti"><StringValue>rodinný dom</StringValue></Field><Field id="root_informacieOOdvoze_pocetOsob" label="Počet osôb užívajúcich nehnuteľnosť"><StringValue>4</StringValue></Field></Step><Step id="root_poplatnici" title="Údaje o všetkých poplatníkoch, ktorí užívajú danú nehnuteľnosť"><Array id="root_poplatnici_poplatnici" title="Poplatníci"><ArrayItem id="root_poplatnici_poplatnici_0" title="Poplatník č. 1"><Field id="root_poplatnici_poplatnici_0_meno" label="Meno"><StringValue>Ján</StringValue></Field><Field id="root_poplatnici_poplatnici_0_priezvisko" label="Priezvisko"><StringValue>Kováč</StringValue></Field><Field id="root_poplatnici_poplatnici_0_titul" label="Titul"><StringValue>Ing.</StringValue></Field><Field id="root_poplatnici_poplatnici_0_rodneCislo" label="Rodné číslo"><StringValue>910313/1234</StringValue></Field><Field id="root_poplatnici_poplatnici_0_zhodujeSaAdresa" label="Zhoduje sa adresa trvalého alebo prechodného pobytu poplatníka s adresou miesta odvozu, na ktorú sa táto žiadosť vzťahuje?"><StringValue>Áno</StringValue></Field></ArrayItem><ArrayItem id="root_poplatnici_poplatnici_1" title="Poplatník č. 2"><Field id="root_poplatnici_poplatnici_1_meno" label="Meno"><StringValue>Marta</StringValue></Field><Field id="root_poplatnici_poplatnici_1_priezvisko" label="Priezvisko"><StringValue>Nováková</StringValue></Field><Field id="root_poplatnici_poplatnici_1_titul" label="Titul"><StringValue>Mgr.</StringValue></Field><Field id="root_poplatnici_poplatnici_1_rodneCislo" label="Rodné číslo"><StringValue>920414/5678</StringValue></Field><Field id="root_poplatnici_poplatnici_1_zhodujeSaAdresa" label="Zhoduje sa adresa trvalého alebo prechodného pobytu poplatníka s adresou miesta odvozu, na ktorú sa táto žiadosť vzťahuje?"><StringValue>Áno</StringValue></Field></ArrayItem></Array></Step><Step id="root_komunalnyOdpad" title="Komunálny odpad"><Array id="root_komunalnyOdpad_nadoby" title="Nádoby"><ArrayItem id="root_komunalnyOdpad_nadoby_0" title="Nádoba č. 1"><Field id="root_komunalnyOdpad_nadoby_0_objemNadoby" label="Objem nádoby"><StringValue>120 l zberná nádoba</StringValue></Field><Field id="root_komunalnyOdpad_nadoby_0_pocetNadob" label="Počet nádob"><StringValue>2</StringValue></Field><Field id="root_komunalnyOdpad_nadoby_0_frekvenciaOdvozu" label="Frekvencia odvozu"><StringValue>1× 7 dní</StringValue></Field></ArrayItem></Array><Field id="root_komunalnyOdpad_poznamka" label="Poznámka"><StringValue>Odpad bude odvážaný každý týždeň.</StringValue></Field></Step><Step id="root_biologickyRozlozitelnyOdpadZoZahrad" title="Biologicky rozložiteľný odpad zo záhrad"><Field id="root_biologickyRozlozitelnyOdpadZoZahrad_nadoba_objemNadoby" label="Objem nádoby"><StringValue>240 l zberná nádoba</StringValue></Field><Field id="root_biologickyRozlozitelnyOdpadZoZahrad_poznamka" label="Poznámka"><StringValue>Záhrada produkuje veľa bioodpadu.</StringValue></Field></Step><Step id="root_biologickyRozlozitelnyOdpadZKuchyne" title="Biologicky rozložiteľný odpad z kuchyne"><Field id="root_biologickyRozlozitelnyOdpadZKuchyne_nadoba_objemNadoby" label="Objem nádoby"><StringValue>20-23l zberná nádoba</StringValue></Field><Field id="root_biologickyRozlozitelnyOdpadZKuchyne_poznamka" label="Poznámka"><StringValue>Kuchynský bioodpad bude zbieraný do menších nádob.</StringValue></Field></Step><Step id="root_sposobPlatby" title="Spôsob platby"><Field id="root_sposobPlatby_sposobPlatby" label="Spôsob platby"><StringValue>Bezhotovostným prevodom na účet správcu poplatku</StringValue></Field></Step><Step id="root_prilohy" title="Prílohy"><Field id="root_prilohy_prilohy" label="Prílohy"><FileValue id="4f01b72e-f5d6-429e-a4b4-ecb6432f05f7">list-vlastnictva.pdf</FileValue></Field></Step></Form></Summary><TermsAndConditions>Stiahnutím, uložením a/alebo odoslaním Žiadosti výslovne vyhlasujem, že som sa oboznámil s podmienkami spracúvania osobných údajov Hlavného mesta ako prevádzkovateľa osobných údajov a beriem na vedomie, že ich spracúvanie je nevyhnutné na splnenie zákonných povinností Hlavného mesta v súvislosti s vybavením tejto žiadosti.</TermsAndConditions></eform>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/00603481.oznamenieOPoplatkovejPovinnostiZaKomunalneOdpady/1.0",
  "xslMediaDestinationTypeDescription": "HTML",
  "xslReferenceURI": "http://schemas.gov.sk/form/00603481.oznamenieOPoplatkovejPovinnostiZaKomunalneOdpady/1.0/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > predzahradkyExample > should generate correct signer data 1`] = `
{
  "objectDescription": "Predzáhradky",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/00603481.predzahradky/1.1",
  "objectId": "Predzahradky.xml",
  "signatureId": "form_data_46e60950873d3fa06689084ee9c5592255e5d8a3_20240101000000",
  "xdcIdentifier": "http://data.gov.sk/doc/eform/00603481.predzahradky/1.1",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://schemas.gov.sk/form/00603481.predzahradky/1.1"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://schemas.gov.sk/form/00603481.predzahradky/1.1" 
           elementFormDefault="qualified" 
           attributeFormDefault="unqualified">

  <xs:element name="eform">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="JsonVersion" type="xs:string"/>
        <xs:element name="Json" type="xs:string"/>
        <xs:element name="Summary" type="SummaryType"/>
        <xs:element name="TermsAndConditions" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="SummaryType">
    <xs:sequence>
      <xs:element name="Form" type="FormType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FormType">
    <xs:sequence>
      <xs:element name="Step" type="StepType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="StepType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayType">
    <xs:sequence>
      <xs:element name="ArrayItem" type="ArrayItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayItemType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FieldType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="StringValue" type="xs:string"/>
      <xs:element name="FileValue" type="FileValueType"/>
      <xs:element name="NoneValue">
        <xs:complexType/>
      </xs:element>
      <xs:element name="InvalidValue">
        <xs:complexType/>
      </xs:element>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="label" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FileValueType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="id" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:e="http://schemas.gov.sk/form/00603481.predzahradky/1.1"
>
  <xsl:output
    method="xml"
    indent="yes"
    encoding="UTF-8"
    omit-xml-declaration="yes"
  />
  <xsl:template match="/">
    <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE html&gt;
</xsl:text>
    <html lang="sk">
      <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title><xsl:value-of select="//e:eform/e:Summary/e:Form/@title"/></title>
        <style>
          body {
            font-family: Arial, sans-serif;
            color: #333;
          }
          .container {
            margin-bottom: 32px;
          }
          .container:last-child {
            margin-bottom: 0;
          }
          h1 {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 32px;
          }
          h2 {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 16px;
          }
          .box {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
          }
          .box-text {
            margin: 0;
            white-space: pre-wrap;
          }
          .field {
            border-bottom: 2px solid #e5e5e5;
            padding: 10px 0;
            overflow: hidden;
          }
          .field-label {
            font-weight: bold;
            float: left;
            width: 50%;
            padding-right: 4px;
            box-sizing: border-box;
          }
          .field-value {
            float: right;
            width: 50%;
          }
          .field-value-item {
            margin-bottom: 8px;
            margin-left: 4px;
          }
          .field-value-item:last-child {
            margin-bottom: 0;
          }
          .field-value-string {
            white-space: pre-wrap;
          }
          .array {
            margin-top: 16px;
          }
          .array-title {
            font-weight: bold;
            margin-bottom: 16px;
          }
          .array-item {
            border-left: 4px solid #e5e5e5;
            padding: 0 0 0 12px;
            margin-bottom: 16px;
          }
          .array-item:last-child {
            margin-bottom: 0;
          }
          .array-item-title {
            font-weight: bold;
            margin-bottom: 12px;
          }

          @media (max-width: 767px) {
            .field-label,
            .field-value {
              float: none;
              width: 100%;
            }
            .field-label {
              margin-bottom: 8px;
              padding-right: 0;
            }
            .field-value-item {
              margin-left: 0;
            }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1><xsl:value-of select="//e:eform/e:Summary/e:Form/@title" /></h1>
          <xsl:apply-templates select="//e:eform/e:Summary/e:Form/*" />
        </div>
        <div class="container">
          <h2>Ochrana osobných údajov</h2>
          <div class="box">
            <p class="box-text"><xsl:value-of select="//e:eform/e:TermsAndConditions" /></p>
          </div>
        </div>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="e:Step">
    <div class="container">
      <h2><xsl:value-of select="@title" /></h2>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:Field">
    <div class="field">
      <div class="field-label"><xsl:value-of select="@label" /></div>
      <div class="field-value">
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:StringValue">
    <div class="field-value-item">
      <span class="field-value-string"><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:FileValue">
    <div class="field-value-item">
      <span><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:NoneValue">
    <div class="field-value-item">
      <span>-</span>
    </div>
  </xsl:template>

  <xsl:template match="e:InvalidValue">
    <div class="field-value-item">
      <span class="field-value-error">Neznáma hodnota</span>
    </div>
  </xsl:template>

  <xsl:template match="e:Array">
    <div class="array">
      <div class="array-title"><xsl:value-of select="@title" /></div>
      <xsl:apply-templates />
    </div>
  </xsl:template>

  <xsl:template match="e:ArrayItem">
    <div class="array-item">
      <div class="array-item-title"><xsl:value-of select="@title" /></div>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "1.1",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><eform xmlns="http://schemas.gov.sk/form/00603481.predzahradky/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><JsonVersion>1.0.0</JsonVersion><Json>{"ziadatel":{"menoPriezvisko":{"meno":"Ján","priezvisko":"Kováč"},"adresa":{"ulicaACislo":"Mierová 12","mestoPsc":{"mesto":"Bratislava","psc":"82108"}},"email":"jan.kovac@priklad.sk","telefon":"+421905987654"},"predzahradka":{"typRegistracie":"nova","adresa":"Dunajská 34","mestskaCast":"Devín","parcelneCislo":"46549/435413","ine":"Predzáhradka bude obsahovať rôzne druhy kvetov a kríkov, ktoré budú starostlivo vybrané tak, aby kvitli počas celého roka. Plánujeme tiež inštalovať malé fontány a lavičky pre oddych.","rozlozenieNova":"Predzáhradka bude rozdelená na tri sekcie: kvetinovú, kríkovú a relaxačnú zónu s lavičkami. Kvetinová sekcia bude umiestnená pri vstupe, kríková pozdĺž plotu a relaxačná zóna v strede."},"prilohy":{"mapa":"4f01b72e-f5d6-429e-a4b4-ecb6432f05f7","fotografie":"6f306cec-29c4-45dd-97b8-f9bedcb7d72d","projekt":"88b55eff-ebb4-4d17-bc5a-cdbe6d8eb923","inePrilohy":"7f3e5eeb-215d-4e55-ac78-44f7d60a699c"}}</Json><Summary><Form title="Predzáhradky"><Step id="root_ziadatel" title="Žiadateľ"><Field id="root_ziadatel_menoPriezvisko_meno" label="Meno"><StringValue>Ján</StringValue></Field><Field id="root_ziadatel_menoPriezvisko_priezvisko" label="Priezvisko"><StringValue>Kováč</StringValue></Field><Field id="root_ziadatel_adresa_ulicaACislo" label="Ulica a číslo"><StringValue>Mierová 12</StringValue></Field><Field id="root_ziadatel_adresa_mestoPsc_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_ziadatel_adresa_mestoPsc_psc" label="PSČ"><StringValue>82108</StringValue></Field><Field id="root_ziadatel_email" label="E-mail"><StringValue>jan.kovac@priklad.sk</StringValue></Field><Field id="root_ziadatel_telefon" label="Telefónne číslo"><StringValue>+421905987654</StringValue></Field></Step><Step id="root_predzahradka" title="Predzáhradka"><Field id="root_predzahradka_typRegistracie" label="Mám záujem o"><StringValue>Vytvorenie novej predzáhradky</StringValue></Field><Field id="root_predzahradka_adresa" label="Adresa predzáhradky (ulica, číslo)"><StringValue>Dunajská 34</StringValue></Field><Field id="root_predzahradka_mestskaCast" label="Mestská časť, v ktorej sa pozemok nachádza"><StringValue>Devín</StringValue></Field><Field id="root_predzahradka_parcelneCislo" label="Číslo parcely"><StringValue>46549/435413</StringValue></Field><Field id="root_predzahradka_rozlozenieNova" label="Plánované rozloženie predzáhradky"><StringValue>Predzáhradka bude rozdelená na tri sekcie: kvetinovú, kríkovú a relaxačnú zónu s lavičkami. Kvetinová sekcia bude umiestnená pri vstupe, kríková pozdĺž plotu a relaxačná zóna v strede.</StringValue></Field><Field id="root_predzahradka_ine" label="Iné"><StringValue>Predzáhradka bude obsahovať rôzne druhy kvetov a kríkov, ktoré budú starostlivo vybrané tak, aby kvitli počas celého roka. Plánujeme tiež inštalovať malé fontány a lavičky pre oddych.</StringValue></Field></Step><Step id="root_prilohy" title="Prílohy"><Field id="root_prilohy_mapa" label="Snímka z mapy so zakreslením miesta predzáhradky"><FileValue id="4f01b72e-f5d6-429e-a4b4-ecb6432f05f7">mapa.jpg</FileValue></Field><Field id="root_prilohy_fotografie" label="Fotografie predzáhradky alebo miesta, na ktorom si chcete vytvoriť predzáhradku"><FileValue id="6f306cec-29c4-45dd-97b8-f9bedcb7d72d">fotografie.jpg</FileValue></Field><Field id="root_prilohy_projekt" label="Projekt predzáhradky"><FileValue id="88b55eff-ebb4-4d17-bc5a-cdbe6d8eb923">projekt.pdf</FileValue></Field><Field id="root_prilohy_inePrilohy" label="Iné"><FileValue id="7f3e5eeb-215d-4e55-ac78-44f7d60a699c">ine-prilohy.pdf</FileValue></Field></Step></Form></Summary><TermsAndConditions>Stiahnutím, uložením a/alebo odoslaním Žiadosti výslovne vyhlasujem, že som sa oboznámil s podmienkami spracúvania osobných údajov Hlavného mesta ako prevádzkovateľa osobných údajov a beriem na vedomie, že ich spracúvanie je nevyhnutné na splnenie zákonných povinností Hlavného mesta v súvislosti s vybavením tejto žiadosti.</TermsAndConditions></eform>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/00603481.predzahradky/1.1",
  "xslMediaDestinationTypeDescription": "HTML",
  "xslReferenceURI": "http://schemas.gov.sk/form/00603481.predzahradky/1.1/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > priznanieKDaniZNehnutelnostiExample1 > should generate correct signer data 1`] = `
{
  "objectDescription": "",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2",
  "objectId": "object_123e4567-e89b-12d3-a456-426614174000",
  "signatureId": "form_data_034864fa119870a13bc44dc41cdff4ccecfd368e_20240101000000",
  "xdcIdentifier": "",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="utf-8"?>
<xs:schema elementFormDefault="qualified"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
	xmlns:tns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
	xmlns:base="http://schemas.gov.sk/form/esmao/base/1.0" targetNamespace="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2">
	<xs:complexType name="AdresaType">
		<xs:sequence>
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="UlicaACislo" type="UlicaACisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="POBOX" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PoschodieACisloBytu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PSC" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Obec" type="EnumerationValueType" />
			<xs:element name="CastObce" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Stat" type="StatType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="AdresatPodaniaEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Mesto" />
			<xs:enumeration value="Mestská časť" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AdresatPodaniaType">
		<xs:sequence>
			<xs:element name="AdresatPodania" type="AdresatPodaniaEnumType" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CheckboxType">
		<xs:sequence>
			<xs:element name="Notifikacia" type="xs:boolean" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="DesatinneCisloPresnostNaDveDesatinneMiesta">
		<xs:restriction base="xs:decimal">
			<xs:fractionDigits value="2" />
			<xs:minInclusive value="0" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DorucenieType">
		<xs:sequence>
			<xs:element name="AdresatPodania" type="AdresatPodaniaType" />
			<xs:element name="Checkbox" type="CheckboxType" minOccurs="0" />
			<xs:element name="FormaOdoslaniaZiadosti" type="FormaOdoslaniaZiadostiEnumType" />
			<xs:element name="FormaDoruceniaRozhodnutia" type="FormaDoruceniaRozhodnutiaType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
    <xs:complexType name="E-formMetaType">
    <xs:annotation>
      <xs:documentation>Metaúdaje elektronického formulára</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ID" type="xs:string" />
      <xs:element name="Name" type="xs:string" />
      <xs:element name="Description" type="xs:string" minOccurs="0" />
      <xs:element name="Gestor" type="xs:string" />
      <xs:element name="RecipientId" type="xs:string" />
      <xs:element name="Version" type="xs:string" />
      <xs:element name="ZepRequired" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
	<xs:simpleType name="EMailType">
		<xs:restriction base="xs:string">
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="EnumerationType" abstract="true">
		<xs:annotation>
			<xs:documentation>Položka číselníka</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="xs:string">
				<xs:annotation>
					<xs:documentation>Kód</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Názov</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WsEnumCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Kod ciselnika WS sluzby</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EnumerationValueType">
		<xs:sequence>
			<xs:element name="Code" type="xs:string" minOccurs="0" />
			<xs:element name="Name" type="xs:string" />
			<xs:element name="WsEnumCode" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="FormaDoruceniaRozhodnutiaEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Pošta" />
			<xs:enumeration value="Elektronická schránka" />
			<xs:enumeration value="Osobne" />
			<xs:enumeration value="Fax" />
			<xs:enumeration value="Telefonicky" />
			<xs:enumeration value="E-mail" />
			<xs:enumeration value="Bez odpovede" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="FormaDoruceniaRozhodnutiaType">
		<xs:sequence>
			<xs:element name="TypSposobuDorucenia" type="FormaDoruceniaRozhodnutiaEnumType" />
			<xs:element name="AdresaDoruceniaRozhodnutia" type="AdresaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresatPodania" type="AdresatPodaniaEnumType" minOccurs="0" maxOccurs="1" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="FaxPreDorucenie" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TelefonPreDorucenie" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="EmailPreDorucenie" type="EMailType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="FormaOdoslaniaZiadostiEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Elektronicky" />
			<xs:enumeration value="Listinne" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="IdentifikaciaOsobyType">
		<xs:sequence>
			<xs:element name="TitulyPredMenom" type="TitulyPredMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodnePriezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyZaMenom" type="TitulyZaMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumNarodenia" type="xs:date" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCislo" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="CisloObcianskehoPreukazu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="MenoZastupcu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PriezviskoZastupcu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DIC" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{10}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PravnaForma" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="KodKrajinyType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{3}" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="KontaktnaOsobaType">
		<xs:sequence>
			<xs:element name="Meno" type="xs:string" />
			<xs:element name="Priezvisko" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="KontaktneUdajeType">
		<xs:sequence>
			<xs:element name="TelefonneCislo" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TelefonneCisloCele" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Email" type="EMailType" minOccurs="0" maxOccurs="1" />
			<xs:element name="KontaktnaOsoba" type="KontaktnaOsobaType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OpravnenaOsobaType">
		<xs:sequence>
			<xs:element name="PravnyVztah" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyPredMenom" type="TitulyPredMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyZaMenom" type="TitulyZaMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaOpravnenejOsoby" type="AdresaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="KontaktneUdajeOpravnenejOsoby" type="KontaktneUdajeType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OsobneUdajeType">
		<xs:sequence>
			<xs:element name="TypOsoby" type="EnumerationValueType" />
			<xs:element name="IdentifikaciaOsoby" type="IdentifikaciaOsobyType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrilohyType">
		<xs:sequence>
			<xs:element name="Priloha" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="RodneCisloType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{9,10}" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="StatType">
		<xs:complexContent>
			<xs:restriction base="EnumerationType">
				<xs:sequence>
					<xs:element name="Code" type="KodKrajinyType" />
					<xs:element name="Name" type="xs:string" />
					<xs:element name="WsEnumCode" type="xs:string" minOccurs="0" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TelefonneCisloType">
		<xs:sequence>
			<xs:element name="MedzinarodneVolacieCislo">
				<xs:simpleType>
					<xs:restriction base="xs:string">
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Predvolba">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[1-9][0-9]*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Cislo">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TitulyPredMenomType">
		<xs:sequence>
			<xs:element name="TitulPredMenom" type="EnumerationValueType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TitulyZaMenomType">
		<xs:sequence>
			<xs:element name="TitulZaMenom" type="EnumerationValueType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UlicaACisloType">
		<xs:sequence>
			<xs:element name="Ulica" type="xs:string" />
			<xs:element name="SupisneCislo" type="xs:integer" minOccurs="0" maxOccurs="1" />
			<xs:element name="OrientacneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZakladneVyhlasenieType">
		<xs:sequence>
			<xs:element name="SpravnostUdajovText" type="xs:string" />
			<xs:element name="SuhlasSoSpracovanimText" type="xs:string" />
			<xs:element name="PoskytujemSuhlas" type="xs:boolean" default="false" />
			<xs:element name="PoskytujemSuhlasText" type="xs:string" />
			<xs:element name="NeposkytujemSuhlas" type="xs:boolean" default="false" />
			<xs:element name="NeposkytujemSuhlasText" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="E-form">
		<xs:complexType>
			<xs:sequence>
                <xs:element name="Meta" type="E-formMetaType" />
				<xs:element name="Body">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="InstanceID" type="xs:string" minOccurs="0" />
							<xs:element name="DruhPriznania" type="EnumerationValueType" />
							<xs:element name="NaRok" type="xs:nonNegativeInteger" />
							<xs:element name="Danovnik" type="OsobneUdajeType" />
							<xs:element name="AdresaDanovnika" type="AdresaType" />
							<xs:element name="OpravnenaOsoba" type="OpravnenaOsobaType" minOccurs="0" maxOccurs="1" />
							<xs:element name="KontaktneUdajeDanovnika" type="KontaktneUdajeType" minOccurs="0" />
							<xs:element name="DanZPozemkov" type="DanZPozemkovType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZoStaviebJedenUcel" type="DanZoStaviebJedenUcelType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZoStaviebViacereUcely" type="DanZoStaviebViacereUcelyType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZBytovANebytovychPriestorov" type="DanZBytovANebytovychPriestorovType" minOccurs="0" maxOccurs="1" />
							<xs:element name="Priloha" type="PrilohaType" minOccurs="0" maxOccurs="1" />
							<xs:element name="SuhrnPriloh" type="SuhrnPrilohType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DatumZadaniaPodania" type="xs:dateTime" minOccurs="0" maxOccurs="1" />
							<xs:element name="ZakladneVyhlasenie" type="ZakladneVyhlasenieType" />
							<xs:element name="Prilohy" type="PrilohyType" minOccurs="0" maxOccurs="1" />
							<xs:element name="Dorucenie" type="DorucenieType" />
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="DanZPozemkovType">
		<xs:sequence>
			<xs:element name="DanZPozemkovZaznam" type="DanZPozemkovZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZPozemkovZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Obec" type="xs:string" />
			<xs:element name="DruhyZmien" type="DruhyZmienType" />
			<xs:element name="HodnotaPozemkuUrcenaZnalcom" type="xs:boolean" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="Pozemky" type="PozemkyType" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DruhyZmienType">
		<xs:sequence>
			<xs:element name="DruhZmeny" type="EnumerationValueType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PozemkyType">
		<xs:sequence>
			<xs:element name="Pozemok" type="PozemokType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PozemokType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="Vymera" type="DesatinneCisloPresnostNaDveDesatinneMiesta" />
			<xs:element name="DruhPozemku" type="EnumerationValueType" />
			<xs:element name="VyuzitiePozemku" type="xs:string" minOccurs="0" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebJedenUcelType">
		<xs:sequence>
			<xs:element name="DanZoStaviebJedenUcelZaznam" type="DanZoStaviebJedenUcelZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebJedenUcelZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaStavby" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="PredmetDane" type="EnumerationValueType" />
			<xs:element name="ZakladDane" type="xs:nonNegativeInteger" />
			<xs:element name="PocetPodlazi" type="xs:nonNegativeInteger" />
			<xs:element name="CelkovaVymeraPodlahovychPloch" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebViacereUcelyType">
		<xs:sequence>
			<xs:element name="DanZoStaviebViacereUcelyZaznam" type="DanZoStaviebViacereUcelyZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebViacereUcelyZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaStavby" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="PopisStavby" type="xs:string" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="ZakladDane" type="xs:nonNegativeInteger" />
			<xs:element name="CelkovaVymeraPodlahovychPloch" type="xs:nonNegativeInteger" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochNaJednotliveUcely" type="VymeraPlochNaJednotliveUcelyType" />
			<xs:element name="PocetPodlazi" type="xs:nonNegativeInteger" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochNaJednotliveUcelyType">
		<xs:sequence>
			<xs:element name="VymeraPlochNaJednotlivyUcel" type="VymeraPlochNaJednotlivyUcelType" minOccurs="9" maxOccurs="9" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochNaJednotlivyUcelType">
		<xs:sequence>
			<xs:element name="Ucel" type="EnumerationValueType" />
			<xs:element name="Vymera" type="DesatinneCisloPresnostNaDveDesatinneMiesta" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZBytovANebytovychPriestorovType">
		<xs:sequence>
			<xs:element name="DanZBytovANebytovychPriestorovZaznam" type="DanZBytovANebytovychPriestorovZaznamType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZBytovANebytovychPriestorovZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaBytu" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" minOccurs="0" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="CisloBytu" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="PopisBytu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="NebytovePriestory" type="NebytovePriestoryType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ZakladDane" type="ZakladDaneType" />
			<xs:element name="VymeraPodlahovejPlochyVyuzivanejNaIneUcely" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="VymeraPlochOslobodenychOdDaneType" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZakladDaneType">
		<xs:sequence>
			<xs:element name="Byt" type="xs:nonNegativeInteger" />
			<xs:element name="NebytovyPriestor" type="xs:nonNegativeInteger" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochOslobodenychOdDaneType">
		<xs:sequence>
			<xs:element name="Byt" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="NebytovyPriestor" type="xs:nonNegativeInteger" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NebytovePriestoryType">
		<xs:sequence>
			<xs:element name="NebytovyPriestor" type="NebytovyPriestorType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NebytovyPriestorType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="CisloVBytovomDome" type="xs:string" />
			<xs:element name="UcelVyuzitiaVBytovomDome" type="xs:string" />
			<xs:element name="VymeraPodlahovychPloch" type="xs:nonNegativeInteger" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SuhrnPrilohType">
		<xs:sequence>
			<xs:element name="PocetOddielovII" type="xs:integer" />
			<xs:element name="PocetOddielovIII" type="xs:integer" />
			<xs:element name="PocetOddielovIV" type="xs:integer" />
			<xs:element name="PocetOddielovV" type="xs:integer" />
			<xs:element name="PocetOddielovVI" type="xs:integer" />
			<xs:element name="PocetOddielovVII" type="xs:integer" />
			<xs:element name="PocetInych" type="xs:integer" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrilohaType">
		<xs:sequence>
			<xs:element name="Obec" type="xs:string" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PozemkyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyF" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyG" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyH" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyI" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyJ" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyK" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyL" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyF" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<xsl:stylesheet version="2.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:z="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
    xmlns:fn="http://www.w3.org/2005/xpath-functions">

    <xsl:output method="text" encoding="utf-8" indent="no" />
    <xsl:preserve-space elements="*" />

    <xsl:template name="base_adresa">
        <xsl:param name="id_prefix" select="'Adresa '" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="showPoschodie" />
        <xsl:param name="typOsoby" />
        
        
        
        <xsl:if test="$id_prefix = 'FO'">
            <xsl:value-of select="concat($odsadenie, 'Adresa trvalého bydliska &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'FOP'">
            <xsl:value-of select="concat($odsadenie, 'Adresa miesta podnikania / sídlo &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'PO'">
            <xsl:value-of select="concat($odsadenie, 'Adresa sídla spoločnosti &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'MC'">
            <xsl:value-of select="concat($odsadenie, 'Adresa sídla &#10;')" />
        </xsl:if>
<!--         Ked neni dany typ osoby tak bude brat preddefinovanu hodnotu -->
        <xsl:if test="($id_prefix != 'FO') and ($id_prefix != 'PO') and ($id_prefix != 'FOP') and ($id_prefix != 'MC')">
            <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        </xsl:if>
        
            
        
        <xsl:for-each select="$values" >
            <xsl:if test="./*[local-name() = 'Meno']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'Priezvisko']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'ObchodneMenoNazov']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Obchodné meno / názov: ', ./*[local-name() = 'ObchodneMenoNazov'], '&#10;')"/>
            </xsl:if>
            
            <xsl:for-each select="./*[local-name() = 'UlicaACislo']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Ulica: ', ./*[local-name() = 'Ulica'], '&#10;')"/>
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Číslo: ', ./*[local-name() = 'SupisneCislo'], '/', ./*[local-name() = 'OrientacneCislo'], '&#10;')"/>
            </xsl:for-each>
            
            <xsl:if test="$showPoschodie = 'true'">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Poschodie a číslo bytu: ', ./*[local-name() = 'PoschodieACisloBytu'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'POBOX']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'P.O.Box: ', ./*[local-name() = 'POBOX'], '&#10;')"/>
            </xsl:if>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'PSČ: ', ./*[local-name() = 'PSC'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Obec: ', ./*[local-name() = 'Obec']/*[local-name() = 'Name'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Časť obce: ', ./*[local-name() = 'CastObce'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Štát: ', ./*[local-name() = 'Stat']/*[local-name() = 'Name'], '&#10;')"/>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_adresat_podania">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="adresatPodaniaMestoText" select="'Mesto'" />
        <xsl:param name="adresatPodaniaMCInyText" select="''" />

        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        <xsl:value-of select="concat($odsadenie, '&#09;', $id_prefix, ': ')"/>

        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mesto'">
            <xsl:value-of select="concat($adresatPodaniaMestoText, '&#10;')" />
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mestská časť'">
            <xsl:text>Mestská časť&#10;</xsl:text>
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', $values/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')"/>
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mesto a iný subjekt'">
            <xsl:value-of select="concat($adresatPodaniaMestoText, '&#10;')" />
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mestská časť a iný subjekt'">
            <xsl:text>Mestská časť&#10;</xsl:text>
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', $values/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], $adresatPodaniaMCInyText, '&#10;')"/>
        </xsl:if>
    </xsl:template>

    <xsl:template name="base_array_to_string">
        <xsl:param name="id_prefix" />
        <xsl:param name="value" />
        <xsl:param name="arrayName" />
        <xsl:param name="odsadenie" />
        <xsl:value-of select="concat($odsadenie, $id_prefix, ': ')" />
        
        <xsl:variable name="arraylengthPred" select="count($value/*[local-name() = $arrayName])" />
        
        <xsl:for-each select="$value/*[local-name() = $arrayName]">
            <xsl:variable name="i" select="position()" />
            <xsl:value-of select="./*[local-name() = 'Name']" />
            <xsl:if test="$i &lt; $arraylengthPred">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>&#10;</xsl:text>
    </xsl:template>

    <xsl:template name="base_date_with_name">
        <xsl:param name="title" />
        <xsl:param name="value" />
        <xsl:param name="odsadenie" />

        <xsl:if test="$value != ''">
            <xsl:value-of select="concat($odsadenie, $title, ': ')"/>
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr" select="$value"/>
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
        </xsl:if>
    </xsl:template>

    <xsl:template name="base_dorucenie">
        <xsl:param name="id_prefix" select="'Doručenie'" />
        <xsl:param name="doruceniePodania" select="'Doručenie podania'" />
        <xsl:param name="dorucenieOdpovede" select="'Doručenie odpovede'" />
        <xsl:param name="formaOdoslania" select="'Forma odoslania podania'" />
        <xsl:param name="formaDorucenia" select="'Forma doručenia odpovede'" />
        <xsl:param name="adresaDorucenia" select="'Adresa doručenia odpovede'" />
        <xsl:param name="miestoOsobnehoVyzdvihnutia" select="'Miesto osobného vyzdvihnutia odpovede'" />
        <xsl:param name="adresatPodaniaMestoText" select="'Mesto'" />
        <xsl:param name="adresatPodaniaMCInyText" select="''" />
        <xsl:param name="osobneNaInySubjektText" />
        <xsl:param name="osobneVyzdvihnutieInySubjektText" />
        <xsl:param name="values" />
        <xsl:value-of select="concat($id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat('&#09;',$doruceniePodania, '&#10;')" />
            
            <xsl:call-template name="base_adresat_podania">
                <xsl:with-param name="id_prefix" select="'Adresát podania'" />
                <xsl:with-param name="values" select="./*[local-name() = 'AdresatPodania']" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
                <xsl:with-param name="adresatPodaniaMestoText" select="$adresatPodaniaMestoText" />
                <xsl:with-param name="adresatPodaniaMCInyText" select="$adresatPodaniaMCInyText" />
            </xsl:call-template>
            <xsl:value-of select="concat('&#09;&#09;', $formaOdoslania,': ' , ./*[local-name() = 'FormaOdoslaniaZiadosti'], '&#10;')" />
            
            <xsl:text>&#09;Notifikácia&#10;</xsl:text>
            
            <xsl:value-of select="concat('&#09;&#09;', 'Žiadam o zasielanie notifikácii zo spracovania podania: ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'Checkbox']/*[local-name() = 'Notifikacia'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            
            <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']">
                <xsl:value-of select="concat('&#09;',$dorucenieOdpovede, '&#10;')" />
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Pošta'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Pošta','&#10;')" />
                    <xsl:call-template name="base_adresa">
                        <xsl:with-param name="id_prefix" select="$adresaDorucenia" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresaDoruceniaRozhodnutia']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Elektronická schránka'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Elektronická schránka (eDesk)','&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Osobne na iný subjekt'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': ', $osobneNaInySubjektText,'&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;&#09;', $miestoOsobnehoVyzdvihnutia, ': ', $osobneVyzdvihnutieInySubjektText, '&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Osobne'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Osobne','&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;&#09;', $miestoOsobnehoVyzdvihnutia, ': ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresatPodania'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresatPodania'] = 'Mestská časť'">
                        <xsl:value-of select="concat('&#09;&#09;&#09;', 'Mestská časť: ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')" />
                    </xsl:if>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Fax'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Fax','&#10;')" />
                    <xsl:call-template name="base_telefon">
                        <xsl:with-param name="id_prefix" select="'Fax: '" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'FaxPreDorucenie']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Telefonicky'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Telefonicky','&#10;')" />
                    <xsl:call-template name="base_telefon">
                        <xsl:with-param name="id_prefix" select="'Telefónne číslo / mobil: '" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TelefonPreDorucenie']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'E-mail'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': E-mail','&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;', 'E-mail: ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'EmailPreDorucenie'],'&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Bez odpovede'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Bez odpovede','&#10;')" />
                </xsl:if>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_kontaktne_udaje">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        
        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat($odsadenie,'&#09;', 'E-mail: ', ./*[local-name() = 'Email'], '&#10;')"/>
            
            <xsl:if test="$values/*[local-name() = 'TelefonneCisloCele']">
                <xsl:value-of select="concat($odsadenie,'&#09;', 'Telefónne číslo: ', ./*[local-name() = 'TelefonneCisloCele'], '&#10;')"/>                
            </xsl:if>
            <xsl:if test="$values/*[local-name() = 'TelefonneCislo']">
                <xsl:for-each select="./*[local-name() = 'TelefonneCislo']">
                    <xsl:value-of select="concat($odsadenie,'&#09;', 'Telefónne číslo: ', ./*[local-name() = 'MedzinarodneVolacieCislo'], ' ', ./*[local-name() = 'Predvolba'], ' ', ./*[local-name() = 'Cislo'], '&#10;')"/>
                </xsl:for-each>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'KontaktnaOsoba']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Kontaktná osoba', '&#10;')" />
                <xsl:for-each select="./*[local-name() = 'KontaktnaOsoba']">
                    <xsl:value-of select="concat($odsadenie, '&#09;&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')"/>
                    <xsl:value-of select="concat($odsadenie, '&#09;&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')"/>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_telefon">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />

        <xsl:value-of select="concat($odsadenie, $id_prefix)" />
        <xsl:value-of select="concat($values/*[local-name() = 'MedzinarodneVolacieCislo'], ' ')" />
        <xsl:value-of select="concat($values/*[local-name() = 'Predvolba'], ' ')" />
        <xsl:value-of select="concat($values/*[local-name() = 'Cislo'], '&#10;')" />
    </xsl:template>

    <xsl:template name="base_ziadatel">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="menoZastupcuText" select="'Meno zástupcu'" />
        <xsl:param name="priezviskoZastupcuText" select="'Priezvisko zástupcu'" />
        
        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Typ osoby: ', ./*[local-name() = 'TypOsoby']/*[local-name() = 'Name'], '&#10;')" />
            <xsl:for-each select="./*[local-name() = 'IdentifikaciaOsoby']">
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FO') or (../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FOP')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Rodné priezvisko: ', ./*[local-name() = 'RodnePriezvisko'], '&#10;')" />
                    <xsl:call-template name="base_array_to_string">
                        <xsl:with-param name="id_prefix" select="'Titul pred menom'" />
                        <xsl:with-param name="value" select="./*[local-name() = 'TitulyPredMenom']" />
                        <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        <xsl:with-param name="arrayName" select="'TitulPredMenom'" />
                    </xsl:call-template>
                    <xsl:call-template name="base_array_to_string">
                        <xsl:with-param name="id_prefix" select="'Titul za menom'" />
                        <xsl:with-param name="value" select="./*[local-name() = 'TitulyZaMenom']" />
                        <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        <xsl:with-param name="arrayName" select="'TitulZaMenom'" />
                    </xsl:call-template>
                    <xsl:if test="./*[local-name() = 'RodneCislo']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Rodné číslo: ', ./*[local-name() = 'RodneCislo'], '&#10;')"/>
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'DatumNarodenia']">
                        <xsl:call-template name="base_date_with_name">
                            <xsl:with-param name="title" select="'Dátum narodenia'" />
                            <xsl:with-param name="value" select="./*[local-name() = 'DatumNarodenia']" />
                            <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'CisloObcianskehoPreukazu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Číslo občianského preukazu: ', ./*[local-name() = 'CisloObcianskehoPreukazu'], '&#10;')"/>
                    </xsl:if>
                </xsl:if>
                
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'PO') or (../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FOP')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Obchodné meno / názov: ', ./*[local-name() = 'ObchodneMenoNazov'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Právna forma: ', ./*[local-name() = 'PravnaForma']/*[local-name() = 'Name'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'MenoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', $menoZastupcuText, ': ', ./*[local-name() = 'MenoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'PriezviskoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', $priezviskoZastupcuText, ': ', ./*[local-name() = 'PriezviskoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'IČO: ', ./*[local-name() = 'ICO'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                </xsl:if>
                
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FO')">                
                    <xsl:if test="./*[local-name() = 'DIC']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                    </xsl:if>
                </xsl:if>

                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'MC')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', ./*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'MenoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno zástupcu: ', ./*[local-name() = 'MenoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'PriezviskoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko zástupcu: ', ./*[local-name() = 'PriezviskoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'IČO: ', ./*[local-name() = 'ICO'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="format_date">
        <xsl:param name="instr"/>
        <!-- YYYY-MM-DD -->
        <xsl:variable name="yyyy">
            <xsl:value-of select="substring($instr,1,4)"/>
        </xsl:variable>
        <xsl:variable name="mm">
            <xsl:value-of select="substring($instr,6,2)"/>
        </xsl:variable>
        <xsl:variable name="dd">
            <xsl:value-of select="substring($instr,9,2)"/>
        </xsl:variable>

        <xsl:value-of select="concat($dd,'.',$mm,'.',$yyyy)"/>
    </xsl:template>

    <xsl:template name="zakladne_vyhlasenie">
        <xsl:param name="value" />

        <xsl:text>Vyhlásenie&#10;</xsl:text>
        <xsl:for-each select="$value" >
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'SpravnostUdajovText'], '&#10;')" />
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'SuhlasSoSpracovanimText'], '&#10;')" />
            <xsl:text>&#10;</xsl:text>
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'PoskytujemSuhlasText'], ': ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'PoskytujemSuhlas'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'NeposkytujemSuhlasText'], ': ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'NeposkytujemSuhlas'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>


    <xsl:template match="/z:E-form">
        <xsl:value-of select="concat(z:Meta/z:Name, '&#10;')" />

        <xsl:text>Priznanie&#10;</xsl:text>
        <xsl:value-of
            select="concat('&#09;', 'Druh priznania: ', z:Body/z:DruhPriznania/z:Name, '&#10;')" />
        <xsl:value-of select="concat('&#09;', 'Na rok: ', z:Body/z:NaRok, '&#10;')" />

        <xsl:call-template name="base_ziadatel">
            <xsl:with-param name="id_prefix" select="'Identifikačné údaje daňovníka'" />
            <xsl:with-param name="values" select="z:Body/z:Danovnik" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:call-template name="base_adresa">
            <xsl:with-param name="id_prefix" select="z:Body/z:Danovnik/z:TypOsoby/z:Code"/>
            <xsl:with-param name="values" select="z:Body/z:AdresaDanovnika" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:call-template name="base_kontaktne_udaje">
            <xsl:with-param name="id_prefix" select="'Kontaktné údaje'" />
            <xsl:with-param name="values"
                select="z:Body/z:KontaktneUdajeDanovnika" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:text>Oprávnená osoba&#10;</xsl:text>
        <xsl:text>&#09;Identifikačné údaje oprávnenej osoby&#10;</xsl:text>
        <xsl:value-of
            select="concat('&#09;&#09;', 'Právny vzťah: ', z:Body/z:OpravnenaOsoba/z:PravnyVztah/z:Name, '&#10;')" />
        <xsl:value-of
            select="concat('&#09;&#09;', 'Meno: ', z:Body/z:OpravnenaOsoba/z:Meno, '&#10;')" />
        <xsl:value-of
            select="concat('&#09;&#09;', 'Priezvisko: ', z:Body/z:OpravnenaOsoba/z:Priezvisko, '&#10;')" />
        <xsl:call-template name="base_array_to_string">
            <xsl:with-param name="id_prefix" select="'Titul pred menom'" />
            <xsl:with-param name="value" select="z:Body/z:OpravnenaOsoba/*[local-name() = 'TitulyPredMenom']" />
            <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            <xsl:with-param name="arrayName" select="'TitulPredMenom'" />
        </xsl:call-template>
        <xsl:call-template name="base_array_to_string">
            <xsl:with-param name="id_prefix" select="'Titul za menom'" />
            <xsl:with-param name="value" select="z:Body/z:OpravnenaOsoba/*[local-name() = 'TitulyZaMenom']" />
            <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            <xsl:with-param name="arrayName" select="'TitulZaMenom'" />
        </xsl:call-template>
        <xsl:value-of
            select="concat('&#09;&#09;', 'Obchodné meno / názov: ', z:Body/z:OpravnenaOsoba/z:ObchodneMenoNazov, '&#10;')" />
        <xsl:call-template name="base_adresa">
            <xsl:with-param name="id_prefix"
                select="'Adresa trvalého bydliska / Adresa sídla spoločnosti'" />
            <xsl:with-param name="values"
                select="z:Body/z:OpravnenaOsoba/z:AdresaOpravnenejOsoby" />
            <xsl:with-param name="odsadenie" select="'&#09;'" />
        </xsl:call-template>
        <xsl:call-template name="base_kontaktne_udaje">
            <xsl:with-param name="id_prefix" select="'Kontaktné údaje'" />
            <xsl:with-param name="values"
                select="z:Body/z:OpravnenaOsoba/z:KontaktneUdajeOpravnenejOsoby" />
            <xsl:with-param name="odsadenie" select="'&#09;'" />
        </xsl:call-template>

        <xsl:if test="z:Body/*[local-name() = 'DanZPozemkov']">
            <xsl:text>II. Oddiel - Daň z pozemkov&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZPozemkov/z:DanZPozemkovZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
                        
            <xsl:value-of
                select="concat('&#09;&#09;', 'Obec, kde sa pozemok nachádza: ', z:Obec, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:HodnotaPozemkuUrcenaZnalcom = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Hodnota pozemku určená znaleckým posudkom: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Hodnota pozemku určená znaleckým posudkom: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;Pozemky&#10;</xsl:text>
            <xsl:for-each
                select="z:Pozemky/*[local-name() = 'Pozemok']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', 'Poradové číslo záznamu ', ./z:PoradoveCislo, ':', '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Názov katastrálneho územia: ', ./z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Číslo parcely: ', ./z:CisloParcely, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Výmera pozemku: ', ./z:Vymera, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Druh pozemku: ', ./z:DruhPozemku/z:Name, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Využitie pozemku: ', ./z:VyuzitiePozemku, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumVznikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumZanikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
            </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZoStaviebJedenUcel']">
            <xsl:text>III. Oddiel - Daň zo stavieb - stavba slúžiaca na jeden účel&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZoStaviebJedenUcel/z:DanZoStaviebJedenUcelZaznam">
            
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa stavby'" />
                <xsl:with-param name="values"
                    select="z:AdresaStavby" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Predmet dane: ', z:PredmetDane/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Základ dane (výmera zastavanej plochy stavby, u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:ZakladDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet nadzemných a podzemných podlaží okrem prvého nadzemného podlažia: ', z:PocetPodlazi, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Celková výmera podlahových plôch všetkých podlaží stavby (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:CelkovaVymeraPodlahovychPloch, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahových plôch časti stavby, ktorá je oslobodená od dane zo stavieb (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:VymeraPlochOslobodenychOdDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
            </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZoStaviebViacereUcely']">
            <xsl:text>III. Oddiel - Daň zo stavieb - stavba slúžiaca na viaceré účely&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZoStaviebViacereUcely/z:DanZoStaviebViacereUcelyZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa stavby'" />
                <xsl:with-param name="values"
                    select="z:AdresaStavby" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Popis stavby: ', z:PopisStavby, '&#10;')" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Základ dane (výmera zastavanej plochy stavby, u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:ZakladDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Celková výmera podlahových plôch všetkých podlaží stavby (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:CelkovaVymeraPodlahovychPloch, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahových plôch časti stavby, ktorá je oslobodená od dane zo stavieb (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:VymeraPlochOslobodenychOdDane, '&#10;')" />
            <xsl:text>&#09;&#09;Výmera podlahových plôch časti stavby využívanej na jednotlivý účel (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu)&#10;</xsl:text>
            <xsl:for-each
                select="z:VymeraPlochNaJednotliveUcely/*[local-name() = 'VymeraPlochNaJednotlivyUcel']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', ./z:Ucel/z:Name, ': ', ./z:Vymera, '&#10;')" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet nadzemných a podzemných podlaží okrem prvého nadzemného podlažia: ', z:PocetPodlazi, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
        </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZBytovANebytovychPriestorov']">
            <xsl:text>IV. Oddiel - Daň z bytov a z nebytových priestorov v bytovom dome&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZBytovANebytovychPriestorov/z:DanZBytovANebytovychPriestorovZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa bytu'" />
                <xsl:with-param name="values"
                    select="z:AdresaBytu" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo bytu: ', z:CisloBytu, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Popis bytu: ', z:PopisBytu, '&#10;')" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:text>&#09;&#09;Základ dane (výmera podlahovej plochy u spoluvlastníkov vo výške ich spoluvlastníckeho podielu)&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'a) Bytu: ', z:ZakladDane/z:Byt, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'b) Nebytového priestoru v bytovom dome: ', z:ZakladDane/z:NebytovyPriestor, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahovej plochy bytu alebo časti bytu v bytovom dome, ktorý sa využíva na iný účel ako na bývanie: ', z:VymeraPodlahovejPlochyVyuzivanejNaIneUcely, '&#10;')" />
            <xsl:text>&#09;&#09;Byt alebo nebytový priestor v bytovom dome alebo ich časti oslobodené od dane z bytov&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'a) Výmera podlahovej plochy bytu alebo jeho časti: ', z:VymeraPlochOslobodenychOdDane/z:Byt, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'b) Výmera podlahovej plochy nebytového priestoru v bytovom dome alebo jeho časti: ', z:VymeraPlochOslobodenychOdDane/z:NebytovyPriestor, '&#10;')" />
            <xsl:text>&#09;&#09;Nebytové priestory&#10;</xsl:text>
            <xsl:for-each
                select="z:NebytovePriestory/*[local-name() = 'NebytovyPriestor']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', 'Nebytový priestor č.', ./z:PoradoveCislo, ':', '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Číslo nebytového priestoru v bytovom dome: ', ./z:CisloVBytovomDome, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Účel využitia nebytového priestoru v bytovom dome: ', ./z:UcelVyuzitiaVBytovomDome, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Výmera podlahových plôch nebytového priestoru v bytovom dome: ', ./z:VymeraPodlahovychPloch, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumVznikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumZanikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
        </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'Priloha']">
            <xsl:text>Príloha – Zníženie alebo oslobodenie od dane&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;', 'Obec: ', z:Body/z:Priloha/z:Obec, '&#10;')" />
            <xsl:text>&#09;K oddielu II. Pozemky&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) Pozemky vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) Pozemky, na ktorých sú cintoríny, kolumbáriá, urnové háje a rozptylové lúky: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) Močiare, plochy slatín a slancov, rašeliniská, remízky, háje vetrolamy a pásma hygienickej ochrany vodných zdrojov I. a II. stupňa, pásma ochrany prírodných liečivých zdrojov I. a II. stupňa a zdrojov prírodných minerálnych vôd stolových I. a II. stupňa: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) Časti pozemkov, na ktorých sú zriadené meračské značky, signály a iné zariadenia bodov, geodetických základov, stožiare rozvodu elektrickej energie, stĺpy telekomunikačného vedenia a televízne prevádzače, nadzemné časti zariadení na rozvod vykurovacích plynov a pásy pozemkov v lesoch vyčlenené na rozvod elektrickej energie a vykurovacích plynov: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) Pozemky verejne prístupných parkov, priestorov a športovísk: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;f) Pozemky v národných parkoch, chránených krajinných oblastiach, chránených areáloch, prírodných rezerváciách, národných prírodných rezerváciách, prírodných pamiatkach, národných prírodných pamiatkach, chránených krajinných prvkoch, vo vyhlásených ochranných pásmach s III. a IV. stupňom ochrany a územiach medzinárodného významu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyF = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;g) Pozemky funkčne spojené so stavbami slúžiacimi verejnej doprave: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyG = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;h) Pozemky užívané školami a školskými zariadeniami: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyH = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;i) Lesné pozemky od nasledujúceho roka po vzniku holiny do roku plánovaného začatia výchovnej ťažby (prvej prebierky): </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyI = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;j) Pozemky, ktorých hospodárske využívanie je obmedzené vzhľadom na podkopanie, ich umiestnenie v oblasti dobývacích priestorov alebo pásiem hygienickej ochrany vody II. a III. stupňa, ochranu a tvorbu životného prostredia, ich postihnutie ekologickým katastrofami, nadmerným imisným zaťažením, na pozemky rekultivované investičným zúrodňovaním okrem rekultivácii plne financovaných zo štátneho rozpočtu, na rokliny, výmole, vymedzené s kroviskami alebo kamením, pásma ochrany prírodných liečivých zdrojov II. a III. stupňa a zdrojov prírodných minerálnych vôd stolových II. a III. stupňa, na genofondové plochy, brehové porasty a iné plochy stromovej a krovinatej vegetácie na nelesných pozemkoch s pôdoochranou, ekologickou alebo krajinotvornou funkciou: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyJ = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;k) Pozemky, ktorých vlastníkmi sú fyzické osoby v hmotnej núdzi alebo fyzické osoby staršie ako 62 rokov, ak tieto pozemky slúžia výhradne na ich osobnú potrebu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyK = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;l) pozemky okrem pozemkov v zastavanej časti obce, na ktorých vykonávajú samostatne hospodáriaci roľníci poľnohospodársku výrobu ako svoju hlavnú činnosť: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyL = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
    
            <xsl:text>&#09;K oddielu III. - Stavby&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) stavby vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) stavby slúžiace školám, školským zariadeniam a zdravotníckym zariadeniam, zariadeniam na pracovnú rehabilitáciu a rekvalifikáciu občanov so zmenenou pracovnou schopnosťou, stavby užívané na účely sociálnej pomoci a múzeá, galérie, knižnice, divadlá, kiná, amfiteátre, výstavné siene, osvetové zariadenia: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) stavby, ktorých využitie je obmedzené z dôvodu rozsiahlej rekonštrukcie, stavebnej uzávery alebo umiestnenia na podkopanom pozemku: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) stavby na bývanie vo vlastníctve fyzických osôb v hmotnej núdzi, fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ako aj prevažne alebo úplne bezvládnych fyzických osôb, ktoré slúžia na ich trvalé bývanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) garáže vo vlastníctve fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ktoré slúžia pre motorové vozidlo používané na ich dopravu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;f) stavby na pôdohospodársku produkciu, skleníky, stavby využívané na skladovanie vlastnej pôdohospodárskej produkcie, stavby pre vodné hospodárstvo okrem stavieb na skladovanie inej ako vlastnej pôdohospodárskej produkcie a stavieb na administratívu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyF = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
    
            <xsl:text>&#09;K oddielu IV. - Byty&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) byty vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) byty slúžiace školám, školským zariadeniam a zdravotníckym zariadeniam, zariadeniam na pracovnú rehabilitáciu a rekvalifikáciu občanov so zmenenou pracovnou schopnosťou: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) byty, ktorých využitie je obmedzené z dôvodu rozsiahlej rekonštrukcie, stavebnej uzávery alebo umiestnenia na podkopanom pozemku: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) byty vo vlastníctve fyzických osôb v hmotnej núdzi, fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ako aj prevažne alebo úplne bezvládnych fyzických osôb, ktoré slúžia na ich trvalé bývanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) nebytové priestory v bytových domoch slúžiace ako garáž vo vlastníctve fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ktoré slúžia pre motorové vozidlo používané na ich dopravu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;', 'Poznámka: ', z:Body/z:Priloha/z:Poznamka, '&#10;')" />
        </xsl:if>
        
            <xsl:text>Súhrn príloh &#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh II. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh III. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovIII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh IV. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovIV, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh V. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovV, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh VI. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovVI, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh VII. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovVII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet iných príloh: ', z:Body/z:SuhrnPriloh/z:PocetInych, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Poznámka: ', z:Body/z:SuhrnPriloh/z:Poznamka, '&#10;')" />
        
        <xsl:call-template name="base_dorucenie">
            <xsl:with-param name="values" select="z:Body/z:Dorucenie" />
        </xsl:call-template>
        
        <xsl:call-template name="zakladne_vyhlasenie">
            <xsl:with-param name="value" select="z:Body/z:ZakladneVyhlasenie" />
        </xsl:call-template>

    </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><E-form xmlns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"><Meta><ID>esmao.eforms.bratislava.obec_024</ID><Name>Ohlásenie o vzniku, zániku alebo zmene daňovej povinnosti k dani z nehnuteľností</Name><Gestor>ESMaO</Gestor><RecipientId>ico://sk/00603481</RecipientId><Version>201501.2</Version><ZepRequired>false</ZepRequired></Meta><Body><DruhPriznania><Code>0</Code><Name>Priznanie</Name><WsEnumCode>ICL0020</WsEnumCode></DruhPriznania><NaRok>2024</NaRok><Danovnik><TypOsoby><Code>FO</Code><Name>fyzická osoba</Name><WsEnumCode>ICL0096</WsEnumCode></TypOsoby><IdentifikaciaOsoby><Meno>Peter</Meno><Priezvisko>AAA Skúšobné s r .o</Priezvisko><DatumNarodenia>1992-03-14+01:00</DatumNarodenia><RodneCislo>9203146326</RodneCislo></IdentifikaciaOsoby></Danovnik><AdresaDanovnika><Meno>Peter</Meno><Priezvisko>AAA Skúšobné s r .o</Priezvisko><UlicaACislo><Ulica>Robotnícka</Ulica><OrientacneCislo>6</OrientacneCislo></UlicaACislo><PSC>83103</PSC><Obec><Name>Bratislava</Name></Obec><Stat><Code>703</Code><Name>Slovenská republika</Name><WsEnumCode>0086</WsEnumCode></Stat></AdresaDanovnika><KontaktneUdajeDanovnika><TelefonneCislo><MedzinarodneVolacieCislo>+421</MedzinarodneVolacieCislo><Predvolba>948</Predvolba><Cislo>111111</Cislo></TelefonneCislo><Email>meno@gmail.com</Email></KontaktneUdajeDanovnika><DanZPozemkov><DanZPozemkovZaznam><PoradoveCislo>1</PoradoveCislo><RodneCislo>9203146326</RodneCislo><Obec>Bratislava</Obec><DruhyZmien><DruhZmeny><Code>A</Code><Name>Orná pôda, vinice, chmelnice, ovocné sady</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>B</Code><Name>Trvalé trávnaté porasty</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>C</Code><Name>Záhrady</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>D</Code><Name>Lesné pozemky, na ktorých sú hospodárske lesy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>E</Code><Name>Rybníky s chovom rýb a ostatné hospodárske vzužívané vodné plochy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>F</Code><Name>Zastavné plochy a nádvoria</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>G</Code><Name>Stavebné pozemky</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>H</Code><Name>Ostatné plochy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny></DruhyZmien><HodnotaPozemkuUrcenaZnalcom>false</HodnotaPozemkuUrcenaZnalcom><PravnyVztah><Code>0</Code><Name>Vlastník</Name><WsEnumCode>ICL0038</WsEnumCode></PravnyVztah><Pozemky><Pozemok><PoradoveCislo>1</PoradoveCislo><NazovKatastralnehoUzemia><Code>804690</Code><Name>Nové Mesto</Name><WsEnumCode>ICL0079</WsEnumCode></NazovKatastralnehoUzemia><CisloParcely>2567/0</CisloParcely><Vymera>34.74</Vymera><DruhPozemku><Code>E</Code><Name>Rybníky s chovom rýb a ostatné hospodárske vzužívané vodné plochy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhPozemku></Pozemok></Pozemky></DanZPozemkovZaznam></DanZPozemkov><Priloha><Obec>Bratislava</Obec><PozemkyA>false</PozemkyA><PozemkyB>false</PozemkyB><PozemkyC>true</PozemkyC><PozemkyD>false</PozemkyD><PozemkyE>false</PozemkyE><PozemkyF>false</PozemkyF><PozemkyG>false</PozemkyG><PozemkyH>false</PozemkyH><PozemkyI>false</PozemkyI><PozemkyJ>false</PozemkyJ><PozemkyK>true</PozemkyK><PozemkyL>false</PozemkyL><StavbyA>false</StavbyA><StavbyB>false</StavbyB><StavbyC>false</StavbyC><StavbyD>false</StavbyD><StavbyE>false</StavbyE><StavbyF>false</StavbyF><BytyA>false</BytyA><BytyB>false</BytyB><BytyC>false</BytyC><BytyD>false</BytyD><BytyE>false</BytyE></Priloha><SuhrnPriloh><PocetOddielovII>1</PocetOddielovII><PocetOddielovIII>0</PocetOddielovIII><PocetOddielovIV>0</PocetOddielovIV><PocetOddielovV>0</PocetOddielovV><PocetOddielovVI>0</PocetOddielovVI><PocetOddielovVII>0</PocetOddielovVII><PocetInych>1</PocetInych><Poznamka>Tento dokument bol vygenerovaný pomocou Bratislavského konta.</Poznamka></SuhrnPriloh><DatumZadaniaPodania>2024-01-01T01:00:00.000+01:00</DatumZadaniaPodania><ZakladneVyhlasenie><SpravnostUdajovText>Všeobecné informácie o poskytnutí, spracovaní a ochrane osobných údajov nájdete na https://esluzby.bratislava.sk/page/ochrana-osobnych-udajov</SpravnostUdajovText><SuhlasSoSpracovanimText>Týmto dávam na základe slobodnej vôle súhlas na spracovanie mojich osobných údajov uvedených vo formulári tohto podania a získaných z môjho osobného dokladu za v zmysle Nariadenia európskeho parlamentu a rady EÚ 2016/679 o ochrane fyzických osôb pri spracúvaní osobných údajov a o voľnom pohybe takýchto údajov a zákona č. 18/2018 Z.z. o ochrane osobných údajov a o zmene a doplnení niektorých zákonov. Zároveň potvrdzujem dovŕšenie veku 16 rokov pre potreby spracovania osobných údajov. Osobné údaje poskytujem za účelom spracovania mojej žiadosti.</SuhlasSoSpracovanimText><PoskytujemSuhlas>true</PoskytujemSuhlas><PoskytujemSuhlasText>Poskytujem súhlas na spracovanie osobných údajov</PoskytujemSuhlasText><NeposkytujemSuhlas>false</NeposkytujemSuhlas><NeposkytujemSuhlasText>Neposkytujem súhlas na spracovanie osobných údajov</NeposkytujemSuhlasText></ZakladneVyhlasenie><Dorucenie><AdresatPodania><AdresatPodania>Mesto</AdresatPodania></AdresatPodania><Checkbox><Notifikacia>true</Notifikacia></Checkbox><FormaOdoslaniaZiadosti>Elektronicky</FormaOdoslaniaZiadosti><FormaDoruceniaRozhodnutia><TypSposobuDorucenia>Elektronická schránka</TypSposobuDorucenia></FormaDoruceniaRozhodnutia></Dorucenie></Body></E-form>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2",
  "xslMediaDestinationTypeDescription": "TXT",
  "xslReferenceURI": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > priznanieKDaniZNehnutelnostiExample2 > should generate correct signer data 1`] = `
{
  "objectDescription": "",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2",
  "objectId": "object_123e4567-e89b-12d3-a456-426614174000",
  "signatureId": "form_data_4a78fc79ad177c36a94275efcde428cc2c10feee_20240101000000",
  "xdcIdentifier": "",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="utf-8"?>
<xs:schema elementFormDefault="qualified"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
	xmlns:tns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
	xmlns:base="http://schemas.gov.sk/form/esmao/base/1.0" targetNamespace="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2">
	<xs:complexType name="AdresaType">
		<xs:sequence>
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="UlicaACislo" type="UlicaACisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="POBOX" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PoschodieACisloBytu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PSC" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Obec" type="EnumerationValueType" />
			<xs:element name="CastObce" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Stat" type="StatType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="AdresatPodaniaEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Mesto" />
			<xs:enumeration value="Mestská časť" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AdresatPodaniaType">
		<xs:sequence>
			<xs:element name="AdresatPodania" type="AdresatPodaniaEnumType" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CheckboxType">
		<xs:sequence>
			<xs:element name="Notifikacia" type="xs:boolean" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="DesatinneCisloPresnostNaDveDesatinneMiesta">
		<xs:restriction base="xs:decimal">
			<xs:fractionDigits value="2" />
			<xs:minInclusive value="0" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DorucenieType">
		<xs:sequence>
			<xs:element name="AdresatPodania" type="AdresatPodaniaType" />
			<xs:element name="Checkbox" type="CheckboxType" minOccurs="0" />
			<xs:element name="FormaOdoslaniaZiadosti" type="FormaOdoslaniaZiadostiEnumType" />
			<xs:element name="FormaDoruceniaRozhodnutia" type="FormaDoruceniaRozhodnutiaType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
    <xs:complexType name="E-formMetaType">
    <xs:annotation>
      <xs:documentation>Metaúdaje elektronického formulára</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ID" type="xs:string" />
      <xs:element name="Name" type="xs:string" />
      <xs:element name="Description" type="xs:string" minOccurs="0" />
      <xs:element name="Gestor" type="xs:string" />
      <xs:element name="RecipientId" type="xs:string" />
      <xs:element name="Version" type="xs:string" />
      <xs:element name="ZepRequired" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
	<xs:simpleType name="EMailType">
		<xs:restriction base="xs:string">
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="EnumerationType" abstract="true">
		<xs:annotation>
			<xs:documentation>Položka číselníka</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="xs:string">
				<xs:annotation>
					<xs:documentation>Kód</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Názov</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WsEnumCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Kod ciselnika WS sluzby</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EnumerationValueType">
		<xs:sequence>
			<xs:element name="Code" type="xs:string" minOccurs="0" />
			<xs:element name="Name" type="xs:string" />
			<xs:element name="WsEnumCode" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="FormaDoruceniaRozhodnutiaEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Pošta" />
			<xs:enumeration value="Elektronická schránka" />
			<xs:enumeration value="Osobne" />
			<xs:enumeration value="Fax" />
			<xs:enumeration value="Telefonicky" />
			<xs:enumeration value="E-mail" />
			<xs:enumeration value="Bez odpovede" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="FormaDoruceniaRozhodnutiaType">
		<xs:sequence>
			<xs:element name="TypSposobuDorucenia" type="FormaDoruceniaRozhodnutiaEnumType" />
			<xs:element name="AdresaDoruceniaRozhodnutia" type="AdresaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresatPodania" type="AdresatPodaniaEnumType" minOccurs="0" maxOccurs="1" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="FaxPreDorucenie" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TelefonPreDorucenie" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="EmailPreDorucenie" type="EMailType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="FormaOdoslaniaZiadostiEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Elektronicky" />
			<xs:enumeration value="Listinne" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="IdentifikaciaOsobyType">
		<xs:sequence>
			<xs:element name="TitulyPredMenom" type="TitulyPredMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodnePriezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyZaMenom" type="TitulyZaMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumNarodenia" type="xs:date" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCislo" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="CisloObcianskehoPreukazu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="MenoZastupcu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PriezviskoZastupcu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DIC" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{10}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PravnaForma" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="KodKrajinyType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{3}" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="KontaktnaOsobaType">
		<xs:sequence>
			<xs:element name="Meno" type="xs:string" />
			<xs:element name="Priezvisko" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="KontaktneUdajeType">
		<xs:sequence>
			<xs:element name="TelefonneCislo" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TelefonneCisloCele" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Email" type="EMailType" minOccurs="0" maxOccurs="1" />
			<xs:element name="KontaktnaOsoba" type="KontaktnaOsobaType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OpravnenaOsobaType">
		<xs:sequence>
			<xs:element name="PravnyVztah" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyPredMenom" type="TitulyPredMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyZaMenom" type="TitulyZaMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaOpravnenejOsoby" type="AdresaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="KontaktneUdajeOpravnenejOsoby" type="KontaktneUdajeType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OsobneUdajeType">
		<xs:sequence>
			<xs:element name="TypOsoby" type="EnumerationValueType" />
			<xs:element name="IdentifikaciaOsoby" type="IdentifikaciaOsobyType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrilohyType">
		<xs:sequence>
			<xs:element name="Priloha" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="RodneCisloType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{9,10}" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="StatType">
		<xs:complexContent>
			<xs:restriction base="EnumerationType">
				<xs:sequence>
					<xs:element name="Code" type="KodKrajinyType" />
					<xs:element name="Name" type="xs:string" />
					<xs:element name="WsEnumCode" type="xs:string" minOccurs="0" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TelefonneCisloType">
		<xs:sequence>
			<xs:element name="MedzinarodneVolacieCislo">
				<xs:simpleType>
					<xs:restriction base="xs:string">
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Predvolba">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[1-9][0-9]*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Cislo">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TitulyPredMenomType">
		<xs:sequence>
			<xs:element name="TitulPredMenom" type="EnumerationValueType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TitulyZaMenomType">
		<xs:sequence>
			<xs:element name="TitulZaMenom" type="EnumerationValueType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UlicaACisloType">
		<xs:sequence>
			<xs:element name="Ulica" type="xs:string" />
			<xs:element name="SupisneCislo" type="xs:integer" minOccurs="0" maxOccurs="1" />
			<xs:element name="OrientacneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZakladneVyhlasenieType">
		<xs:sequence>
			<xs:element name="SpravnostUdajovText" type="xs:string" />
			<xs:element name="SuhlasSoSpracovanimText" type="xs:string" />
			<xs:element name="PoskytujemSuhlas" type="xs:boolean" default="false" />
			<xs:element name="PoskytujemSuhlasText" type="xs:string" />
			<xs:element name="NeposkytujemSuhlas" type="xs:boolean" default="false" />
			<xs:element name="NeposkytujemSuhlasText" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="E-form">
		<xs:complexType>
			<xs:sequence>
                <xs:element name="Meta" type="E-formMetaType" />
				<xs:element name="Body">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="InstanceID" type="xs:string" minOccurs="0" />
							<xs:element name="DruhPriznania" type="EnumerationValueType" />
							<xs:element name="NaRok" type="xs:nonNegativeInteger" />
							<xs:element name="Danovnik" type="OsobneUdajeType" />
							<xs:element name="AdresaDanovnika" type="AdresaType" />
							<xs:element name="OpravnenaOsoba" type="OpravnenaOsobaType" minOccurs="0" maxOccurs="1" />
							<xs:element name="KontaktneUdajeDanovnika" type="KontaktneUdajeType" minOccurs="0" />
							<xs:element name="DanZPozemkov" type="DanZPozemkovType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZoStaviebJedenUcel" type="DanZoStaviebJedenUcelType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZoStaviebViacereUcely" type="DanZoStaviebViacereUcelyType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZBytovANebytovychPriestorov" type="DanZBytovANebytovychPriestorovType" minOccurs="0" maxOccurs="1" />
							<xs:element name="Priloha" type="PrilohaType" minOccurs="0" maxOccurs="1" />
							<xs:element name="SuhrnPriloh" type="SuhrnPrilohType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DatumZadaniaPodania" type="xs:dateTime" minOccurs="0" maxOccurs="1" />
							<xs:element name="ZakladneVyhlasenie" type="ZakladneVyhlasenieType" />
							<xs:element name="Prilohy" type="PrilohyType" minOccurs="0" maxOccurs="1" />
							<xs:element name="Dorucenie" type="DorucenieType" />
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="DanZPozemkovType">
		<xs:sequence>
			<xs:element name="DanZPozemkovZaznam" type="DanZPozemkovZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZPozemkovZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Obec" type="xs:string" />
			<xs:element name="DruhyZmien" type="DruhyZmienType" />
			<xs:element name="HodnotaPozemkuUrcenaZnalcom" type="xs:boolean" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="Pozemky" type="PozemkyType" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DruhyZmienType">
		<xs:sequence>
			<xs:element name="DruhZmeny" type="EnumerationValueType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PozemkyType">
		<xs:sequence>
			<xs:element name="Pozemok" type="PozemokType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PozemokType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="Vymera" type="DesatinneCisloPresnostNaDveDesatinneMiesta" />
			<xs:element name="DruhPozemku" type="EnumerationValueType" />
			<xs:element name="VyuzitiePozemku" type="xs:string" minOccurs="0" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebJedenUcelType">
		<xs:sequence>
			<xs:element name="DanZoStaviebJedenUcelZaznam" type="DanZoStaviebJedenUcelZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebJedenUcelZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaStavby" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="PredmetDane" type="EnumerationValueType" />
			<xs:element name="ZakladDane" type="xs:nonNegativeInteger" />
			<xs:element name="PocetPodlazi" type="xs:nonNegativeInteger" />
			<xs:element name="CelkovaVymeraPodlahovychPloch" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebViacereUcelyType">
		<xs:sequence>
			<xs:element name="DanZoStaviebViacereUcelyZaznam" type="DanZoStaviebViacereUcelyZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebViacereUcelyZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaStavby" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="PopisStavby" type="xs:string" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="ZakladDane" type="xs:nonNegativeInteger" />
			<xs:element name="CelkovaVymeraPodlahovychPloch" type="xs:nonNegativeInteger" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochNaJednotliveUcely" type="VymeraPlochNaJednotliveUcelyType" />
			<xs:element name="PocetPodlazi" type="xs:nonNegativeInteger" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochNaJednotliveUcelyType">
		<xs:sequence>
			<xs:element name="VymeraPlochNaJednotlivyUcel" type="VymeraPlochNaJednotlivyUcelType" minOccurs="9" maxOccurs="9" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochNaJednotlivyUcelType">
		<xs:sequence>
			<xs:element name="Ucel" type="EnumerationValueType" />
			<xs:element name="Vymera" type="DesatinneCisloPresnostNaDveDesatinneMiesta" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZBytovANebytovychPriestorovType">
		<xs:sequence>
			<xs:element name="DanZBytovANebytovychPriestorovZaznam" type="DanZBytovANebytovychPriestorovZaznamType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZBytovANebytovychPriestorovZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaBytu" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" minOccurs="0" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="CisloBytu" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="PopisBytu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="NebytovePriestory" type="NebytovePriestoryType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ZakladDane" type="ZakladDaneType" />
			<xs:element name="VymeraPodlahovejPlochyVyuzivanejNaIneUcely" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="VymeraPlochOslobodenychOdDaneType" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZakladDaneType">
		<xs:sequence>
			<xs:element name="Byt" type="xs:nonNegativeInteger" />
			<xs:element name="NebytovyPriestor" type="xs:nonNegativeInteger" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochOslobodenychOdDaneType">
		<xs:sequence>
			<xs:element name="Byt" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="NebytovyPriestor" type="xs:nonNegativeInteger" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NebytovePriestoryType">
		<xs:sequence>
			<xs:element name="NebytovyPriestor" type="NebytovyPriestorType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NebytovyPriestorType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="CisloVBytovomDome" type="xs:string" />
			<xs:element name="UcelVyuzitiaVBytovomDome" type="xs:string" />
			<xs:element name="VymeraPodlahovychPloch" type="xs:nonNegativeInteger" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SuhrnPrilohType">
		<xs:sequence>
			<xs:element name="PocetOddielovII" type="xs:integer" />
			<xs:element name="PocetOddielovIII" type="xs:integer" />
			<xs:element name="PocetOddielovIV" type="xs:integer" />
			<xs:element name="PocetOddielovV" type="xs:integer" />
			<xs:element name="PocetOddielovVI" type="xs:integer" />
			<xs:element name="PocetOddielovVII" type="xs:integer" />
			<xs:element name="PocetInych" type="xs:integer" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrilohaType">
		<xs:sequence>
			<xs:element name="Obec" type="xs:string" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PozemkyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyF" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyG" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyH" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyI" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyJ" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyK" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyL" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyF" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<xsl:stylesheet version="2.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:z="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
    xmlns:fn="http://www.w3.org/2005/xpath-functions">

    <xsl:output method="text" encoding="utf-8" indent="no" />
    <xsl:preserve-space elements="*" />

    <xsl:template name="base_adresa">
        <xsl:param name="id_prefix" select="'Adresa '" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="showPoschodie" />
        <xsl:param name="typOsoby" />
        
        
        
        <xsl:if test="$id_prefix = 'FO'">
            <xsl:value-of select="concat($odsadenie, 'Adresa trvalého bydliska &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'FOP'">
            <xsl:value-of select="concat($odsadenie, 'Adresa miesta podnikania / sídlo &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'PO'">
            <xsl:value-of select="concat($odsadenie, 'Adresa sídla spoločnosti &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'MC'">
            <xsl:value-of select="concat($odsadenie, 'Adresa sídla &#10;')" />
        </xsl:if>
<!--         Ked neni dany typ osoby tak bude brat preddefinovanu hodnotu -->
        <xsl:if test="($id_prefix != 'FO') and ($id_prefix != 'PO') and ($id_prefix != 'FOP') and ($id_prefix != 'MC')">
            <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        </xsl:if>
        
            
        
        <xsl:for-each select="$values" >
            <xsl:if test="./*[local-name() = 'Meno']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'Priezvisko']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'ObchodneMenoNazov']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Obchodné meno / názov: ', ./*[local-name() = 'ObchodneMenoNazov'], '&#10;')"/>
            </xsl:if>
            
            <xsl:for-each select="./*[local-name() = 'UlicaACislo']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Ulica: ', ./*[local-name() = 'Ulica'], '&#10;')"/>
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Číslo: ', ./*[local-name() = 'SupisneCislo'], '/', ./*[local-name() = 'OrientacneCislo'], '&#10;')"/>
            </xsl:for-each>
            
            <xsl:if test="$showPoschodie = 'true'">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Poschodie a číslo bytu: ', ./*[local-name() = 'PoschodieACisloBytu'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'POBOX']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'P.O.Box: ', ./*[local-name() = 'POBOX'], '&#10;')"/>
            </xsl:if>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'PSČ: ', ./*[local-name() = 'PSC'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Obec: ', ./*[local-name() = 'Obec']/*[local-name() = 'Name'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Časť obce: ', ./*[local-name() = 'CastObce'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Štát: ', ./*[local-name() = 'Stat']/*[local-name() = 'Name'], '&#10;')"/>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_adresat_podania">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="adresatPodaniaMestoText" select="'Mesto'" />
        <xsl:param name="adresatPodaniaMCInyText" select="''" />

        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        <xsl:value-of select="concat($odsadenie, '&#09;', $id_prefix, ': ')"/>

        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mesto'">
            <xsl:value-of select="concat($adresatPodaniaMestoText, '&#10;')" />
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mestská časť'">
            <xsl:text>Mestská časť&#10;</xsl:text>
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', $values/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')"/>
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mesto a iný subjekt'">
            <xsl:value-of select="concat($adresatPodaniaMestoText, '&#10;')" />
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mestská časť a iný subjekt'">
            <xsl:text>Mestská časť&#10;</xsl:text>
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', $values/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], $adresatPodaniaMCInyText, '&#10;')"/>
        </xsl:if>
    </xsl:template>

    <xsl:template name="base_array_to_string">
        <xsl:param name="id_prefix" />
        <xsl:param name="value" />
        <xsl:param name="arrayName" />
        <xsl:param name="odsadenie" />
        <xsl:value-of select="concat($odsadenie, $id_prefix, ': ')" />
        
        <xsl:variable name="arraylengthPred" select="count($value/*[local-name() = $arrayName])" />
        
        <xsl:for-each select="$value/*[local-name() = $arrayName]">
            <xsl:variable name="i" select="position()" />
            <xsl:value-of select="./*[local-name() = 'Name']" />
            <xsl:if test="$i &lt; $arraylengthPred">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>&#10;</xsl:text>
    </xsl:template>

    <xsl:template name="base_date_with_name">
        <xsl:param name="title" />
        <xsl:param name="value" />
        <xsl:param name="odsadenie" />

        <xsl:if test="$value != ''">
            <xsl:value-of select="concat($odsadenie, $title, ': ')"/>
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr" select="$value"/>
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
        </xsl:if>
    </xsl:template>

    <xsl:template name="base_dorucenie">
        <xsl:param name="id_prefix" select="'Doručenie'" />
        <xsl:param name="doruceniePodania" select="'Doručenie podania'" />
        <xsl:param name="dorucenieOdpovede" select="'Doručenie odpovede'" />
        <xsl:param name="formaOdoslania" select="'Forma odoslania podania'" />
        <xsl:param name="formaDorucenia" select="'Forma doručenia odpovede'" />
        <xsl:param name="adresaDorucenia" select="'Adresa doručenia odpovede'" />
        <xsl:param name="miestoOsobnehoVyzdvihnutia" select="'Miesto osobného vyzdvihnutia odpovede'" />
        <xsl:param name="adresatPodaniaMestoText" select="'Mesto'" />
        <xsl:param name="adresatPodaniaMCInyText" select="''" />
        <xsl:param name="osobneNaInySubjektText" />
        <xsl:param name="osobneVyzdvihnutieInySubjektText" />
        <xsl:param name="values" />
        <xsl:value-of select="concat($id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat('&#09;',$doruceniePodania, '&#10;')" />
            
            <xsl:call-template name="base_adresat_podania">
                <xsl:with-param name="id_prefix" select="'Adresát podania'" />
                <xsl:with-param name="values" select="./*[local-name() = 'AdresatPodania']" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
                <xsl:with-param name="adresatPodaniaMestoText" select="$adresatPodaniaMestoText" />
                <xsl:with-param name="adresatPodaniaMCInyText" select="$adresatPodaniaMCInyText" />
            </xsl:call-template>
            <xsl:value-of select="concat('&#09;&#09;', $formaOdoslania,': ' , ./*[local-name() = 'FormaOdoslaniaZiadosti'], '&#10;')" />
            
            <xsl:text>&#09;Notifikácia&#10;</xsl:text>
            
            <xsl:value-of select="concat('&#09;&#09;', 'Žiadam o zasielanie notifikácii zo spracovania podania: ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'Checkbox']/*[local-name() = 'Notifikacia'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            
            <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']">
                <xsl:value-of select="concat('&#09;',$dorucenieOdpovede, '&#10;')" />
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Pošta'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Pošta','&#10;')" />
                    <xsl:call-template name="base_adresa">
                        <xsl:with-param name="id_prefix" select="$adresaDorucenia" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresaDoruceniaRozhodnutia']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Elektronická schránka'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Elektronická schránka (eDesk)','&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Osobne na iný subjekt'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': ', $osobneNaInySubjektText,'&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;&#09;', $miestoOsobnehoVyzdvihnutia, ': ', $osobneVyzdvihnutieInySubjektText, '&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Osobne'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Osobne','&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;&#09;', $miestoOsobnehoVyzdvihnutia, ': ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresatPodania'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresatPodania'] = 'Mestská časť'">
                        <xsl:value-of select="concat('&#09;&#09;&#09;', 'Mestská časť: ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')" />
                    </xsl:if>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Fax'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Fax','&#10;')" />
                    <xsl:call-template name="base_telefon">
                        <xsl:with-param name="id_prefix" select="'Fax: '" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'FaxPreDorucenie']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Telefonicky'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Telefonicky','&#10;')" />
                    <xsl:call-template name="base_telefon">
                        <xsl:with-param name="id_prefix" select="'Telefónne číslo / mobil: '" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TelefonPreDorucenie']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'E-mail'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': E-mail','&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;', 'E-mail: ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'EmailPreDorucenie'],'&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Bez odpovede'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Bez odpovede','&#10;')" />
                </xsl:if>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_kontaktne_udaje">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        
        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat($odsadenie,'&#09;', 'E-mail: ', ./*[local-name() = 'Email'], '&#10;')"/>
            
            <xsl:if test="$values/*[local-name() = 'TelefonneCisloCele']">
                <xsl:value-of select="concat($odsadenie,'&#09;', 'Telefónne číslo: ', ./*[local-name() = 'TelefonneCisloCele'], '&#10;')"/>                
            </xsl:if>
            <xsl:if test="$values/*[local-name() = 'TelefonneCislo']">
                <xsl:for-each select="./*[local-name() = 'TelefonneCislo']">
                    <xsl:value-of select="concat($odsadenie,'&#09;', 'Telefónne číslo: ', ./*[local-name() = 'MedzinarodneVolacieCislo'], ' ', ./*[local-name() = 'Predvolba'], ' ', ./*[local-name() = 'Cislo'], '&#10;')"/>
                </xsl:for-each>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'KontaktnaOsoba']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Kontaktná osoba', '&#10;')" />
                <xsl:for-each select="./*[local-name() = 'KontaktnaOsoba']">
                    <xsl:value-of select="concat($odsadenie, '&#09;&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')"/>
                    <xsl:value-of select="concat($odsadenie, '&#09;&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')"/>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_telefon">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />

        <xsl:value-of select="concat($odsadenie, $id_prefix)" />
        <xsl:value-of select="concat($values/*[local-name() = 'MedzinarodneVolacieCislo'], ' ')" />
        <xsl:value-of select="concat($values/*[local-name() = 'Predvolba'], ' ')" />
        <xsl:value-of select="concat($values/*[local-name() = 'Cislo'], '&#10;')" />
    </xsl:template>

    <xsl:template name="base_ziadatel">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="menoZastupcuText" select="'Meno zástupcu'" />
        <xsl:param name="priezviskoZastupcuText" select="'Priezvisko zástupcu'" />
        
        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Typ osoby: ', ./*[local-name() = 'TypOsoby']/*[local-name() = 'Name'], '&#10;')" />
            <xsl:for-each select="./*[local-name() = 'IdentifikaciaOsoby']">
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FO') or (../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FOP')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Rodné priezvisko: ', ./*[local-name() = 'RodnePriezvisko'], '&#10;')" />
                    <xsl:call-template name="base_array_to_string">
                        <xsl:with-param name="id_prefix" select="'Titul pred menom'" />
                        <xsl:with-param name="value" select="./*[local-name() = 'TitulyPredMenom']" />
                        <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        <xsl:with-param name="arrayName" select="'TitulPredMenom'" />
                    </xsl:call-template>
                    <xsl:call-template name="base_array_to_string">
                        <xsl:with-param name="id_prefix" select="'Titul za menom'" />
                        <xsl:with-param name="value" select="./*[local-name() = 'TitulyZaMenom']" />
                        <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        <xsl:with-param name="arrayName" select="'TitulZaMenom'" />
                    </xsl:call-template>
                    <xsl:if test="./*[local-name() = 'RodneCislo']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Rodné číslo: ', ./*[local-name() = 'RodneCislo'], '&#10;')"/>
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'DatumNarodenia']">
                        <xsl:call-template name="base_date_with_name">
                            <xsl:with-param name="title" select="'Dátum narodenia'" />
                            <xsl:with-param name="value" select="./*[local-name() = 'DatumNarodenia']" />
                            <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'CisloObcianskehoPreukazu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Číslo občianského preukazu: ', ./*[local-name() = 'CisloObcianskehoPreukazu'], '&#10;')"/>
                    </xsl:if>
                </xsl:if>
                
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'PO') or (../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FOP')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Obchodné meno / názov: ', ./*[local-name() = 'ObchodneMenoNazov'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Právna forma: ', ./*[local-name() = 'PravnaForma']/*[local-name() = 'Name'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'MenoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', $menoZastupcuText, ': ', ./*[local-name() = 'MenoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'PriezviskoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', $priezviskoZastupcuText, ': ', ./*[local-name() = 'PriezviskoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'IČO: ', ./*[local-name() = 'ICO'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                </xsl:if>
                
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FO')">                
                    <xsl:if test="./*[local-name() = 'DIC']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                    </xsl:if>
                </xsl:if>

                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'MC')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', ./*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'MenoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno zástupcu: ', ./*[local-name() = 'MenoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'PriezviskoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko zástupcu: ', ./*[local-name() = 'PriezviskoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'IČO: ', ./*[local-name() = 'ICO'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="format_date">
        <xsl:param name="instr"/>
        <!-- YYYY-MM-DD -->
        <xsl:variable name="yyyy">
            <xsl:value-of select="substring($instr,1,4)"/>
        </xsl:variable>
        <xsl:variable name="mm">
            <xsl:value-of select="substring($instr,6,2)"/>
        </xsl:variable>
        <xsl:variable name="dd">
            <xsl:value-of select="substring($instr,9,2)"/>
        </xsl:variable>

        <xsl:value-of select="concat($dd,'.',$mm,'.',$yyyy)"/>
    </xsl:template>

    <xsl:template name="zakladne_vyhlasenie">
        <xsl:param name="value" />

        <xsl:text>Vyhlásenie&#10;</xsl:text>
        <xsl:for-each select="$value" >
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'SpravnostUdajovText'], '&#10;')" />
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'SuhlasSoSpracovanimText'], '&#10;')" />
            <xsl:text>&#10;</xsl:text>
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'PoskytujemSuhlasText'], ': ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'PoskytujemSuhlas'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'NeposkytujemSuhlasText'], ': ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'NeposkytujemSuhlas'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>


    <xsl:template match="/z:E-form">
        <xsl:value-of select="concat(z:Meta/z:Name, '&#10;')" />

        <xsl:text>Priznanie&#10;</xsl:text>
        <xsl:value-of
            select="concat('&#09;', 'Druh priznania: ', z:Body/z:DruhPriznania/z:Name, '&#10;')" />
        <xsl:value-of select="concat('&#09;', 'Na rok: ', z:Body/z:NaRok, '&#10;')" />

        <xsl:call-template name="base_ziadatel">
            <xsl:with-param name="id_prefix" select="'Identifikačné údaje daňovníka'" />
            <xsl:with-param name="values" select="z:Body/z:Danovnik" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:call-template name="base_adresa">
            <xsl:with-param name="id_prefix" select="z:Body/z:Danovnik/z:TypOsoby/z:Code"/>
            <xsl:with-param name="values" select="z:Body/z:AdresaDanovnika" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:call-template name="base_kontaktne_udaje">
            <xsl:with-param name="id_prefix" select="'Kontaktné údaje'" />
            <xsl:with-param name="values"
                select="z:Body/z:KontaktneUdajeDanovnika" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:text>Oprávnená osoba&#10;</xsl:text>
        <xsl:text>&#09;Identifikačné údaje oprávnenej osoby&#10;</xsl:text>
        <xsl:value-of
            select="concat('&#09;&#09;', 'Právny vzťah: ', z:Body/z:OpravnenaOsoba/z:PravnyVztah/z:Name, '&#10;')" />
        <xsl:value-of
            select="concat('&#09;&#09;', 'Meno: ', z:Body/z:OpravnenaOsoba/z:Meno, '&#10;')" />
        <xsl:value-of
            select="concat('&#09;&#09;', 'Priezvisko: ', z:Body/z:OpravnenaOsoba/z:Priezvisko, '&#10;')" />
        <xsl:call-template name="base_array_to_string">
            <xsl:with-param name="id_prefix" select="'Titul pred menom'" />
            <xsl:with-param name="value" select="z:Body/z:OpravnenaOsoba/*[local-name() = 'TitulyPredMenom']" />
            <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            <xsl:with-param name="arrayName" select="'TitulPredMenom'" />
        </xsl:call-template>
        <xsl:call-template name="base_array_to_string">
            <xsl:with-param name="id_prefix" select="'Titul za menom'" />
            <xsl:with-param name="value" select="z:Body/z:OpravnenaOsoba/*[local-name() = 'TitulyZaMenom']" />
            <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            <xsl:with-param name="arrayName" select="'TitulZaMenom'" />
        </xsl:call-template>
        <xsl:value-of
            select="concat('&#09;&#09;', 'Obchodné meno / názov: ', z:Body/z:OpravnenaOsoba/z:ObchodneMenoNazov, '&#10;')" />
        <xsl:call-template name="base_adresa">
            <xsl:with-param name="id_prefix"
                select="'Adresa trvalého bydliska / Adresa sídla spoločnosti'" />
            <xsl:with-param name="values"
                select="z:Body/z:OpravnenaOsoba/z:AdresaOpravnenejOsoby" />
            <xsl:with-param name="odsadenie" select="'&#09;'" />
        </xsl:call-template>
        <xsl:call-template name="base_kontaktne_udaje">
            <xsl:with-param name="id_prefix" select="'Kontaktné údaje'" />
            <xsl:with-param name="values"
                select="z:Body/z:OpravnenaOsoba/z:KontaktneUdajeOpravnenejOsoby" />
            <xsl:with-param name="odsadenie" select="'&#09;'" />
        </xsl:call-template>

        <xsl:if test="z:Body/*[local-name() = 'DanZPozemkov']">
            <xsl:text>II. Oddiel - Daň z pozemkov&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZPozemkov/z:DanZPozemkovZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
                        
            <xsl:value-of
                select="concat('&#09;&#09;', 'Obec, kde sa pozemok nachádza: ', z:Obec, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:HodnotaPozemkuUrcenaZnalcom = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Hodnota pozemku určená znaleckým posudkom: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Hodnota pozemku určená znaleckým posudkom: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;Pozemky&#10;</xsl:text>
            <xsl:for-each
                select="z:Pozemky/*[local-name() = 'Pozemok']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', 'Poradové číslo záznamu ', ./z:PoradoveCislo, ':', '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Názov katastrálneho územia: ', ./z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Číslo parcely: ', ./z:CisloParcely, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Výmera pozemku: ', ./z:Vymera, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Druh pozemku: ', ./z:DruhPozemku/z:Name, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Využitie pozemku: ', ./z:VyuzitiePozemku, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumVznikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumZanikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
            </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZoStaviebJedenUcel']">
            <xsl:text>III. Oddiel - Daň zo stavieb - stavba slúžiaca na jeden účel&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZoStaviebJedenUcel/z:DanZoStaviebJedenUcelZaznam">
            
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa stavby'" />
                <xsl:with-param name="values"
                    select="z:AdresaStavby" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Predmet dane: ', z:PredmetDane/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Základ dane (výmera zastavanej plochy stavby, u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:ZakladDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet nadzemných a podzemných podlaží okrem prvého nadzemného podlažia: ', z:PocetPodlazi, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Celková výmera podlahových plôch všetkých podlaží stavby (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:CelkovaVymeraPodlahovychPloch, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahových plôch časti stavby, ktorá je oslobodená od dane zo stavieb (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:VymeraPlochOslobodenychOdDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
            </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZoStaviebViacereUcely']">
            <xsl:text>III. Oddiel - Daň zo stavieb - stavba slúžiaca na viaceré účely&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZoStaviebViacereUcely/z:DanZoStaviebViacereUcelyZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa stavby'" />
                <xsl:with-param name="values"
                    select="z:AdresaStavby" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Popis stavby: ', z:PopisStavby, '&#10;')" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Základ dane (výmera zastavanej plochy stavby, u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:ZakladDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Celková výmera podlahových plôch všetkých podlaží stavby (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:CelkovaVymeraPodlahovychPloch, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahových plôch časti stavby, ktorá je oslobodená od dane zo stavieb (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:VymeraPlochOslobodenychOdDane, '&#10;')" />
            <xsl:text>&#09;&#09;Výmera podlahových plôch časti stavby využívanej na jednotlivý účel (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu)&#10;</xsl:text>
            <xsl:for-each
                select="z:VymeraPlochNaJednotliveUcely/*[local-name() = 'VymeraPlochNaJednotlivyUcel']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', ./z:Ucel/z:Name, ': ', ./z:Vymera, '&#10;')" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet nadzemných a podzemných podlaží okrem prvého nadzemného podlažia: ', z:PocetPodlazi, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
        </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZBytovANebytovychPriestorov']">
            <xsl:text>IV. Oddiel - Daň z bytov a z nebytových priestorov v bytovom dome&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZBytovANebytovychPriestorov/z:DanZBytovANebytovychPriestorovZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa bytu'" />
                <xsl:with-param name="values"
                    select="z:AdresaBytu" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo bytu: ', z:CisloBytu, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Popis bytu: ', z:PopisBytu, '&#10;')" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:text>&#09;&#09;Základ dane (výmera podlahovej plochy u spoluvlastníkov vo výške ich spoluvlastníckeho podielu)&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'a) Bytu: ', z:ZakladDane/z:Byt, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'b) Nebytového priestoru v bytovom dome: ', z:ZakladDane/z:NebytovyPriestor, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahovej plochy bytu alebo časti bytu v bytovom dome, ktorý sa využíva na iný účel ako na bývanie: ', z:VymeraPodlahovejPlochyVyuzivanejNaIneUcely, '&#10;')" />
            <xsl:text>&#09;&#09;Byt alebo nebytový priestor v bytovom dome alebo ich časti oslobodené od dane z bytov&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'a) Výmera podlahovej plochy bytu alebo jeho časti: ', z:VymeraPlochOslobodenychOdDane/z:Byt, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'b) Výmera podlahovej plochy nebytového priestoru v bytovom dome alebo jeho časti: ', z:VymeraPlochOslobodenychOdDane/z:NebytovyPriestor, '&#10;')" />
            <xsl:text>&#09;&#09;Nebytové priestory&#10;</xsl:text>
            <xsl:for-each
                select="z:NebytovePriestory/*[local-name() = 'NebytovyPriestor']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', 'Nebytový priestor č.', ./z:PoradoveCislo, ':', '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Číslo nebytového priestoru v bytovom dome: ', ./z:CisloVBytovomDome, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Účel využitia nebytového priestoru v bytovom dome: ', ./z:UcelVyuzitiaVBytovomDome, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Výmera podlahových plôch nebytového priestoru v bytovom dome: ', ./z:VymeraPodlahovychPloch, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumVznikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumZanikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
        </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'Priloha']">
            <xsl:text>Príloha – Zníženie alebo oslobodenie od dane&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;', 'Obec: ', z:Body/z:Priloha/z:Obec, '&#10;')" />
            <xsl:text>&#09;K oddielu II. Pozemky&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) Pozemky vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) Pozemky, na ktorých sú cintoríny, kolumbáriá, urnové háje a rozptylové lúky: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) Močiare, plochy slatín a slancov, rašeliniská, remízky, háje vetrolamy a pásma hygienickej ochrany vodných zdrojov I. a II. stupňa, pásma ochrany prírodných liečivých zdrojov I. a II. stupňa a zdrojov prírodných minerálnych vôd stolových I. a II. stupňa: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) Časti pozemkov, na ktorých sú zriadené meračské značky, signály a iné zariadenia bodov, geodetických základov, stožiare rozvodu elektrickej energie, stĺpy telekomunikačného vedenia a televízne prevádzače, nadzemné časti zariadení na rozvod vykurovacích plynov a pásy pozemkov v lesoch vyčlenené na rozvod elektrickej energie a vykurovacích plynov: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) Pozemky verejne prístupných parkov, priestorov a športovísk: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;f) Pozemky v národných parkoch, chránených krajinných oblastiach, chránených areáloch, prírodných rezerváciách, národných prírodných rezerváciách, prírodných pamiatkach, národných prírodných pamiatkach, chránených krajinných prvkoch, vo vyhlásených ochranných pásmach s III. a IV. stupňom ochrany a územiach medzinárodného významu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyF = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;g) Pozemky funkčne spojené so stavbami slúžiacimi verejnej doprave: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyG = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;h) Pozemky užívané školami a školskými zariadeniami: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyH = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;i) Lesné pozemky od nasledujúceho roka po vzniku holiny do roku plánovaného začatia výchovnej ťažby (prvej prebierky): </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyI = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;j) Pozemky, ktorých hospodárske využívanie je obmedzené vzhľadom na podkopanie, ich umiestnenie v oblasti dobývacích priestorov alebo pásiem hygienickej ochrany vody II. a III. stupňa, ochranu a tvorbu životného prostredia, ich postihnutie ekologickým katastrofami, nadmerným imisným zaťažením, na pozemky rekultivované investičným zúrodňovaním okrem rekultivácii plne financovaných zo štátneho rozpočtu, na rokliny, výmole, vymedzené s kroviskami alebo kamením, pásma ochrany prírodných liečivých zdrojov II. a III. stupňa a zdrojov prírodných minerálnych vôd stolových II. a III. stupňa, na genofondové plochy, brehové porasty a iné plochy stromovej a krovinatej vegetácie na nelesných pozemkoch s pôdoochranou, ekologickou alebo krajinotvornou funkciou: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyJ = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;k) Pozemky, ktorých vlastníkmi sú fyzické osoby v hmotnej núdzi alebo fyzické osoby staršie ako 62 rokov, ak tieto pozemky slúžia výhradne na ich osobnú potrebu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyK = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;l) pozemky okrem pozemkov v zastavanej časti obce, na ktorých vykonávajú samostatne hospodáriaci roľníci poľnohospodársku výrobu ako svoju hlavnú činnosť: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyL = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
    
            <xsl:text>&#09;K oddielu III. - Stavby&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) stavby vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) stavby slúžiace školám, školským zariadeniam a zdravotníckym zariadeniam, zariadeniam na pracovnú rehabilitáciu a rekvalifikáciu občanov so zmenenou pracovnou schopnosťou, stavby užívané na účely sociálnej pomoci a múzeá, galérie, knižnice, divadlá, kiná, amfiteátre, výstavné siene, osvetové zariadenia: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) stavby, ktorých využitie je obmedzené z dôvodu rozsiahlej rekonštrukcie, stavebnej uzávery alebo umiestnenia na podkopanom pozemku: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) stavby na bývanie vo vlastníctve fyzických osôb v hmotnej núdzi, fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ako aj prevažne alebo úplne bezvládnych fyzických osôb, ktoré slúžia na ich trvalé bývanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) garáže vo vlastníctve fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ktoré slúžia pre motorové vozidlo používané na ich dopravu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;f) stavby na pôdohospodársku produkciu, skleníky, stavby využívané na skladovanie vlastnej pôdohospodárskej produkcie, stavby pre vodné hospodárstvo okrem stavieb na skladovanie inej ako vlastnej pôdohospodárskej produkcie a stavieb na administratívu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyF = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
    
            <xsl:text>&#09;K oddielu IV. - Byty&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) byty vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) byty slúžiace školám, školským zariadeniam a zdravotníckym zariadeniam, zariadeniam na pracovnú rehabilitáciu a rekvalifikáciu občanov so zmenenou pracovnou schopnosťou: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) byty, ktorých využitie je obmedzené z dôvodu rozsiahlej rekonštrukcie, stavebnej uzávery alebo umiestnenia na podkopanom pozemku: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) byty vo vlastníctve fyzických osôb v hmotnej núdzi, fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ako aj prevažne alebo úplne bezvládnych fyzických osôb, ktoré slúžia na ich trvalé bývanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) nebytové priestory v bytových domoch slúžiace ako garáž vo vlastníctve fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ktoré slúžia pre motorové vozidlo používané na ich dopravu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;', 'Poznámka: ', z:Body/z:Priloha/z:Poznamka, '&#10;')" />
        </xsl:if>
        
            <xsl:text>Súhrn príloh &#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh II. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh III. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovIII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh IV. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovIV, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh V. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovV, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh VI. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovVI, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh VII. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovVII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet iných príloh: ', z:Body/z:SuhrnPriloh/z:PocetInych, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Poznámka: ', z:Body/z:SuhrnPriloh/z:Poznamka, '&#10;')" />
        
        <xsl:call-template name="base_dorucenie">
            <xsl:with-param name="values" select="z:Body/z:Dorucenie" />
        </xsl:call-template>
        
        <xsl:call-template name="zakladne_vyhlasenie">
            <xsl:with-param name="value" select="z:Body/z:ZakladneVyhlasenie" />
        </xsl:call-template>

    </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><E-form xmlns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"><Meta><ID>esmao.eforms.bratislava.obec_024</ID><Name>Ohlásenie o vzniku, zániku alebo zmene daňovej povinnosti k dani z nehnuteľností</Name><Gestor>ESMaO</Gestor><RecipientId>ico://sk/00603481</RecipientId><Version>201501.2</Version><ZepRequired>false</ZepRequired></Meta><Body><DruhPriznania><Code>1</Code><Name>Čiastkové priznanie</Name><WsEnumCode>ICL0020</WsEnumCode></DruhPriznania><NaRok>2024</NaRok><Danovnik><TypOsoby><Code>FO</Code><Name>fyzická osoba</Name><WsEnumCode>ICL0096</WsEnumCode></TypOsoby><IdentifikaciaOsoby><Meno>Test</Meno><Priezvisko>Test</Priezvisko></IdentifikaciaOsoby></Danovnik><AdresaDanovnika><Meno>Test</Meno><Priezvisko>Test</Priezvisko><UlicaACislo><Ulica>Ulica </Ulica><OrientacneCislo>15A</OrientacneCislo></UlicaACislo><PSC>84106</PSC><Obec><Name>Bratislava</Name></Obec><Stat><Code>703</Code><Name>Slovenská republika</Name><WsEnumCode>0086</WsEnumCode></Stat></AdresaDanovnika><KontaktneUdajeDanovnika><Email>test@test.ts</Email></KontaktneUdajeDanovnika><DanZPozemkov><DanZPozemkovZaznam><PoradoveCislo>1</PoradoveCislo><Obec>Bratislava</Obec><DruhyZmien><DruhZmeny><Code>A</Code><Name>Orná pôda, vinice, chmelnice, ovocné sady</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>B</Code><Name>Trvalé trávnaté porasty</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>C</Code><Name>Záhrady</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>D</Code><Name>Lesné pozemky, na ktorých sú hospodárske lesy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>E</Code><Name>Rybníky s chovom rýb a ostatné hospodárske vzužívané vodné plochy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>F</Code><Name>Zastavné plochy a nádvoria</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>G</Code><Name>Stavebné pozemky</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>H</Code><Name>Ostatné plochy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny></DruhyZmien><HodnotaPozemkuUrcenaZnalcom>false</HodnotaPozemkuUrcenaZnalcom><PravnyVztah><Code>0</Code><Name>Vlastník</Name><WsEnumCode>ICL0038</WsEnumCode></PravnyVztah><Spoluvlastnictvo><Code>1</Code><Name>Bezpodielové</Name><WsEnumCode>ICL0042</WsEnumCode></Spoluvlastnictvo><Pozemky><Pozemok><PoradoveCislo>1</PoradoveCislo><NazovKatastralnehoUzemia><Code>871796</Code><Name>Záhorská Bystrica</Name><WsEnumCode>ICL0079</WsEnumCode></NazovKatastralnehoUzemia><CisloParcely>730/2</CisloParcely><Vymera>2.00</Vymera><DruhPozemku><Code>F</Code><Name>Zastavné plochy a nádvoria</Name><WsEnumCode>ICL0098</WsEnumCode></DruhPozemku></Pozemok></Pozemky></DanZPozemkovZaznam><DanZPozemkovZaznam><PoradoveCislo>2</PoradoveCislo><Obec>Bratislava</Obec><DruhyZmien><DruhZmeny><Code>A</Code><Name>Orná pôda, vinice, chmelnice, ovocné sady</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>B</Code><Name>Trvalé trávnaté porasty</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>C</Code><Name>Záhrady</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>D</Code><Name>Lesné pozemky, na ktorých sú hospodárske lesy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>E</Code><Name>Rybníky s chovom rýb a ostatné hospodárske vzužívané vodné plochy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>F</Code><Name>Zastavné plochy a nádvoria</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>G</Code><Name>Stavebné pozemky</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>H</Code><Name>Ostatné plochy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny></DruhyZmien><HodnotaPozemkuUrcenaZnalcom>false</HodnotaPozemkuUrcenaZnalcom><PravnyVztah><Code>0</Code><Name>Vlastník</Name><WsEnumCode>ICL0038</WsEnumCode></PravnyVztah><Spoluvlastnictvo><Code>1</Code><Name>Bezpodielové</Name><WsEnumCode>ICL0042</WsEnumCode></Spoluvlastnictvo><Pozemky><Pozemok><PoradoveCislo>1</PoradoveCislo><NazovKatastralnehoUzemia><Code>871796</Code><Name>Záhorská Bystrica</Name><WsEnumCode>ICL0079</WsEnumCode></NazovKatastralnehoUzemia><CisloParcely>755/4</CisloParcely><Vymera>24.00</Vymera><DruhPozemku><Code>C</Code><Name>Záhrady</Name><WsEnumCode>ICL0098</WsEnumCode></DruhPozemku></Pozemok></Pozemky></DanZPozemkovZaznam></DanZPozemkov><Priloha><Obec>Bratislava</Obec><PozemkyA>false</PozemkyA><PozemkyB>false</PozemkyB><PozemkyC>false</PozemkyC><PozemkyD>false</PozemkyD><PozemkyE>false</PozemkyE><PozemkyF>false</PozemkyF><PozemkyG>false</PozemkyG><PozemkyH>false</PozemkyH><PozemkyI>false</PozemkyI><PozemkyJ>false</PozemkyJ><PozemkyK>false</PozemkyK><PozemkyL>false</PozemkyL><StavbyA>false</StavbyA><StavbyB>false</StavbyB><StavbyC>false</StavbyC><StavbyD>false</StavbyD><StavbyE>false</StavbyE><StavbyF>false</StavbyF><BytyA>false</BytyA><BytyB>false</BytyB><BytyC>false</BytyC><BytyD>false</BytyD><BytyE>false</BytyE></Priloha><SuhrnPriloh><PocetOddielovII>2</PocetOddielovII><PocetOddielovIII>0</PocetOddielovIII><PocetOddielovIV>0</PocetOddielovIV><PocetOddielovV>0</PocetOddielovV><PocetOddielovVI>0</PocetOddielovVI><PocetOddielovVII>0</PocetOddielovVII><PocetInych>0</PocetInych><Poznamka>Rodné číslo: 1.1.1993

Údaje o manželovi/manželke:
Rodné číslo: 123232/1234 | Titul: Ing | Meno: Test | Priezvisko: Test | Má trvalé bydlisko na rovnakej adrese ako žiadateľ?: Áno | E-mail: test@test.ts | Telefón: +42191111111

Tento dokument bol vygenerovaný pomocou Bratislavského konta.</Poznamka></SuhrnPriloh><DatumZadaniaPodania>2024-01-01T01:00:00.000+01:00</DatumZadaniaPodania><ZakladneVyhlasenie><SpravnostUdajovText>Všeobecné informácie o poskytnutí, spracovaní a ochrane osobných údajov nájdete na https://esluzby.bratislava.sk/page/ochrana-osobnych-udajov</SpravnostUdajovText><SuhlasSoSpracovanimText>Týmto dávam na základe slobodnej vôle súhlas na spracovanie mojich osobných údajov uvedených vo formulári tohto podania a získaných z môjho osobného dokladu za v zmysle Nariadenia európskeho parlamentu a rady EÚ 2016/679 o ochrane fyzických osôb pri spracúvaní osobných údajov a o voľnom pohybe takýchto údajov a zákona č. 18/2018 Z.z. o ochrane osobných údajov a o zmene a doplnení niektorých zákonov. Zároveň potvrdzujem dovŕšenie veku 16 rokov pre potreby spracovania osobných údajov. Osobné údaje poskytujem za účelom spracovania mojej žiadosti.</SuhlasSoSpracovanimText><PoskytujemSuhlas>true</PoskytujemSuhlas><PoskytujemSuhlasText>Poskytujem súhlas na spracovanie osobných údajov</PoskytujemSuhlasText><NeposkytujemSuhlas>false</NeposkytujemSuhlas><NeposkytujemSuhlasText>Neposkytujem súhlas na spracovanie osobných údajov</NeposkytujemSuhlasText></ZakladneVyhlasenie><Dorucenie><AdresatPodania><AdresatPodania>Mesto</AdresatPodania></AdresatPodania><Checkbox><Notifikacia>true</Notifikacia></Checkbox><FormaOdoslaniaZiadosti>Elektronicky</FormaOdoslaniaZiadosti><FormaDoruceniaRozhodnutia><TypSposobuDorucenia>Elektronická schránka</TypSposobuDorucenia></FormaDoruceniaRozhodnutia></Dorucenie></Body></E-form>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2",
  "xslMediaDestinationTypeDescription": "TXT",
  "xslReferenceURI": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > priznanieKDaniZNehnutelnostiExample3 > should generate correct signer data 1`] = `
{
  "objectDescription": "",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2",
  "objectId": "object_123e4567-e89b-12d3-a456-426614174000",
  "signatureId": "form_data_bd1eee30256e733a7e902353d274c38879a74b9b_20240101000000",
  "xdcIdentifier": "",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="utf-8"?>
<xs:schema elementFormDefault="qualified"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
	xmlns:tns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
	xmlns:base="http://schemas.gov.sk/form/esmao/base/1.0" targetNamespace="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2">
	<xs:complexType name="AdresaType">
		<xs:sequence>
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="UlicaACislo" type="UlicaACisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="POBOX" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PoschodieACisloBytu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PSC" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Obec" type="EnumerationValueType" />
			<xs:element name="CastObce" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Stat" type="StatType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="AdresatPodaniaEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Mesto" />
			<xs:enumeration value="Mestská časť" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AdresatPodaniaType">
		<xs:sequence>
			<xs:element name="AdresatPodania" type="AdresatPodaniaEnumType" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CheckboxType">
		<xs:sequence>
			<xs:element name="Notifikacia" type="xs:boolean" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="DesatinneCisloPresnostNaDveDesatinneMiesta">
		<xs:restriction base="xs:decimal">
			<xs:fractionDigits value="2" />
			<xs:minInclusive value="0" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DorucenieType">
		<xs:sequence>
			<xs:element name="AdresatPodania" type="AdresatPodaniaType" />
			<xs:element name="Checkbox" type="CheckboxType" minOccurs="0" />
			<xs:element name="FormaOdoslaniaZiadosti" type="FormaOdoslaniaZiadostiEnumType" />
			<xs:element name="FormaDoruceniaRozhodnutia" type="FormaDoruceniaRozhodnutiaType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
    <xs:complexType name="E-formMetaType">
    <xs:annotation>
      <xs:documentation>Metaúdaje elektronického formulára</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ID" type="xs:string" />
      <xs:element name="Name" type="xs:string" />
      <xs:element name="Description" type="xs:string" minOccurs="0" />
      <xs:element name="Gestor" type="xs:string" />
      <xs:element name="RecipientId" type="xs:string" />
      <xs:element name="Version" type="xs:string" />
      <xs:element name="ZepRequired" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
	<xs:simpleType name="EMailType">
		<xs:restriction base="xs:string">
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="EnumerationType" abstract="true">
		<xs:annotation>
			<xs:documentation>Položka číselníka</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="xs:string">
				<xs:annotation>
					<xs:documentation>Kód</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Názov</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WsEnumCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Kod ciselnika WS sluzby</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EnumerationValueType">
		<xs:sequence>
			<xs:element name="Code" type="xs:string" minOccurs="0" />
			<xs:element name="Name" type="xs:string" />
			<xs:element name="WsEnumCode" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="FormaDoruceniaRozhodnutiaEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Pošta" />
			<xs:enumeration value="Elektronická schránka" />
			<xs:enumeration value="Osobne" />
			<xs:enumeration value="Fax" />
			<xs:enumeration value="Telefonicky" />
			<xs:enumeration value="E-mail" />
			<xs:enumeration value="Bez odpovede" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="FormaDoruceniaRozhodnutiaType">
		<xs:sequence>
			<xs:element name="TypSposobuDorucenia" type="FormaDoruceniaRozhodnutiaEnumType" />
			<xs:element name="AdresaDoruceniaRozhodnutia" type="AdresaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresatPodania" type="AdresatPodaniaEnumType" minOccurs="0" maxOccurs="1" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="FaxPreDorucenie" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TelefonPreDorucenie" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="EmailPreDorucenie" type="EMailType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="FormaOdoslaniaZiadostiEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Elektronicky" />
			<xs:enumeration value="Listinne" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="IdentifikaciaOsobyType">
		<xs:sequence>
			<xs:element name="TitulyPredMenom" type="TitulyPredMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodnePriezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyZaMenom" type="TitulyZaMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumNarodenia" type="xs:date" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCislo" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="CisloObcianskehoPreukazu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="MenoZastupcu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PriezviskoZastupcu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DIC" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{10}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PravnaForma" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="KodKrajinyType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{3}" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="KontaktnaOsobaType">
		<xs:sequence>
			<xs:element name="Meno" type="xs:string" />
			<xs:element name="Priezvisko" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="KontaktneUdajeType">
		<xs:sequence>
			<xs:element name="TelefonneCislo" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TelefonneCisloCele" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Email" type="EMailType" minOccurs="0" maxOccurs="1" />
			<xs:element name="KontaktnaOsoba" type="KontaktnaOsobaType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OpravnenaOsobaType">
		<xs:sequence>
			<xs:element name="PravnyVztah" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyPredMenom" type="TitulyPredMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyZaMenom" type="TitulyZaMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaOpravnenejOsoby" type="AdresaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="KontaktneUdajeOpravnenejOsoby" type="KontaktneUdajeType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OsobneUdajeType">
		<xs:sequence>
			<xs:element name="TypOsoby" type="EnumerationValueType" />
			<xs:element name="IdentifikaciaOsoby" type="IdentifikaciaOsobyType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrilohyType">
		<xs:sequence>
			<xs:element name="Priloha" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="RodneCisloType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{9,10}" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="StatType">
		<xs:complexContent>
			<xs:restriction base="EnumerationType">
				<xs:sequence>
					<xs:element name="Code" type="KodKrajinyType" />
					<xs:element name="Name" type="xs:string" />
					<xs:element name="WsEnumCode" type="xs:string" minOccurs="0" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TelefonneCisloType">
		<xs:sequence>
			<xs:element name="MedzinarodneVolacieCislo">
				<xs:simpleType>
					<xs:restriction base="xs:string">
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Predvolba">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[1-9][0-9]*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Cislo">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TitulyPredMenomType">
		<xs:sequence>
			<xs:element name="TitulPredMenom" type="EnumerationValueType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TitulyZaMenomType">
		<xs:sequence>
			<xs:element name="TitulZaMenom" type="EnumerationValueType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UlicaACisloType">
		<xs:sequence>
			<xs:element name="Ulica" type="xs:string" />
			<xs:element name="SupisneCislo" type="xs:integer" minOccurs="0" maxOccurs="1" />
			<xs:element name="OrientacneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZakladneVyhlasenieType">
		<xs:sequence>
			<xs:element name="SpravnostUdajovText" type="xs:string" />
			<xs:element name="SuhlasSoSpracovanimText" type="xs:string" />
			<xs:element name="PoskytujemSuhlas" type="xs:boolean" default="false" />
			<xs:element name="PoskytujemSuhlasText" type="xs:string" />
			<xs:element name="NeposkytujemSuhlas" type="xs:boolean" default="false" />
			<xs:element name="NeposkytujemSuhlasText" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="E-form">
		<xs:complexType>
			<xs:sequence>
                <xs:element name="Meta" type="E-formMetaType" />
				<xs:element name="Body">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="InstanceID" type="xs:string" minOccurs="0" />
							<xs:element name="DruhPriznania" type="EnumerationValueType" />
							<xs:element name="NaRok" type="xs:nonNegativeInteger" />
							<xs:element name="Danovnik" type="OsobneUdajeType" />
							<xs:element name="AdresaDanovnika" type="AdresaType" />
							<xs:element name="OpravnenaOsoba" type="OpravnenaOsobaType" minOccurs="0" maxOccurs="1" />
							<xs:element name="KontaktneUdajeDanovnika" type="KontaktneUdajeType" minOccurs="0" />
							<xs:element name="DanZPozemkov" type="DanZPozemkovType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZoStaviebJedenUcel" type="DanZoStaviebJedenUcelType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZoStaviebViacereUcely" type="DanZoStaviebViacereUcelyType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZBytovANebytovychPriestorov" type="DanZBytovANebytovychPriestorovType" minOccurs="0" maxOccurs="1" />
							<xs:element name="Priloha" type="PrilohaType" minOccurs="0" maxOccurs="1" />
							<xs:element name="SuhrnPriloh" type="SuhrnPrilohType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DatumZadaniaPodania" type="xs:dateTime" minOccurs="0" maxOccurs="1" />
							<xs:element name="ZakladneVyhlasenie" type="ZakladneVyhlasenieType" />
							<xs:element name="Prilohy" type="PrilohyType" minOccurs="0" maxOccurs="1" />
							<xs:element name="Dorucenie" type="DorucenieType" />
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="DanZPozemkovType">
		<xs:sequence>
			<xs:element name="DanZPozemkovZaznam" type="DanZPozemkovZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZPozemkovZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Obec" type="xs:string" />
			<xs:element name="DruhyZmien" type="DruhyZmienType" />
			<xs:element name="HodnotaPozemkuUrcenaZnalcom" type="xs:boolean" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="Pozemky" type="PozemkyType" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DruhyZmienType">
		<xs:sequence>
			<xs:element name="DruhZmeny" type="EnumerationValueType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PozemkyType">
		<xs:sequence>
			<xs:element name="Pozemok" type="PozemokType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PozemokType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="Vymera" type="DesatinneCisloPresnostNaDveDesatinneMiesta" />
			<xs:element name="DruhPozemku" type="EnumerationValueType" />
			<xs:element name="VyuzitiePozemku" type="xs:string" minOccurs="0" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebJedenUcelType">
		<xs:sequence>
			<xs:element name="DanZoStaviebJedenUcelZaznam" type="DanZoStaviebJedenUcelZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebJedenUcelZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaStavby" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="PredmetDane" type="EnumerationValueType" />
			<xs:element name="ZakladDane" type="xs:nonNegativeInteger" />
			<xs:element name="PocetPodlazi" type="xs:nonNegativeInteger" />
			<xs:element name="CelkovaVymeraPodlahovychPloch" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebViacereUcelyType">
		<xs:sequence>
			<xs:element name="DanZoStaviebViacereUcelyZaznam" type="DanZoStaviebViacereUcelyZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebViacereUcelyZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaStavby" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="PopisStavby" type="xs:string" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="ZakladDane" type="xs:nonNegativeInteger" />
			<xs:element name="CelkovaVymeraPodlahovychPloch" type="xs:nonNegativeInteger" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochNaJednotliveUcely" type="VymeraPlochNaJednotliveUcelyType" />
			<xs:element name="PocetPodlazi" type="xs:nonNegativeInteger" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochNaJednotliveUcelyType">
		<xs:sequence>
			<xs:element name="VymeraPlochNaJednotlivyUcel" type="VymeraPlochNaJednotlivyUcelType" minOccurs="9" maxOccurs="9" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochNaJednotlivyUcelType">
		<xs:sequence>
			<xs:element name="Ucel" type="EnumerationValueType" />
			<xs:element name="Vymera" type="DesatinneCisloPresnostNaDveDesatinneMiesta" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZBytovANebytovychPriestorovType">
		<xs:sequence>
			<xs:element name="DanZBytovANebytovychPriestorovZaznam" type="DanZBytovANebytovychPriestorovZaznamType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZBytovANebytovychPriestorovZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaBytu" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" minOccurs="0" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="CisloBytu" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="PopisBytu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="NebytovePriestory" type="NebytovePriestoryType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ZakladDane" type="ZakladDaneType" />
			<xs:element name="VymeraPodlahovejPlochyVyuzivanejNaIneUcely" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="VymeraPlochOslobodenychOdDaneType" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZakladDaneType">
		<xs:sequence>
			<xs:element name="Byt" type="xs:nonNegativeInteger" />
			<xs:element name="NebytovyPriestor" type="xs:nonNegativeInteger" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochOslobodenychOdDaneType">
		<xs:sequence>
			<xs:element name="Byt" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="NebytovyPriestor" type="xs:nonNegativeInteger" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NebytovePriestoryType">
		<xs:sequence>
			<xs:element name="NebytovyPriestor" type="NebytovyPriestorType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NebytovyPriestorType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="CisloVBytovomDome" type="xs:string" />
			<xs:element name="UcelVyuzitiaVBytovomDome" type="xs:string" />
			<xs:element name="VymeraPodlahovychPloch" type="xs:nonNegativeInteger" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SuhrnPrilohType">
		<xs:sequence>
			<xs:element name="PocetOddielovII" type="xs:integer" />
			<xs:element name="PocetOddielovIII" type="xs:integer" />
			<xs:element name="PocetOddielovIV" type="xs:integer" />
			<xs:element name="PocetOddielovV" type="xs:integer" />
			<xs:element name="PocetOddielovVI" type="xs:integer" />
			<xs:element name="PocetOddielovVII" type="xs:integer" />
			<xs:element name="PocetInych" type="xs:integer" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrilohaType">
		<xs:sequence>
			<xs:element name="Obec" type="xs:string" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PozemkyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyF" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyG" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyH" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyI" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyJ" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyK" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyL" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyF" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<xsl:stylesheet version="2.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:z="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
    xmlns:fn="http://www.w3.org/2005/xpath-functions">

    <xsl:output method="text" encoding="utf-8" indent="no" />
    <xsl:preserve-space elements="*" />

    <xsl:template name="base_adresa">
        <xsl:param name="id_prefix" select="'Adresa '" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="showPoschodie" />
        <xsl:param name="typOsoby" />
        
        
        
        <xsl:if test="$id_prefix = 'FO'">
            <xsl:value-of select="concat($odsadenie, 'Adresa trvalého bydliska &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'FOP'">
            <xsl:value-of select="concat($odsadenie, 'Adresa miesta podnikania / sídlo &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'PO'">
            <xsl:value-of select="concat($odsadenie, 'Adresa sídla spoločnosti &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'MC'">
            <xsl:value-of select="concat($odsadenie, 'Adresa sídla &#10;')" />
        </xsl:if>
<!--         Ked neni dany typ osoby tak bude brat preddefinovanu hodnotu -->
        <xsl:if test="($id_prefix != 'FO') and ($id_prefix != 'PO') and ($id_prefix != 'FOP') and ($id_prefix != 'MC')">
            <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        </xsl:if>
        
            
        
        <xsl:for-each select="$values" >
            <xsl:if test="./*[local-name() = 'Meno']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'Priezvisko']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'ObchodneMenoNazov']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Obchodné meno / názov: ', ./*[local-name() = 'ObchodneMenoNazov'], '&#10;')"/>
            </xsl:if>
            
            <xsl:for-each select="./*[local-name() = 'UlicaACislo']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Ulica: ', ./*[local-name() = 'Ulica'], '&#10;')"/>
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Číslo: ', ./*[local-name() = 'SupisneCislo'], '/', ./*[local-name() = 'OrientacneCislo'], '&#10;')"/>
            </xsl:for-each>
            
            <xsl:if test="$showPoschodie = 'true'">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Poschodie a číslo bytu: ', ./*[local-name() = 'PoschodieACisloBytu'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'POBOX']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'P.O.Box: ', ./*[local-name() = 'POBOX'], '&#10;')"/>
            </xsl:if>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'PSČ: ', ./*[local-name() = 'PSC'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Obec: ', ./*[local-name() = 'Obec']/*[local-name() = 'Name'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Časť obce: ', ./*[local-name() = 'CastObce'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Štát: ', ./*[local-name() = 'Stat']/*[local-name() = 'Name'], '&#10;')"/>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_adresat_podania">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="adresatPodaniaMestoText" select="'Mesto'" />
        <xsl:param name="adresatPodaniaMCInyText" select="''" />

        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        <xsl:value-of select="concat($odsadenie, '&#09;', $id_prefix, ': ')"/>

        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mesto'">
            <xsl:value-of select="concat($adresatPodaniaMestoText, '&#10;')" />
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mestská časť'">
            <xsl:text>Mestská časť&#10;</xsl:text>
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', $values/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')"/>
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mesto a iný subjekt'">
            <xsl:value-of select="concat($adresatPodaniaMestoText, '&#10;')" />
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mestská časť a iný subjekt'">
            <xsl:text>Mestská časť&#10;</xsl:text>
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', $values/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], $adresatPodaniaMCInyText, '&#10;')"/>
        </xsl:if>
    </xsl:template>

    <xsl:template name="base_array_to_string">
        <xsl:param name="id_prefix" />
        <xsl:param name="value" />
        <xsl:param name="arrayName" />
        <xsl:param name="odsadenie" />
        <xsl:value-of select="concat($odsadenie, $id_prefix, ': ')" />
        
        <xsl:variable name="arraylengthPred" select="count($value/*[local-name() = $arrayName])" />
        
        <xsl:for-each select="$value/*[local-name() = $arrayName]">
            <xsl:variable name="i" select="position()" />
            <xsl:value-of select="./*[local-name() = 'Name']" />
            <xsl:if test="$i &lt; $arraylengthPred">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>&#10;</xsl:text>
    </xsl:template>

    <xsl:template name="base_date_with_name">
        <xsl:param name="title" />
        <xsl:param name="value" />
        <xsl:param name="odsadenie" />

        <xsl:if test="$value != ''">
            <xsl:value-of select="concat($odsadenie, $title, ': ')"/>
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr" select="$value"/>
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
        </xsl:if>
    </xsl:template>

    <xsl:template name="base_dorucenie">
        <xsl:param name="id_prefix" select="'Doručenie'" />
        <xsl:param name="doruceniePodania" select="'Doručenie podania'" />
        <xsl:param name="dorucenieOdpovede" select="'Doručenie odpovede'" />
        <xsl:param name="formaOdoslania" select="'Forma odoslania podania'" />
        <xsl:param name="formaDorucenia" select="'Forma doručenia odpovede'" />
        <xsl:param name="adresaDorucenia" select="'Adresa doručenia odpovede'" />
        <xsl:param name="miestoOsobnehoVyzdvihnutia" select="'Miesto osobného vyzdvihnutia odpovede'" />
        <xsl:param name="adresatPodaniaMestoText" select="'Mesto'" />
        <xsl:param name="adresatPodaniaMCInyText" select="''" />
        <xsl:param name="osobneNaInySubjektText" />
        <xsl:param name="osobneVyzdvihnutieInySubjektText" />
        <xsl:param name="values" />
        <xsl:value-of select="concat($id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat('&#09;',$doruceniePodania, '&#10;')" />
            
            <xsl:call-template name="base_adresat_podania">
                <xsl:with-param name="id_prefix" select="'Adresát podania'" />
                <xsl:with-param name="values" select="./*[local-name() = 'AdresatPodania']" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
                <xsl:with-param name="adresatPodaniaMestoText" select="$adresatPodaniaMestoText" />
                <xsl:with-param name="adresatPodaniaMCInyText" select="$adresatPodaniaMCInyText" />
            </xsl:call-template>
            <xsl:value-of select="concat('&#09;&#09;', $formaOdoslania,': ' , ./*[local-name() = 'FormaOdoslaniaZiadosti'], '&#10;')" />
            
            <xsl:text>&#09;Notifikácia&#10;</xsl:text>
            
            <xsl:value-of select="concat('&#09;&#09;', 'Žiadam o zasielanie notifikácii zo spracovania podania: ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'Checkbox']/*[local-name() = 'Notifikacia'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            
            <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']">
                <xsl:value-of select="concat('&#09;',$dorucenieOdpovede, '&#10;')" />
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Pošta'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Pošta','&#10;')" />
                    <xsl:call-template name="base_adresa">
                        <xsl:with-param name="id_prefix" select="$adresaDorucenia" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresaDoruceniaRozhodnutia']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Elektronická schránka'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Elektronická schránka (eDesk)','&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Osobne na iný subjekt'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': ', $osobneNaInySubjektText,'&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;&#09;', $miestoOsobnehoVyzdvihnutia, ': ', $osobneVyzdvihnutieInySubjektText, '&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Osobne'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Osobne','&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;&#09;', $miestoOsobnehoVyzdvihnutia, ': ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresatPodania'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresatPodania'] = 'Mestská časť'">
                        <xsl:value-of select="concat('&#09;&#09;&#09;', 'Mestská časť: ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')" />
                    </xsl:if>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Fax'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Fax','&#10;')" />
                    <xsl:call-template name="base_telefon">
                        <xsl:with-param name="id_prefix" select="'Fax: '" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'FaxPreDorucenie']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Telefonicky'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Telefonicky','&#10;')" />
                    <xsl:call-template name="base_telefon">
                        <xsl:with-param name="id_prefix" select="'Telefónne číslo / mobil: '" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TelefonPreDorucenie']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'E-mail'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': E-mail','&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;', 'E-mail: ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'EmailPreDorucenie'],'&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Bez odpovede'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Bez odpovede','&#10;')" />
                </xsl:if>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_kontaktne_udaje">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        
        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat($odsadenie,'&#09;', 'E-mail: ', ./*[local-name() = 'Email'], '&#10;')"/>
            
            <xsl:if test="$values/*[local-name() = 'TelefonneCisloCele']">
                <xsl:value-of select="concat($odsadenie,'&#09;', 'Telefónne číslo: ', ./*[local-name() = 'TelefonneCisloCele'], '&#10;')"/>                
            </xsl:if>
            <xsl:if test="$values/*[local-name() = 'TelefonneCislo']">
                <xsl:for-each select="./*[local-name() = 'TelefonneCislo']">
                    <xsl:value-of select="concat($odsadenie,'&#09;', 'Telefónne číslo: ', ./*[local-name() = 'MedzinarodneVolacieCislo'], ' ', ./*[local-name() = 'Predvolba'], ' ', ./*[local-name() = 'Cislo'], '&#10;')"/>
                </xsl:for-each>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'KontaktnaOsoba']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Kontaktná osoba', '&#10;')" />
                <xsl:for-each select="./*[local-name() = 'KontaktnaOsoba']">
                    <xsl:value-of select="concat($odsadenie, '&#09;&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')"/>
                    <xsl:value-of select="concat($odsadenie, '&#09;&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')"/>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_telefon">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />

        <xsl:value-of select="concat($odsadenie, $id_prefix)" />
        <xsl:value-of select="concat($values/*[local-name() = 'MedzinarodneVolacieCislo'], ' ')" />
        <xsl:value-of select="concat($values/*[local-name() = 'Predvolba'], ' ')" />
        <xsl:value-of select="concat($values/*[local-name() = 'Cislo'], '&#10;')" />
    </xsl:template>

    <xsl:template name="base_ziadatel">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="menoZastupcuText" select="'Meno zástupcu'" />
        <xsl:param name="priezviskoZastupcuText" select="'Priezvisko zástupcu'" />
        
        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Typ osoby: ', ./*[local-name() = 'TypOsoby']/*[local-name() = 'Name'], '&#10;')" />
            <xsl:for-each select="./*[local-name() = 'IdentifikaciaOsoby']">
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FO') or (../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FOP')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Rodné priezvisko: ', ./*[local-name() = 'RodnePriezvisko'], '&#10;')" />
                    <xsl:call-template name="base_array_to_string">
                        <xsl:with-param name="id_prefix" select="'Titul pred menom'" />
                        <xsl:with-param name="value" select="./*[local-name() = 'TitulyPredMenom']" />
                        <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        <xsl:with-param name="arrayName" select="'TitulPredMenom'" />
                    </xsl:call-template>
                    <xsl:call-template name="base_array_to_string">
                        <xsl:with-param name="id_prefix" select="'Titul za menom'" />
                        <xsl:with-param name="value" select="./*[local-name() = 'TitulyZaMenom']" />
                        <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        <xsl:with-param name="arrayName" select="'TitulZaMenom'" />
                    </xsl:call-template>
                    <xsl:if test="./*[local-name() = 'RodneCislo']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Rodné číslo: ', ./*[local-name() = 'RodneCislo'], '&#10;')"/>
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'DatumNarodenia']">
                        <xsl:call-template name="base_date_with_name">
                            <xsl:with-param name="title" select="'Dátum narodenia'" />
                            <xsl:with-param name="value" select="./*[local-name() = 'DatumNarodenia']" />
                            <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'CisloObcianskehoPreukazu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Číslo občianského preukazu: ', ./*[local-name() = 'CisloObcianskehoPreukazu'], '&#10;')"/>
                    </xsl:if>
                </xsl:if>
                
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'PO') or (../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FOP')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Obchodné meno / názov: ', ./*[local-name() = 'ObchodneMenoNazov'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Právna forma: ', ./*[local-name() = 'PravnaForma']/*[local-name() = 'Name'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'MenoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', $menoZastupcuText, ': ', ./*[local-name() = 'MenoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'PriezviskoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', $priezviskoZastupcuText, ': ', ./*[local-name() = 'PriezviskoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'IČO: ', ./*[local-name() = 'ICO'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                </xsl:if>
                
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FO')">                
                    <xsl:if test="./*[local-name() = 'DIC']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                    </xsl:if>
                </xsl:if>

                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'MC')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', ./*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'MenoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno zástupcu: ', ./*[local-name() = 'MenoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'PriezviskoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko zástupcu: ', ./*[local-name() = 'PriezviskoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'IČO: ', ./*[local-name() = 'ICO'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="format_date">
        <xsl:param name="instr"/>
        <!-- YYYY-MM-DD -->
        <xsl:variable name="yyyy">
            <xsl:value-of select="substring($instr,1,4)"/>
        </xsl:variable>
        <xsl:variable name="mm">
            <xsl:value-of select="substring($instr,6,2)"/>
        </xsl:variable>
        <xsl:variable name="dd">
            <xsl:value-of select="substring($instr,9,2)"/>
        </xsl:variable>

        <xsl:value-of select="concat($dd,'.',$mm,'.',$yyyy)"/>
    </xsl:template>

    <xsl:template name="zakladne_vyhlasenie">
        <xsl:param name="value" />

        <xsl:text>Vyhlásenie&#10;</xsl:text>
        <xsl:for-each select="$value" >
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'SpravnostUdajovText'], '&#10;')" />
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'SuhlasSoSpracovanimText'], '&#10;')" />
            <xsl:text>&#10;</xsl:text>
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'PoskytujemSuhlasText'], ': ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'PoskytujemSuhlas'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'NeposkytujemSuhlasText'], ': ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'NeposkytujemSuhlas'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>


    <xsl:template match="/z:E-form">
        <xsl:value-of select="concat(z:Meta/z:Name, '&#10;')" />

        <xsl:text>Priznanie&#10;</xsl:text>
        <xsl:value-of
            select="concat('&#09;', 'Druh priznania: ', z:Body/z:DruhPriznania/z:Name, '&#10;')" />
        <xsl:value-of select="concat('&#09;', 'Na rok: ', z:Body/z:NaRok, '&#10;')" />

        <xsl:call-template name="base_ziadatel">
            <xsl:with-param name="id_prefix" select="'Identifikačné údaje daňovníka'" />
            <xsl:with-param name="values" select="z:Body/z:Danovnik" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:call-template name="base_adresa">
            <xsl:with-param name="id_prefix" select="z:Body/z:Danovnik/z:TypOsoby/z:Code"/>
            <xsl:with-param name="values" select="z:Body/z:AdresaDanovnika" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:call-template name="base_kontaktne_udaje">
            <xsl:with-param name="id_prefix" select="'Kontaktné údaje'" />
            <xsl:with-param name="values"
                select="z:Body/z:KontaktneUdajeDanovnika" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:text>Oprávnená osoba&#10;</xsl:text>
        <xsl:text>&#09;Identifikačné údaje oprávnenej osoby&#10;</xsl:text>
        <xsl:value-of
            select="concat('&#09;&#09;', 'Právny vzťah: ', z:Body/z:OpravnenaOsoba/z:PravnyVztah/z:Name, '&#10;')" />
        <xsl:value-of
            select="concat('&#09;&#09;', 'Meno: ', z:Body/z:OpravnenaOsoba/z:Meno, '&#10;')" />
        <xsl:value-of
            select="concat('&#09;&#09;', 'Priezvisko: ', z:Body/z:OpravnenaOsoba/z:Priezvisko, '&#10;')" />
        <xsl:call-template name="base_array_to_string">
            <xsl:with-param name="id_prefix" select="'Titul pred menom'" />
            <xsl:with-param name="value" select="z:Body/z:OpravnenaOsoba/*[local-name() = 'TitulyPredMenom']" />
            <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            <xsl:with-param name="arrayName" select="'TitulPredMenom'" />
        </xsl:call-template>
        <xsl:call-template name="base_array_to_string">
            <xsl:with-param name="id_prefix" select="'Titul za menom'" />
            <xsl:with-param name="value" select="z:Body/z:OpravnenaOsoba/*[local-name() = 'TitulyZaMenom']" />
            <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            <xsl:with-param name="arrayName" select="'TitulZaMenom'" />
        </xsl:call-template>
        <xsl:value-of
            select="concat('&#09;&#09;', 'Obchodné meno / názov: ', z:Body/z:OpravnenaOsoba/z:ObchodneMenoNazov, '&#10;')" />
        <xsl:call-template name="base_adresa">
            <xsl:with-param name="id_prefix"
                select="'Adresa trvalého bydliska / Adresa sídla spoločnosti'" />
            <xsl:with-param name="values"
                select="z:Body/z:OpravnenaOsoba/z:AdresaOpravnenejOsoby" />
            <xsl:with-param name="odsadenie" select="'&#09;'" />
        </xsl:call-template>
        <xsl:call-template name="base_kontaktne_udaje">
            <xsl:with-param name="id_prefix" select="'Kontaktné údaje'" />
            <xsl:with-param name="values"
                select="z:Body/z:OpravnenaOsoba/z:KontaktneUdajeOpravnenejOsoby" />
            <xsl:with-param name="odsadenie" select="'&#09;'" />
        </xsl:call-template>

        <xsl:if test="z:Body/*[local-name() = 'DanZPozemkov']">
            <xsl:text>II. Oddiel - Daň z pozemkov&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZPozemkov/z:DanZPozemkovZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
                        
            <xsl:value-of
                select="concat('&#09;&#09;', 'Obec, kde sa pozemok nachádza: ', z:Obec, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:HodnotaPozemkuUrcenaZnalcom = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Hodnota pozemku určená znaleckým posudkom: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Hodnota pozemku určená znaleckým posudkom: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;Pozemky&#10;</xsl:text>
            <xsl:for-each
                select="z:Pozemky/*[local-name() = 'Pozemok']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', 'Poradové číslo záznamu ', ./z:PoradoveCislo, ':', '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Názov katastrálneho územia: ', ./z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Číslo parcely: ', ./z:CisloParcely, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Výmera pozemku: ', ./z:Vymera, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Druh pozemku: ', ./z:DruhPozemku/z:Name, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Využitie pozemku: ', ./z:VyuzitiePozemku, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumVznikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumZanikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
            </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZoStaviebJedenUcel']">
            <xsl:text>III. Oddiel - Daň zo stavieb - stavba slúžiaca na jeden účel&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZoStaviebJedenUcel/z:DanZoStaviebJedenUcelZaznam">
            
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa stavby'" />
                <xsl:with-param name="values"
                    select="z:AdresaStavby" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Predmet dane: ', z:PredmetDane/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Základ dane (výmera zastavanej plochy stavby, u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:ZakladDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet nadzemných a podzemných podlaží okrem prvého nadzemného podlažia: ', z:PocetPodlazi, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Celková výmera podlahových plôch všetkých podlaží stavby (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:CelkovaVymeraPodlahovychPloch, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahových plôch časti stavby, ktorá je oslobodená od dane zo stavieb (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:VymeraPlochOslobodenychOdDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
            </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZoStaviebViacereUcely']">
            <xsl:text>III. Oddiel - Daň zo stavieb - stavba slúžiaca na viaceré účely&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZoStaviebViacereUcely/z:DanZoStaviebViacereUcelyZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa stavby'" />
                <xsl:with-param name="values"
                    select="z:AdresaStavby" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Popis stavby: ', z:PopisStavby, '&#10;')" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Základ dane (výmera zastavanej plochy stavby, u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:ZakladDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Celková výmera podlahových plôch všetkých podlaží stavby (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:CelkovaVymeraPodlahovychPloch, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahových plôch časti stavby, ktorá je oslobodená od dane zo stavieb (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:VymeraPlochOslobodenychOdDane, '&#10;')" />
            <xsl:text>&#09;&#09;Výmera podlahových plôch časti stavby využívanej na jednotlivý účel (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu)&#10;</xsl:text>
            <xsl:for-each
                select="z:VymeraPlochNaJednotliveUcely/*[local-name() = 'VymeraPlochNaJednotlivyUcel']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', ./z:Ucel/z:Name, ': ', ./z:Vymera, '&#10;')" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet nadzemných a podzemných podlaží okrem prvého nadzemného podlažia: ', z:PocetPodlazi, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
        </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZBytovANebytovychPriestorov']">
            <xsl:text>IV. Oddiel - Daň z bytov a z nebytových priestorov v bytovom dome&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZBytovANebytovychPriestorov/z:DanZBytovANebytovychPriestorovZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa bytu'" />
                <xsl:with-param name="values"
                    select="z:AdresaBytu" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo bytu: ', z:CisloBytu, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Popis bytu: ', z:PopisBytu, '&#10;')" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:text>&#09;&#09;Základ dane (výmera podlahovej plochy u spoluvlastníkov vo výške ich spoluvlastníckeho podielu)&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'a) Bytu: ', z:ZakladDane/z:Byt, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'b) Nebytového priestoru v bytovom dome: ', z:ZakladDane/z:NebytovyPriestor, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahovej plochy bytu alebo časti bytu v bytovom dome, ktorý sa využíva na iný účel ako na bývanie: ', z:VymeraPodlahovejPlochyVyuzivanejNaIneUcely, '&#10;')" />
            <xsl:text>&#09;&#09;Byt alebo nebytový priestor v bytovom dome alebo ich časti oslobodené od dane z bytov&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'a) Výmera podlahovej plochy bytu alebo jeho časti: ', z:VymeraPlochOslobodenychOdDane/z:Byt, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'b) Výmera podlahovej plochy nebytového priestoru v bytovom dome alebo jeho časti: ', z:VymeraPlochOslobodenychOdDane/z:NebytovyPriestor, '&#10;')" />
            <xsl:text>&#09;&#09;Nebytové priestory&#10;</xsl:text>
            <xsl:for-each
                select="z:NebytovePriestory/*[local-name() = 'NebytovyPriestor']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', 'Nebytový priestor č.', ./z:PoradoveCislo, ':', '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Číslo nebytového priestoru v bytovom dome: ', ./z:CisloVBytovomDome, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Účel využitia nebytového priestoru v bytovom dome: ', ./z:UcelVyuzitiaVBytovomDome, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Výmera podlahových plôch nebytového priestoru v bytovom dome: ', ./z:VymeraPodlahovychPloch, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumVznikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumZanikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
        </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'Priloha']">
            <xsl:text>Príloha – Zníženie alebo oslobodenie od dane&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;', 'Obec: ', z:Body/z:Priloha/z:Obec, '&#10;')" />
            <xsl:text>&#09;K oddielu II. Pozemky&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) Pozemky vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) Pozemky, na ktorých sú cintoríny, kolumbáriá, urnové háje a rozptylové lúky: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) Močiare, plochy slatín a slancov, rašeliniská, remízky, háje vetrolamy a pásma hygienickej ochrany vodných zdrojov I. a II. stupňa, pásma ochrany prírodných liečivých zdrojov I. a II. stupňa a zdrojov prírodných minerálnych vôd stolových I. a II. stupňa: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) Časti pozemkov, na ktorých sú zriadené meračské značky, signály a iné zariadenia bodov, geodetických základov, stožiare rozvodu elektrickej energie, stĺpy telekomunikačného vedenia a televízne prevádzače, nadzemné časti zariadení na rozvod vykurovacích plynov a pásy pozemkov v lesoch vyčlenené na rozvod elektrickej energie a vykurovacích plynov: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) Pozemky verejne prístupných parkov, priestorov a športovísk: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;f) Pozemky v národných parkoch, chránených krajinných oblastiach, chránených areáloch, prírodných rezerváciách, národných prírodných rezerváciách, prírodných pamiatkach, národných prírodných pamiatkach, chránených krajinných prvkoch, vo vyhlásených ochranných pásmach s III. a IV. stupňom ochrany a územiach medzinárodného významu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyF = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;g) Pozemky funkčne spojené so stavbami slúžiacimi verejnej doprave: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyG = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;h) Pozemky užívané školami a školskými zariadeniami: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyH = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;i) Lesné pozemky od nasledujúceho roka po vzniku holiny do roku plánovaného začatia výchovnej ťažby (prvej prebierky): </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyI = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;j) Pozemky, ktorých hospodárske využívanie je obmedzené vzhľadom na podkopanie, ich umiestnenie v oblasti dobývacích priestorov alebo pásiem hygienickej ochrany vody II. a III. stupňa, ochranu a tvorbu životného prostredia, ich postihnutie ekologickým katastrofami, nadmerným imisným zaťažením, na pozemky rekultivované investičným zúrodňovaním okrem rekultivácii plne financovaných zo štátneho rozpočtu, na rokliny, výmole, vymedzené s kroviskami alebo kamením, pásma ochrany prírodných liečivých zdrojov II. a III. stupňa a zdrojov prírodných minerálnych vôd stolových II. a III. stupňa, na genofondové plochy, brehové porasty a iné plochy stromovej a krovinatej vegetácie na nelesných pozemkoch s pôdoochranou, ekologickou alebo krajinotvornou funkciou: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyJ = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;k) Pozemky, ktorých vlastníkmi sú fyzické osoby v hmotnej núdzi alebo fyzické osoby staršie ako 62 rokov, ak tieto pozemky slúžia výhradne na ich osobnú potrebu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyK = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;l) pozemky okrem pozemkov v zastavanej časti obce, na ktorých vykonávajú samostatne hospodáriaci roľníci poľnohospodársku výrobu ako svoju hlavnú činnosť: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyL = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
    
            <xsl:text>&#09;K oddielu III. - Stavby&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) stavby vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) stavby slúžiace školám, školským zariadeniam a zdravotníckym zariadeniam, zariadeniam na pracovnú rehabilitáciu a rekvalifikáciu občanov so zmenenou pracovnou schopnosťou, stavby užívané na účely sociálnej pomoci a múzeá, galérie, knižnice, divadlá, kiná, amfiteátre, výstavné siene, osvetové zariadenia: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) stavby, ktorých využitie je obmedzené z dôvodu rozsiahlej rekonštrukcie, stavebnej uzávery alebo umiestnenia na podkopanom pozemku: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) stavby na bývanie vo vlastníctve fyzických osôb v hmotnej núdzi, fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ako aj prevažne alebo úplne bezvládnych fyzických osôb, ktoré slúžia na ich trvalé bývanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) garáže vo vlastníctve fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ktoré slúžia pre motorové vozidlo používané na ich dopravu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;f) stavby na pôdohospodársku produkciu, skleníky, stavby využívané na skladovanie vlastnej pôdohospodárskej produkcie, stavby pre vodné hospodárstvo okrem stavieb na skladovanie inej ako vlastnej pôdohospodárskej produkcie a stavieb na administratívu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyF = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
    
            <xsl:text>&#09;K oddielu IV. - Byty&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) byty vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) byty slúžiace školám, školským zariadeniam a zdravotníckym zariadeniam, zariadeniam na pracovnú rehabilitáciu a rekvalifikáciu občanov so zmenenou pracovnou schopnosťou: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) byty, ktorých využitie je obmedzené z dôvodu rozsiahlej rekonštrukcie, stavebnej uzávery alebo umiestnenia na podkopanom pozemku: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) byty vo vlastníctve fyzických osôb v hmotnej núdzi, fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ako aj prevažne alebo úplne bezvládnych fyzických osôb, ktoré slúžia na ich trvalé bývanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) nebytové priestory v bytových domoch slúžiace ako garáž vo vlastníctve fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ktoré slúžia pre motorové vozidlo používané na ich dopravu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;', 'Poznámka: ', z:Body/z:Priloha/z:Poznamka, '&#10;')" />
        </xsl:if>
        
            <xsl:text>Súhrn príloh &#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh II. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh III. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovIII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh IV. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovIV, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh V. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovV, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh VI. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovVI, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh VII. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovVII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet iných príloh: ', z:Body/z:SuhrnPriloh/z:PocetInych, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Poznámka: ', z:Body/z:SuhrnPriloh/z:Poznamka, '&#10;')" />
        
        <xsl:call-template name="base_dorucenie">
            <xsl:with-param name="values" select="z:Body/z:Dorucenie" />
        </xsl:call-template>
        
        <xsl:call-template name="zakladne_vyhlasenie">
            <xsl:with-param name="value" select="z:Body/z:ZakladneVyhlasenie" />
        </xsl:call-template>

    </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><E-form xmlns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"><Meta><ID>esmao.eforms.bratislava.obec_024</ID><Name>Ohlásenie o vzniku, zániku alebo zmene daňovej povinnosti k dani z nehnuteľností</Name><Gestor>ESMaO</Gestor><RecipientId>ico://sk/00603481</RecipientId><Version>201501.2</Version><ZepRequired>false</ZepRequired></Meta><Body><DruhPriznania><Code>0</Code><Name>Priznanie</Name><WsEnumCode>ICL0020</WsEnumCode></DruhPriznania><NaRok>2024</NaRok><Danovnik><TypOsoby><Code>FO</Code><Name>fyzická osoba</Name><WsEnumCode>ICL0096</WsEnumCode></TypOsoby><IdentifikaciaOsoby><TitulyPredMenom><TitulPredMenom><Code>01</Code><Name>Ing.</Name><WsEnumCode>0062</WsEnumCode></TitulPredMenom></TitulyPredMenom><Meno>Test</Meno><Priezvisko>Test</Priezvisko></IdentifikaciaOsoby></Danovnik><AdresaDanovnika><Meno>Test</Meno><Priezvisko>Test</Priezvisko><UlicaACislo><Ulica>Test</Ulica><OrientacneCislo>1</OrientacneCislo></UlicaACislo><PSC>85103</PSC><Obec><Name>Bratislava</Name></Obec><Stat><Code>703</Code><Name>Slovenská republika</Name><WsEnumCode>0086</WsEnumCode></Stat></AdresaDanovnika><KontaktneUdajeDanovnika><TelefonneCislo><MedzinarodneVolacieCislo>+421</MedzinarodneVolacieCislo><Predvolba>901</Predvolba><Cislo>111111</Cislo></TelefonneCislo><Email>test@mail.com</Email></KontaktneUdajeDanovnika><DanZBytovANebytovychPriestorov><DanZBytovANebytovychPriestorovZaznam><PoradoveCislo>1</PoradoveCislo><AdresaBytu><UlicaACislo><Ulica>Jána Smreka</Ulica><SupisneCislo>1</SupisneCislo><OrientacneCislo>1</OrientacneCislo></UlicaACislo><Obec><Code>SK0104529371</Code><Name>Bratislava - mestská časť Devínska Nová Ves</Name><WsEnumCode>0025</WsEnumCode></Obec><Stat><Code>703</Code><Name>Slovenská republika</Name><WsEnumCode>0086</WsEnumCode></Stat></AdresaBytu><NazovKatastralnehoUzemia><Code>810649</Code><Name>Devínska Nová Ves</Name><WsEnumCode>ICL0079</WsEnumCode></NazovKatastralnehoUzemia><CisloParcely>1234/10</CisloParcely><CisloBytu>23</CisloBytu><PravnyVztah><Code>0</Code><Name>Vlastník</Name><WsEnumCode>ICL0038</WsEnumCode></PravnyVztah><Spoluvlastnictvo><Code>0</Code><Name>Podielové</Name><WsEnumCode>ICL0042</WsEnumCode></Spoluvlastnictvo><PocetSpoluvlastnikov>2</PocetSpoluvlastnikov><SpoluvlastnikUrcenyDohodou>true</SpoluvlastnikUrcenyDohodou><ZakladDane><Byt>18</Byt></ZakladDane><Poznamka>Číslo LV: 3385</Poznamka></DanZBytovANebytovychPriestorovZaznam></DanZBytovANebytovychPriestorov><Priloha><Obec>Bratislava</Obec><PozemkyA>false</PozemkyA><PozemkyB>false</PozemkyB><PozemkyC>false</PozemkyC><PozemkyD>false</PozemkyD><PozemkyE>false</PozemkyE><PozemkyF>false</PozemkyF><PozemkyG>false</PozemkyG><PozemkyH>false</PozemkyH><PozemkyI>false</PozemkyI><PozemkyJ>false</PozemkyJ><PozemkyK>false</PozemkyK><PozemkyL>false</PozemkyL><StavbyA>false</StavbyA><StavbyB>false</StavbyB><StavbyC>false</StavbyC><StavbyD>false</StavbyD><StavbyE>false</StavbyE><StavbyF>false</StavbyF><BytyA>false</BytyA><BytyB>false</BytyB><BytyC>false</BytyC><BytyD>false</BytyD><BytyE>false</BytyE></Priloha><SuhrnPriloh><PocetOddielovII>0</PocetOddielovII><PocetOddielovIII>0</PocetOddielovIII><PocetOddielovIV>1</PocetOddielovIV><PocetOddielovV>0</PocetOddielovV><PocetOddielovVI>0</PocetOddielovVI><PocetOddielovVII>0</PocetOddielovVII><PocetInych>0</PocetInych><Poznamka>Rodné číslo: 910101/1111

Tento dokument bol vygenerovaný pomocou Bratislavského konta.</Poznamka></SuhrnPriloh><DatumZadaniaPodania>2024-01-01T01:00:00.000+01:00</DatumZadaniaPodania><ZakladneVyhlasenie><SpravnostUdajovText>Všeobecné informácie o poskytnutí, spracovaní a ochrane osobných údajov nájdete na https://esluzby.bratislava.sk/page/ochrana-osobnych-udajov</SpravnostUdajovText><SuhlasSoSpracovanimText>Týmto dávam na základe slobodnej vôle súhlas na spracovanie mojich osobných údajov uvedených vo formulári tohto podania a získaných z môjho osobného dokladu za v zmysle Nariadenia európskeho parlamentu a rady EÚ 2016/679 o ochrane fyzických osôb pri spracúvaní osobných údajov a o voľnom pohybe takýchto údajov a zákona č. 18/2018 Z.z. o ochrane osobných údajov a o zmene a doplnení niektorých zákonov. Zároveň potvrdzujem dovŕšenie veku 16 rokov pre potreby spracovania osobných údajov. Osobné údaje poskytujem za účelom spracovania mojej žiadosti.</SuhlasSoSpracovanimText><PoskytujemSuhlas>true</PoskytujemSuhlas><PoskytujemSuhlasText>Poskytujem súhlas na spracovanie osobných údajov</PoskytujemSuhlasText><NeposkytujemSuhlas>false</NeposkytujemSuhlas><NeposkytujemSuhlasText>Neposkytujem súhlas na spracovanie osobných údajov</NeposkytujemSuhlasText></ZakladneVyhlasenie><Dorucenie><AdresatPodania><AdresatPodania>Mesto</AdresatPodania></AdresatPodania><Checkbox><Notifikacia>true</Notifikacia></Checkbox><FormaOdoslaniaZiadosti>Elektronicky</FormaOdoslaniaZiadosti><FormaDoruceniaRozhodnutia><TypSposobuDorucenia>Elektronická schránka</TypSposobuDorucenia></FormaDoruceniaRozhodnutia></Dorucenie></Body></E-form>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2",
  "xslMediaDestinationTypeDescription": "TXT",
  "xslReferenceURI": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > priznanieKDaniZNehnutelnostiExample4 > should generate correct signer data 1`] = `
{
  "objectDescription": "",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2",
  "objectId": "object_123e4567-e89b-12d3-a456-426614174000",
  "signatureId": "form_data_dc017be6a66e77d44773b2a9babfe2feafae0830_20240101000000",
  "xdcIdentifier": "",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="utf-8"?>
<xs:schema elementFormDefault="qualified"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
	xmlns:tns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
	xmlns:base="http://schemas.gov.sk/form/esmao/base/1.0" targetNamespace="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2">
	<xs:complexType name="AdresaType">
		<xs:sequence>
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="UlicaACislo" type="UlicaACisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="POBOX" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PoschodieACisloBytu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PSC" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Obec" type="EnumerationValueType" />
			<xs:element name="CastObce" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Stat" type="StatType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="AdresatPodaniaEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Mesto" />
			<xs:enumeration value="Mestská časť" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AdresatPodaniaType">
		<xs:sequence>
			<xs:element name="AdresatPodania" type="AdresatPodaniaEnumType" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CheckboxType">
		<xs:sequence>
			<xs:element name="Notifikacia" type="xs:boolean" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="DesatinneCisloPresnostNaDveDesatinneMiesta">
		<xs:restriction base="xs:decimal">
			<xs:fractionDigits value="2" />
			<xs:minInclusive value="0" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DorucenieType">
		<xs:sequence>
			<xs:element name="AdresatPodania" type="AdresatPodaniaType" />
			<xs:element name="Checkbox" type="CheckboxType" minOccurs="0" />
			<xs:element name="FormaOdoslaniaZiadosti" type="FormaOdoslaniaZiadostiEnumType" />
			<xs:element name="FormaDoruceniaRozhodnutia" type="FormaDoruceniaRozhodnutiaType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
    <xs:complexType name="E-formMetaType">
    <xs:annotation>
      <xs:documentation>Metaúdaje elektronického formulára</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ID" type="xs:string" />
      <xs:element name="Name" type="xs:string" />
      <xs:element name="Description" type="xs:string" minOccurs="0" />
      <xs:element name="Gestor" type="xs:string" />
      <xs:element name="RecipientId" type="xs:string" />
      <xs:element name="Version" type="xs:string" />
      <xs:element name="ZepRequired" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
	<xs:simpleType name="EMailType">
		<xs:restriction base="xs:string">
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="EnumerationType" abstract="true">
		<xs:annotation>
			<xs:documentation>Položka číselníka</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="xs:string">
				<xs:annotation>
					<xs:documentation>Kód</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Názov</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WsEnumCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Kod ciselnika WS sluzby</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EnumerationValueType">
		<xs:sequence>
			<xs:element name="Code" type="xs:string" minOccurs="0" />
			<xs:element name="Name" type="xs:string" />
			<xs:element name="WsEnumCode" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="FormaDoruceniaRozhodnutiaEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Pošta" />
			<xs:enumeration value="Elektronická schránka" />
			<xs:enumeration value="Osobne" />
			<xs:enumeration value="Fax" />
			<xs:enumeration value="Telefonicky" />
			<xs:enumeration value="E-mail" />
			<xs:enumeration value="Bez odpovede" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="FormaDoruceniaRozhodnutiaType">
		<xs:sequence>
			<xs:element name="TypSposobuDorucenia" type="FormaDoruceniaRozhodnutiaEnumType" />
			<xs:element name="AdresaDoruceniaRozhodnutia" type="AdresaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresatPodania" type="AdresatPodaniaEnumType" minOccurs="0" maxOccurs="1" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="FaxPreDorucenie" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TelefonPreDorucenie" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="EmailPreDorucenie" type="EMailType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="FormaOdoslaniaZiadostiEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Elektronicky" />
			<xs:enumeration value="Listinne" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="IdentifikaciaOsobyType">
		<xs:sequence>
			<xs:element name="TitulyPredMenom" type="TitulyPredMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodnePriezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyZaMenom" type="TitulyZaMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumNarodenia" type="xs:date" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCislo" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="CisloObcianskehoPreukazu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="MenoZastupcu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PriezviskoZastupcu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DIC" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{10}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PravnaForma" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="KodKrajinyType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{3}" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="KontaktnaOsobaType">
		<xs:sequence>
			<xs:element name="Meno" type="xs:string" />
			<xs:element name="Priezvisko" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="KontaktneUdajeType">
		<xs:sequence>
			<xs:element name="TelefonneCislo" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TelefonneCisloCele" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Email" type="EMailType" minOccurs="0" maxOccurs="1" />
			<xs:element name="KontaktnaOsoba" type="KontaktnaOsobaType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OpravnenaOsobaType">
		<xs:sequence>
			<xs:element name="PravnyVztah" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyPredMenom" type="TitulyPredMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyZaMenom" type="TitulyZaMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaOpravnenejOsoby" type="AdresaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="KontaktneUdajeOpravnenejOsoby" type="KontaktneUdajeType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OsobneUdajeType">
		<xs:sequence>
			<xs:element name="TypOsoby" type="EnumerationValueType" />
			<xs:element name="IdentifikaciaOsoby" type="IdentifikaciaOsobyType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrilohyType">
		<xs:sequence>
			<xs:element name="Priloha" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="RodneCisloType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{9,10}" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="StatType">
		<xs:complexContent>
			<xs:restriction base="EnumerationType">
				<xs:sequence>
					<xs:element name="Code" type="KodKrajinyType" />
					<xs:element name="Name" type="xs:string" />
					<xs:element name="WsEnumCode" type="xs:string" minOccurs="0" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TelefonneCisloType">
		<xs:sequence>
			<xs:element name="MedzinarodneVolacieCislo">
				<xs:simpleType>
					<xs:restriction base="xs:string">
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Predvolba">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[1-9][0-9]*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Cislo">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TitulyPredMenomType">
		<xs:sequence>
			<xs:element name="TitulPredMenom" type="EnumerationValueType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TitulyZaMenomType">
		<xs:sequence>
			<xs:element name="TitulZaMenom" type="EnumerationValueType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UlicaACisloType">
		<xs:sequence>
			<xs:element name="Ulica" type="xs:string" />
			<xs:element name="SupisneCislo" type="xs:integer" minOccurs="0" maxOccurs="1" />
			<xs:element name="OrientacneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZakladneVyhlasenieType">
		<xs:sequence>
			<xs:element name="SpravnostUdajovText" type="xs:string" />
			<xs:element name="SuhlasSoSpracovanimText" type="xs:string" />
			<xs:element name="PoskytujemSuhlas" type="xs:boolean" default="false" />
			<xs:element name="PoskytujemSuhlasText" type="xs:string" />
			<xs:element name="NeposkytujemSuhlas" type="xs:boolean" default="false" />
			<xs:element name="NeposkytujemSuhlasText" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="E-form">
		<xs:complexType>
			<xs:sequence>
                <xs:element name="Meta" type="E-formMetaType" />
				<xs:element name="Body">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="InstanceID" type="xs:string" minOccurs="0" />
							<xs:element name="DruhPriznania" type="EnumerationValueType" />
							<xs:element name="NaRok" type="xs:nonNegativeInteger" />
							<xs:element name="Danovnik" type="OsobneUdajeType" />
							<xs:element name="AdresaDanovnika" type="AdresaType" />
							<xs:element name="OpravnenaOsoba" type="OpravnenaOsobaType" minOccurs="0" maxOccurs="1" />
							<xs:element name="KontaktneUdajeDanovnika" type="KontaktneUdajeType" minOccurs="0" />
							<xs:element name="DanZPozemkov" type="DanZPozemkovType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZoStaviebJedenUcel" type="DanZoStaviebJedenUcelType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZoStaviebViacereUcely" type="DanZoStaviebViacereUcelyType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZBytovANebytovychPriestorov" type="DanZBytovANebytovychPriestorovType" minOccurs="0" maxOccurs="1" />
							<xs:element name="Priloha" type="PrilohaType" minOccurs="0" maxOccurs="1" />
							<xs:element name="SuhrnPriloh" type="SuhrnPrilohType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DatumZadaniaPodania" type="xs:dateTime" minOccurs="0" maxOccurs="1" />
							<xs:element name="ZakladneVyhlasenie" type="ZakladneVyhlasenieType" />
							<xs:element name="Prilohy" type="PrilohyType" minOccurs="0" maxOccurs="1" />
							<xs:element name="Dorucenie" type="DorucenieType" />
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="DanZPozemkovType">
		<xs:sequence>
			<xs:element name="DanZPozemkovZaznam" type="DanZPozemkovZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZPozemkovZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Obec" type="xs:string" />
			<xs:element name="DruhyZmien" type="DruhyZmienType" />
			<xs:element name="HodnotaPozemkuUrcenaZnalcom" type="xs:boolean" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="Pozemky" type="PozemkyType" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DruhyZmienType">
		<xs:sequence>
			<xs:element name="DruhZmeny" type="EnumerationValueType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PozemkyType">
		<xs:sequence>
			<xs:element name="Pozemok" type="PozemokType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PozemokType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="Vymera" type="DesatinneCisloPresnostNaDveDesatinneMiesta" />
			<xs:element name="DruhPozemku" type="EnumerationValueType" />
			<xs:element name="VyuzitiePozemku" type="xs:string" minOccurs="0" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebJedenUcelType">
		<xs:sequence>
			<xs:element name="DanZoStaviebJedenUcelZaznam" type="DanZoStaviebJedenUcelZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebJedenUcelZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaStavby" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="PredmetDane" type="EnumerationValueType" />
			<xs:element name="ZakladDane" type="xs:nonNegativeInteger" />
			<xs:element name="PocetPodlazi" type="xs:nonNegativeInteger" />
			<xs:element name="CelkovaVymeraPodlahovychPloch" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebViacereUcelyType">
		<xs:sequence>
			<xs:element name="DanZoStaviebViacereUcelyZaznam" type="DanZoStaviebViacereUcelyZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebViacereUcelyZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaStavby" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="PopisStavby" type="xs:string" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="ZakladDane" type="xs:nonNegativeInteger" />
			<xs:element name="CelkovaVymeraPodlahovychPloch" type="xs:nonNegativeInteger" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochNaJednotliveUcely" type="VymeraPlochNaJednotliveUcelyType" />
			<xs:element name="PocetPodlazi" type="xs:nonNegativeInteger" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochNaJednotliveUcelyType">
		<xs:sequence>
			<xs:element name="VymeraPlochNaJednotlivyUcel" type="VymeraPlochNaJednotlivyUcelType" minOccurs="9" maxOccurs="9" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochNaJednotlivyUcelType">
		<xs:sequence>
			<xs:element name="Ucel" type="EnumerationValueType" />
			<xs:element name="Vymera" type="DesatinneCisloPresnostNaDveDesatinneMiesta" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZBytovANebytovychPriestorovType">
		<xs:sequence>
			<xs:element name="DanZBytovANebytovychPriestorovZaznam" type="DanZBytovANebytovychPriestorovZaznamType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZBytovANebytovychPriestorovZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaBytu" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" minOccurs="0" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="CisloBytu" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="PopisBytu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="NebytovePriestory" type="NebytovePriestoryType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ZakladDane" type="ZakladDaneType" />
			<xs:element name="VymeraPodlahovejPlochyVyuzivanejNaIneUcely" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="VymeraPlochOslobodenychOdDaneType" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZakladDaneType">
		<xs:sequence>
			<xs:element name="Byt" type="xs:nonNegativeInteger" />
			<xs:element name="NebytovyPriestor" type="xs:nonNegativeInteger" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochOslobodenychOdDaneType">
		<xs:sequence>
			<xs:element name="Byt" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="NebytovyPriestor" type="xs:nonNegativeInteger" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NebytovePriestoryType">
		<xs:sequence>
			<xs:element name="NebytovyPriestor" type="NebytovyPriestorType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NebytovyPriestorType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="CisloVBytovomDome" type="xs:string" />
			<xs:element name="UcelVyuzitiaVBytovomDome" type="xs:string" />
			<xs:element name="VymeraPodlahovychPloch" type="xs:nonNegativeInteger" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SuhrnPrilohType">
		<xs:sequence>
			<xs:element name="PocetOddielovII" type="xs:integer" />
			<xs:element name="PocetOddielovIII" type="xs:integer" />
			<xs:element name="PocetOddielovIV" type="xs:integer" />
			<xs:element name="PocetOddielovV" type="xs:integer" />
			<xs:element name="PocetOddielovVI" type="xs:integer" />
			<xs:element name="PocetOddielovVII" type="xs:integer" />
			<xs:element name="PocetInych" type="xs:integer" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrilohaType">
		<xs:sequence>
			<xs:element name="Obec" type="xs:string" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PozemkyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyF" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyG" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyH" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyI" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyJ" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyK" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyL" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyF" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<xsl:stylesheet version="2.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:z="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
    xmlns:fn="http://www.w3.org/2005/xpath-functions">

    <xsl:output method="text" encoding="utf-8" indent="no" />
    <xsl:preserve-space elements="*" />

    <xsl:template name="base_adresa">
        <xsl:param name="id_prefix" select="'Adresa '" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="showPoschodie" />
        <xsl:param name="typOsoby" />
        
        
        
        <xsl:if test="$id_prefix = 'FO'">
            <xsl:value-of select="concat($odsadenie, 'Adresa trvalého bydliska &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'FOP'">
            <xsl:value-of select="concat($odsadenie, 'Adresa miesta podnikania / sídlo &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'PO'">
            <xsl:value-of select="concat($odsadenie, 'Adresa sídla spoločnosti &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'MC'">
            <xsl:value-of select="concat($odsadenie, 'Adresa sídla &#10;')" />
        </xsl:if>
<!--         Ked neni dany typ osoby tak bude brat preddefinovanu hodnotu -->
        <xsl:if test="($id_prefix != 'FO') and ($id_prefix != 'PO') and ($id_prefix != 'FOP') and ($id_prefix != 'MC')">
            <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        </xsl:if>
        
            
        
        <xsl:for-each select="$values" >
            <xsl:if test="./*[local-name() = 'Meno']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'Priezvisko']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'ObchodneMenoNazov']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Obchodné meno / názov: ', ./*[local-name() = 'ObchodneMenoNazov'], '&#10;')"/>
            </xsl:if>
            
            <xsl:for-each select="./*[local-name() = 'UlicaACislo']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Ulica: ', ./*[local-name() = 'Ulica'], '&#10;')"/>
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Číslo: ', ./*[local-name() = 'SupisneCislo'], '/', ./*[local-name() = 'OrientacneCislo'], '&#10;')"/>
            </xsl:for-each>
            
            <xsl:if test="$showPoschodie = 'true'">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Poschodie a číslo bytu: ', ./*[local-name() = 'PoschodieACisloBytu'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'POBOX']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'P.O.Box: ', ./*[local-name() = 'POBOX'], '&#10;')"/>
            </xsl:if>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'PSČ: ', ./*[local-name() = 'PSC'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Obec: ', ./*[local-name() = 'Obec']/*[local-name() = 'Name'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Časť obce: ', ./*[local-name() = 'CastObce'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Štát: ', ./*[local-name() = 'Stat']/*[local-name() = 'Name'], '&#10;')"/>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_adresat_podania">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="adresatPodaniaMestoText" select="'Mesto'" />
        <xsl:param name="adresatPodaniaMCInyText" select="''" />

        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        <xsl:value-of select="concat($odsadenie, '&#09;', $id_prefix, ': ')"/>

        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mesto'">
            <xsl:value-of select="concat($adresatPodaniaMestoText, '&#10;')" />
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mestská časť'">
            <xsl:text>Mestská časť&#10;</xsl:text>
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', $values/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')"/>
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mesto a iný subjekt'">
            <xsl:value-of select="concat($adresatPodaniaMestoText, '&#10;')" />
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mestská časť a iný subjekt'">
            <xsl:text>Mestská časť&#10;</xsl:text>
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', $values/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], $adresatPodaniaMCInyText, '&#10;')"/>
        </xsl:if>
    </xsl:template>

    <xsl:template name="base_array_to_string">
        <xsl:param name="id_prefix" />
        <xsl:param name="value" />
        <xsl:param name="arrayName" />
        <xsl:param name="odsadenie" />
        <xsl:value-of select="concat($odsadenie, $id_prefix, ': ')" />
        
        <xsl:variable name="arraylengthPred" select="count($value/*[local-name() = $arrayName])" />
        
        <xsl:for-each select="$value/*[local-name() = $arrayName]">
            <xsl:variable name="i" select="position()" />
            <xsl:value-of select="./*[local-name() = 'Name']" />
            <xsl:if test="$i &lt; $arraylengthPred">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>&#10;</xsl:text>
    </xsl:template>

    <xsl:template name="base_date_with_name">
        <xsl:param name="title" />
        <xsl:param name="value" />
        <xsl:param name="odsadenie" />

        <xsl:if test="$value != ''">
            <xsl:value-of select="concat($odsadenie, $title, ': ')"/>
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr" select="$value"/>
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
        </xsl:if>
    </xsl:template>

    <xsl:template name="base_dorucenie">
        <xsl:param name="id_prefix" select="'Doručenie'" />
        <xsl:param name="doruceniePodania" select="'Doručenie podania'" />
        <xsl:param name="dorucenieOdpovede" select="'Doručenie odpovede'" />
        <xsl:param name="formaOdoslania" select="'Forma odoslania podania'" />
        <xsl:param name="formaDorucenia" select="'Forma doručenia odpovede'" />
        <xsl:param name="adresaDorucenia" select="'Adresa doručenia odpovede'" />
        <xsl:param name="miestoOsobnehoVyzdvihnutia" select="'Miesto osobného vyzdvihnutia odpovede'" />
        <xsl:param name="adresatPodaniaMestoText" select="'Mesto'" />
        <xsl:param name="adresatPodaniaMCInyText" select="''" />
        <xsl:param name="osobneNaInySubjektText" />
        <xsl:param name="osobneVyzdvihnutieInySubjektText" />
        <xsl:param name="values" />
        <xsl:value-of select="concat($id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat('&#09;',$doruceniePodania, '&#10;')" />
            
            <xsl:call-template name="base_adresat_podania">
                <xsl:with-param name="id_prefix" select="'Adresát podania'" />
                <xsl:with-param name="values" select="./*[local-name() = 'AdresatPodania']" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
                <xsl:with-param name="adresatPodaniaMestoText" select="$adresatPodaniaMestoText" />
                <xsl:with-param name="adresatPodaniaMCInyText" select="$adresatPodaniaMCInyText" />
            </xsl:call-template>
            <xsl:value-of select="concat('&#09;&#09;', $formaOdoslania,': ' , ./*[local-name() = 'FormaOdoslaniaZiadosti'], '&#10;')" />
            
            <xsl:text>&#09;Notifikácia&#10;</xsl:text>
            
            <xsl:value-of select="concat('&#09;&#09;', 'Žiadam o zasielanie notifikácii zo spracovania podania: ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'Checkbox']/*[local-name() = 'Notifikacia'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            
            <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']">
                <xsl:value-of select="concat('&#09;',$dorucenieOdpovede, '&#10;')" />
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Pošta'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Pošta','&#10;')" />
                    <xsl:call-template name="base_adresa">
                        <xsl:with-param name="id_prefix" select="$adresaDorucenia" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresaDoruceniaRozhodnutia']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Elektronická schránka'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Elektronická schránka (eDesk)','&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Osobne na iný subjekt'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': ', $osobneNaInySubjektText,'&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;&#09;', $miestoOsobnehoVyzdvihnutia, ': ', $osobneVyzdvihnutieInySubjektText, '&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Osobne'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Osobne','&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;&#09;', $miestoOsobnehoVyzdvihnutia, ': ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresatPodania'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresatPodania'] = 'Mestská časť'">
                        <xsl:value-of select="concat('&#09;&#09;&#09;', 'Mestská časť: ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')" />
                    </xsl:if>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Fax'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Fax','&#10;')" />
                    <xsl:call-template name="base_telefon">
                        <xsl:with-param name="id_prefix" select="'Fax: '" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'FaxPreDorucenie']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Telefonicky'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Telefonicky','&#10;')" />
                    <xsl:call-template name="base_telefon">
                        <xsl:with-param name="id_prefix" select="'Telefónne číslo / mobil: '" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TelefonPreDorucenie']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'E-mail'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': E-mail','&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;', 'E-mail: ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'EmailPreDorucenie'],'&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Bez odpovede'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Bez odpovede','&#10;')" />
                </xsl:if>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_kontaktne_udaje">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        
        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat($odsadenie,'&#09;', 'E-mail: ', ./*[local-name() = 'Email'], '&#10;')"/>
            
            <xsl:if test="$values/*[local-name() = 'TelefonneCisloCele']">
                <xsl:value-of select="concat($odsadenie,'&#09;', 'Telefónne číslo: ', ./*[local-name() = 'TelefonneCisloCele'], '&#10;')"/>                
            </xsl:if>
            <xsl:if test="$values/*[local-name() = 'TelefonneCislo']">
                <xsl:for-each select="./*[local-name() = 'TelefonneCislo']">
                    <xsl:value-of select="concat($odsadenie,'&#09;', 'Telefónne číslo: ', ./*[local-name() = 'MedzinarodneVolacieCislo'], ' ', ./*[local-name() = 'Predvolba'], ' ', ./*[local-name() = 'Cislo'], '&#10;')"/>
                </xsl:for-each>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'KontaktnaOsoba']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Kontaktná osoba', '&#10;')" />
                <xsl:for-each select="./*[local-name() = 'KontaktnaOsoba']">
                    <xsl:value-of select="concat($odsadenie, '&#09;&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')"/>
                    <xsl:value-of select="concat($odsadenie, '&#09;&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')"/>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_telefon">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />

        <xsl:value-of select="concat($odsadenie, $id_prefix)" />
        <xsl:value-of select="concat($values/*[local-name() = 'MedzinarodneVolacieCislo'], ' ')" />
        <xsl:value-of select="concat($values/*[local-name() = 'Predvolba'], ' ')" />
        <xsl:value-of select="concat($values/*[local-name() = 'Cislo'], '&#10;')" />
    </xsl:template>

    <xsl:template name="base_ziadatel">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="menoZastupcuText" select="'Meno zástupcu'" />
        <xsl:param name="priezviskoZastupcuText" select="'Priezvisko zástupcu'" />
        
        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Typ osoby: ', ./*[local-name() = 'TypOsoby']/*[local-name() = 'Name'], '&#10;')" />
            <xsl:for-each select="./*[local-name() = 'IdentifikaciaOsoby']">
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FO') or (../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FOP')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Rodné priezvisko: ', ./*[local-name() = 'RodnePriezvisko'], '&#10;')" />
                    <xsl:call-template name="base_array_to_string">
                        <xsl:with-param name="id_prefix" select="'Titul pred menom'" />
                        <xsl:with-param name="value" select="./*[local-name() = 'TitulyPredMenom']" />
                        <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        <xsl:with-param name="arrayName" select="'TitulPredMenom'" />
                    </xsl:call-template>
                    <xsl:call-template name="base_array_to_string">
                        <xsl:with-param name="id_prefix" select="'Titul za menom'" />
                        <xsl:with-param name="value" select="./*[local-name() = 'TitulyZaMenom']" />
                        <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        <xsl:with-param name="arrayName" select="'TitulZaMenom'" />
                    </xsl:call-template>
                    <xsl:if test="./*[local-name() = 'RodneCislo']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Rodné číslo: ', ./*[local-name() = 'RodneCislo'], '&#10;')"/>
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'DatumNarodenia']">
                        <xsl:call-template name="base_date_with_name">
                            <xsl:with-param name="title" select="'Dátum narodenia'" />
                            <xsl:with-param name="value" select="./*[local-name() = 'DatumNarodenia']" />
                            <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'CisloObcianskehoPreukazu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Číslo občianského preukazu: ', ./*[local-name() = 'CisloObcianskehoPreukazu'], '&#10;')"/>
                    </xsl:if>
                </xsl:if>
                
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'PO') or (../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FOP')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Obchodné meno / názov: ', ./*[local-name() = 'ObchodneMenoNazov'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Právna forma: ', ./*[local-name() = 'PravnaForma']/*[local-name() = 'Name'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'MenoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', $menoZastupcuText, ': ', ./*[local-name() = 'MenoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'PriezviskoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', $priezviskoZastupcuText, ': ', ./*[local-name() = 'PriezviskoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'IČO: ', ./*[local-name() = 'ICO'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                </xsl:if>
                
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FO')">                
                    <xsl:if test="./*[local-name() = 'DIC']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                    </xsl:if>
                </xsl:if>

                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'MC')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', ./*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'MenoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno zástupcu: ', ./*[local-name() = 'MenoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'PriezviskoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko zástupcu: ', ./*[local-name() = 'PriezviskoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'IČO: ', ./*[local-name() = 'ICO'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="format_date">
        <xsl:param name="instr"/>
        <!-- YYYY-MM-DD -->
        <xsl:variable name="yyyy">
            <xsl:value-of select="substring($instr,1,4)"/>
        </xsl:variable>
        <xsl:variable name="mm">
            <xsl:value-of select="substring($instr,6,2)"/>
        </xsl:variable>
        <xsl:variable name="dd">
            <xsl:value-of select="substring($instr,9,2)"/>
        </xsl:variable>

        <xsl:value-of select="concat($dd,'.',$mm,'.',$yyyy)"/>
    </xsl:template>

    <xsl:template name="zakladne_vyhlasenie">
        <xsl:param name="value" />

        <xsl:text>Vyhlásenie&#10;</xsl:text>
        <xsl:for-each select="$value" >
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'SpravnostUdajovText'], '&#10;')" />
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'SuhlasSoSpracovanimText'], '&#10;')" />
            <xsl:text>&#10;</xsl:text>
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'PoskytujemSuhlasText'], ': ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'PoskytujemSuhlas'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'NeposkytujemSuhlasText'], ': ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'NeposkytujemSuhlas'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>


    <xsl:template match="/z:E-form">
        <xsl:value-of select="concat(z:Meta/z:Name, '&#10;')" />

        <xsl:text>Priznanie&#10;</xsl:text>
        <xsl:value-of
            select="concat('&#09;', 'Druh priznania: ', z:Body/z:DruhPriznania/z:Name, '&#10;')" />
        <xsl:value-of select="concat('&#09;', 'Na rok: ', z:Body/z:NaRok, '&#10;')" />

        <xsl:call-template name="base_ziadatel">
            <xsl:with-param name="id_prefix" select="'Identifikačné údaje daňovníka'" />
            <xsl:with-param name="values" select="z:Body/z:Danovnik" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:call-template name="base_adresa">
            <xsl:with-param name="id_prefix" select="z:Body/z:Danovnik/z:TypOsoby/z:Code"/>
            <xsl:with-param name="values" select="z:Body/z:AdresaDanovnika" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:call-template name="base_kontaktne_udaje">
            <xsl:with-param name="id_prefix" select="'Kontaktné údaje'" />
            <xsl:with-param name="values"
                select="z:Body/z:KontaktneUdajeDanovnika" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:text>Oprávnená osoba&#10;</xsl:text>
        <xsl:text>&#09;Identifikačné údaje oprávnenej osoby&#10;</xsl:text>
        <xsl:value-of
            select="concat('&#09;&#09;', 'Právny vzťah: ', z:Body/z:OpravnenaOsoba/z:PravnyVztah/z:Name, '&#10;')" />
        <xsl:value-of
            select="concat('&#09;&#09;', 'Meno: ', z:Body/z:OpravnenaOsoba/z:Meno, '&#10;')" />
        <xsl:value-of
            select="concat('&#09;&#09;', 'Priezvisko: ', z:Body/z:OpravnenaOsoba/z:Priezvisko, '&#10;')" />
        <xsl:call-template name="base_array_to_string">
            <xsl:with-param name="id_prefix" select="'Titul pred menom'" />
            <xsl:with-param name="value" select="z:Body/z:OpravnenaOsoba/*[local-name() = 'TitulyPredMenom']" />
            <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            <xsl:with-param name="arrayName" select="'TitulPredMenom'" />
        </xsl:call-template>
        <xsl:call-template name="base_array_to_string">
            <xsl:with-param name="id_prefix" select="'Titul za menom'" />
            <xsl:with-param name="value" select="z:Body/z:OpravnenaOsoba/*[local-name() = 'TitulyZaMenom']" />
            <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            <xsl:with-param name="arrayName" select="'TitulZaMenom'" />
        </xsl:call-template>
        <xsl:value-of
            select="concat('&#09;&#09;', 'Obchodné meno / názov: ', z:Body/z:OpravnenaOsoba/z:ObchodneMenoNazov, '&#10;')" />
        <xsl:call-template name="base_adresa">
            <xsl:with-param name="id_prefix"
                select="'Adresa trvalého bydliska / Adresa sídla spoločnosti'" />
            <xsl:with-param name="values"
                select="z:Body/z:OpravnenaOsoba/z:AdresaOpravnenejOsoby" />
            <xsl:with-param name="odsadenie" select="'&#09;'" />
        </xsl:call-template>
        <xsl:call-template name="base_kontaktne_udaje">
            <xsl:with-param name="id_prefix" select="'Kontaktné údaje'" />
            <xsl:with-param name="values"
                select="z:Body/z:OpravnenaOsoba/z:KontaktneUdajeOpravnenejOsoby" />
            <xsl:with-param name="odsadenie" select="'&#09;'" />
        </xsl:call-template>

        <xsl:if test="z:Body/*[local-name() = 'DanZPozemkov']">
            <xsl:text>II. Oddiel - Daň z pozemkov&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZPozemkov/z:DanZPozemkovZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
                        
            <xsl:value-of
                select="concat('&#09;&#09;', 'Obec, kde sa pozemok nachádza: ', z:Obec, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:HodnotaPozemkuUrcenaZnalcom = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Hodnota pozemku určená znaleckým posudkom: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Hodnota pozemku určená znaleckým posudkom: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;Pozemky&#10;</xsl:text>
            <xsl:for-each
                select="z:Pozemky/*[local-name() = 'Pozemok']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', 'Poradové číslo záznamu ', ./z:PoradoveCislo, ':', '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Názov katastrálneho územia: ', ./z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Číslo parcely: ', ./z:CisloParcely, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Výmera pozemku: ', ./z:Vymera, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Druh pozemku: ', ./z:DruhPozemku/z:Name, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Využitie pozemku: ', ./z:VyuzitiePozemku, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumVznikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumZanikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
            </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZoStaviebJedenUcel']">
            <xsl:text>III. Oddiel - Daň zo stavieb - stavba slúžiaca na jeden účel&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZoStaviebJedenUcel/z:DanZoStaviebJedenUcelZaznam">
            
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa stavby'" />
                <xsl:with-param name="values"
                    select="z:AdresaStavby" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Predmet dane: ', z:PredmetDane/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Základ dane (výmera zastavanej plochy stavby, u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:ZakladDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet nadzemných a podzemných podlaží okrem prvého nadzemného podlažia: ', z:PocetPodlazi, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Celková výmera podlahových plôch všetkých podlaží stavby (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:CelkovaVymeraPodlahovychPloch, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahových plôch časti stavby, ktorá je oslobodená od dane zo stavieb (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:VymeraPlochOslobodenychOdDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
            </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZoStaviebViacereUcely']">
            <xsl:text>III. Oddiel - Daň zo stavieb - stavba slúžiaca na viaceré účely&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZoStaviebViacereUcely/z:DanZoStaviebViacereUcelyZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa stavby'" />
                <xsl:with-param name="values"
                    select="z:AdresaStavby" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Popis stavby: ', z:PopisStavby, '&#10;')" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Základ dane (výmera zastavanej plochy stavby, u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:ZakladDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Celková výmera podlahových plôch všetkých podlaží stavby (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:CelkovaVymeraPodlahovychPloch, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahových plôch časti stavby, ktorá je oslobodená od dane zo stavieb (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:VymeraPlochOslobodenychOdDane, '&#10;')" />
            <xsl:text>&#09;&#09;Výmera podlahových plôch časti stavby využívanej na jednotlivý účel (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu)&#10;</xsl:text>
            <xsl:for-each
                select="z:VymeraPlochNaJednotliveUcely/*[local-name() = 'VymeraPlochNaJednotlivyUcel']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', ./z:Ucel/z:Name, ': ', ./z:Vymera, '&#10;')" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet nadzemných a podzemných podlaží okrem prvého nadzemného podlažia: ', z:PocetPodlazi, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
        </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZBytovANebytovychPriestorov']">
            <xsl:text>IV. Oddiel - Daň z bytov a z nebytových priestorov v bytovom dome&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZBytovANebytovychPriestorov/z:DanZBytovANebytovychPriestorovZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa bytu'" />
                <xsl:with-param name="values"
                    select="z:AdresaBytu" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo bytu: ', z:CisloBytu, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Popis bytu: ', z:PopisBytu, '&#10;')" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:text>&#09;&#09;Základ dane (výmera podlahovej plochy u spoluvlastníkov vo výške ich spoluvlastníckeho podielu)&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'a) Bytu: ', z:ZakladDane/z:Byt, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'b) Nebytového priestoru v bytovom dome: ', z:ZakladDane/z:NebytovyPriestor, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahovej plochy bytu alebo časti bytu v bytovom dome, ktorý sa využíva na iný účel ako na bývanie: ', z:VymeraPodlahovejPlochyVyuzivanejNaIneUcely, '&#10;')" />
            <xsl:text>&#09;&#09;Byt alebo nebytový priestor v bytovom dome alebo ich časti oslobodené od dane z bytov&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'a) Výmera podlahovej plochy bytu alebo jeho časti: ', z:VymeraPlochOslobodenychOdDane/z:Byt, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'b) Výmera podlahovej plochy nebytového priestoru v bytovom dome alebo jeho časti: ', z:VymeraPlochOslobodenychOdDane/z:NebytovyPriestor, '&#10;')" />
            <xsl:text>&#09;&#09;Nebytové priestory&#10;</xsl:text>
            <xsl:for-each
                select="z:NebytovePriestory/*[local-name() = 'NebytovyPriestor']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', 'Nebytový priestor č.', ./z:PoradoveCislo, ':', '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Číslo nebytového priestoru v bytovom dome: ', ./z:CisloVBytovomDome, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Účel využitia nebytového priestoru v bytovom dome: ', ./z:UcelVyuzitiaVBytovomDome, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Výmera podlahových plôch nebytového priestoru v bytovom dome: ', ./z:VymeraPodlahovychPloch, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumVznikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumZanikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
        </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'Priloha']">
            <xsl:text>Príloha – Zníženie alebo oslobodenie od dane&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;', 'Obec: ', z:Body/z:Priloha/z:Obec, '&#10;')" />
            <xsl:text>&#09;K oddielu II. Pozemky&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) Pozemky vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) Pozemky, na ktorých sú cintoríny, kolumbáriá, urnové háje a rozptylové lúky: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) Močiare, plochy slatín a slancov, rašeliniská, remízky, háje vetrolamy a pásma hygienickej ochrany vodných zdrojov I. a II. stupňa, pásma ochrany prírodných liečivých zdrojov I. a II. stupňa a zdrojov prírodných minerálnych vôd stolových I. a II. stupňa: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) Časti pozemkov, na ktorých sú zriadené meračské značky, signály a iné zariadenia bodov, geodetických základov, stožiare rozvodu elektrickej energie, stĺpy telekomunikačného vedenia a televízne prevádzače, nadzemné časti zariadení na rozvod vykurovacích plynov a pásy pozemkov v lesoch vyčlenené na rozvod elektrickej energie a vykurovacích plynov: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) Pozemky verejne prístupných parkov, priestorov a športovísk: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;f) Pozemky v národných parkoch, chránených krajinných oblastiach, chránených areáloch, prírodných rezerváciách, národných prírodných rezerváciách, prírodných pamiatkach, národných prírodných pamiatkach, chránených krajinných prvkoch, vo vyhlásených ochranných pásmach s III. a IV. stupňom ochrany a územiach medzinárodného významu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyF = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;g) Pozemky funkčne spojené so stavbami slúžiacimi verejnej doprave: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyG = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;h) Pozemky užívané školami a školskými zariadeniami: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyH = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;i) Lesné pozemky od nasledujúceho roka po vzniku holiny do roku plánovaného začatia výchovnej ťažby (prvej prebierky): </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyI = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;j) Pozemky, ktorých hospodárske využívanie je obmedzené vzhľadom na podkopanie, ich umiestnenie v oblasti dobývacích priestorov alebo pásiem hygienickej ochrany vody II. a III. stupňa, ochranu a tvorbu životného prostredia, ich postihnutie ekologickým katastrofami, nadmerným imisným zaťažením, na pozemky rekultivované investičným zúrodňovaním okrem rekultivácii plne financovaných zo štátneho rozpočtu, na rokliny, výmole, vymedzené s kroviskami alebo kamením, pásma ochrany prírodných liečivých zdrojov II. a III. stupňa a zdrojov prírodných minerálnych vôd stolových II. a III. stupňa, na genofondové plochy, brehové porasty a iné plochy stromovej a krovinatej vegetácie na nelesných pozemkoch s pôdoochranou, ekologickou alebo krajinotvornou funkciou: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyJ = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;k) Pozemky, ktorých vlastníkmi sú fyzické osoby v hmotnej núdzi alebo fyzické osoby staršie ako 62 rokov, ak tieto pozemky slúžia výhradne na ich osobnú potrebu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyK = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;l) pozemky okrem pozemkov v zastavanej časti obce, na ktorých vykonávajú samostatne hospodáriaci roľníci poľnohospodársku výrobu ako svoju hlavnú činnosť: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyL = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
    
            <xsl:text>&#09;K oddielu III. - Stavby&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) stavby vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) stavby slúžiace školám, školským zariadeniam a zdravotníckym zariadeniam, zariadeniam na pracovnú rehabilitáciu a rekvalifikáciu občanov so zmenenou pracovnou schopnosťou, stavby užívané na účely sociálnej pomoci a múzeá, galérie, knižnice, divadlá, kiná, amfiteátre, výstavné siene, osvetové zariadenia: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) stavby, ktorých využitie je obmedzené z dôvodu rozsiahlej rekonštrukcie, stavebnej uzávery alebo umiestnenia na podkopanom pozemku: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) stavby na bývanie vo vlastníctve fyzických osôb v hmotnej núdzi, fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ako aj prevažne alebo úplne bezvládnych fyzických osôb, ktoré slúžia na ich trvalé bývanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) garáže vo vlastníctve fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ktoré slúžia pre motorové vozidlo používané na ich dopravu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;f) stavby na pôdohospodársku produkciu, skleníky, stavby využívané na skladovanie vlastnej pôdohospodárskej produkcie, stavby pre vodné hospodárstvo okrem stavieb na skladovanie inej ako vlastnej pôdohospodárskej produkcie a stavieb na administratívu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyF = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
    
            <xsl:text>&#09;K oddielu IV. - Byty&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) byty vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) byty slúžiace školám, školským zariadeniam a zdravotníckym zariadeniam, zariadeniam na pracovnú rehabilitáciu a rekvalifikáciu občanov so zmenenou pracovnou schopnosťou: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) byty, ktorých využitie je obmedzené z dôvodu rozsiahlej rekonštrukcie, stavebnej uzávery alebo umiestnenia na podkopanom pozemku: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) byty vo vlastníctve fyzických osôb v hmotnej núdzi, fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ako aj prevažne alebo úplne bezvládnych fyzických osôb, ktoré slúžia na ich trvalé bývanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) nebytové priestory v bytových domoch slúžiace ako garáž vo vlastníctve fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ktoré slúžia pre motorové vozidlo používané na ich dopravu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;', 'Poznámka: ', z:Body/z:Priloha/z:Poznamka, '&#10;')" />
        </xsl:if>
        
            <xsl:text>Súhrn príloh &#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh II. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh III. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovIII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh IV. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovIV, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh V. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovV, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh VI. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovVI, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh VII. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovVII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet iných príloh: ', z:Body/z:SuhrnPriloh/z:PocetInych, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Poznámka: ', z:Body/z:SuhrnPriloh/z:Poznamka, '&#10;')" />
        
        <xsl:call-template name="base_dorucenie">
            <xsl:with-param name="values" select="z:Body/z:Dorucenie" />
        </xsl:call-template>
        
        <xsl:call-template name="zakladne_vyhlasenie">
            <xsl:with-param name="value" select="z:Body/z:ZakladneVyhlasenie" />
        </xsl:call-template>

    </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><E-form xmlns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"><Meta><ID>esmao.eforms.bratislava.obec_024</ID><Name>Ohlásenie o vzniku, zániku alebo zmene daňovej povinnosti k dani z nehnuteľností</Name><Gestor>ESMaO</Gestor><RecipientId>ico://sk/00603481</RecipientId><Version>201501.2</Version><ZepRequired>false</ZepRequired></Meta><Body><DruhPriznania><Code>2</Code><Name>Čiastkové priznanie na zánik daňovej povinnosti</Name><WsEnumCode>ICL0020</WsEnumCode></DruhPriznania><NaRok>2024</NaRok><Danovnik><TypOsoby><Code>FO</Code><Name>fyzická osoba</Name><WsEnumCode>ICL0096</WsEnumCode></TypOsoby><IdentifikaciaOsoby><Meno>Test</Meno><Priezvisko>Test </Priezvisko></IdentifikaciaOsoby></Danovnik><AdresaDanovnika><Meno>Test</Meno><Priezvisko>Test </Priezvisko><UlicaACislo><Ulica>Test</Ulica><OrientacneCislo>1111/61</OrientacneCislo></UlicaACislo><PSC>91701</PSC><Obec><Name>Trnava</Name></Obec><Stat><Code>703</Code><Name>Slovenská republika</Name><WsEnumCode>0086</WsEnumCode></Stat></AdresaDanovnika><KontaktneUdajeDanovnika><TelefonneCislo><MedzinarodneVolacieCislo>+421</MedzinarodneVolacieCislo><Predvolba>911</Predvolba><Cislo>111111</Cislo></TelefonneCislo><Email>test@test.sk</Email></KontaktneUdajeDanovnika><Priloha><Obec>Bratislava</Obec><PozemkyA>false</PozemkyA><PozemkyB>false</PozemkyB><PozemkyC>false</PozemkyC><PozemkyD>false</PozemkyD><PozemkyE>false</PozemkyE><PozemkyF>false</PozemkyF><PozemkyG>false</PozemkyG><PozemkyH>false</PozemkyH><PozemkyI>false</PozemkyI><PozemkyJ>false</PozemkyJ><PozemkyK>false</PozemkyK><PozemkyL>false</PozemkyL><StavbyA>false</StavbyA><StavbyB>false</StavbyB><StavbyC>false</StavbyC><StavbyD>false</StavbyD><StavbyE>false</StavbyE><StavbyF>false</StavbyF><BytyA>false</BytyA><BytyB>false</BytyB><BytyC>false</BytyC><BytyD>false</BytyD><BytyE>false</BytyE></Priloha><SuhrnPriloh><PocetOddielovII>0</PocetOddielovII><PocetOddielovIII>0</PocetOddielovIII><PocetOddielovIV>0</PocetOddielovIV><PocetOddielovV>0</PocetOddielovV><PocetOddielovVI>0</PocetOddielovVI><PocetOddielovVII>0</PocetOddielovVII><PocetInych>0</PocetInych><Poznamka>Rodné číslo: 93823741111

Tento dokument bol vygenerovaný pomocou Bratislavského konta.</Poznamka></SuhrnPriloh><DatumZadaniaPodania>2024-01-01T01:00:00.000+01:00</DatumZadaniaPodania><ZakladneVyhlasenie><SpravnostUdajovText>Všeobecné informácie o poskytnutí, spracovaní a ochrane osobných údajov nájdete na https://esluzby.bratislava.sk/page/ochrana-osobnych-udajov</SpravnostUdajovText><SuhlasSoSpracovanimText>Týmto dávam na základe slobodnej vôle súhlas na spracovanie mojich osobných údajov uvedených vo formulári tohto podania a získaných z môjho osobného dokladu za v zmysle Nariadenia európskeho parlamentu a rady EÚ 2016/679 o ochrane fyzických osôb pri spracúvaní osobných údajov a o voľnom pohybe takýchto údajov a zákona č. 18/2018 Z.z. o ochrane osobných údajov a o zmene a doplnení niektorých zákonov. Zároveň potvrdzujem dovŕšenie veku 16 rokov pre potreby spracovania osobných údajov. Osobné údaje poskytujem za účelom spracovania mojej žiadosti.</SuhlasSoSpracovanimText><PoskytujemSuhlas>true</PoskytujemSuhlas><PoskytujemSuhlasText>Poskytujem súhlas na spracovanie osobných údajov</PoskytujemSuhlasText><NeposkytujemSuhlas>false</NeposkytujemSuhlas><NeposkytujemSuhlasText>Neposkytujem súhlas na spracovanie osobných údajov</NeposkytujemSuhlasText></ZakladneVyhlasenie><Dorucenie><AdresatPodania><AdresatPodania>Mesto</AdresatPodania></AdresatPodania><Checkbox><Notifikacia>true</Notifikacia></Checkbox><FormaOdoslaniaZiadosti>Elektronicky</FormaOdoslaniaZiadosti><FormaDoruceniaRozhodnutia><TypSposobuDorucenia>Elektronická schránka</TypSposobuDorucenia></FormaDoruceniaRozhodnutia></Dorucenie></Body></E-form>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2",
  "xslMediaDestinationTypeDescription": "TXT",
  "xslReferenceURI": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > priznanieKDaniZNehnutelnostiExample5 > should generate correct signer data 1`] = `
{
  "objectDescription": "",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2",
  "objectId": "object_123e4567-e89b-12d3-a456-426614174000",
  "signatureId": "form_data_4a6719cc2ca4f88bd393df0d70447a424f7b465e_20240101000000",
  "xdcIdentifier": "",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="utf-8"?>
<xs:schema elementFormDefault="qualified"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
	xmlns:tns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
	xmlns:base="http://schemas.gov.sk/form/esmao/base/1.0" targetNamespace="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2">
	<xs:complexType name="AdresaType">
		<xs:sequence>
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="UlicaACislo" type="UlicaACisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="POBOX" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PoschodieACisloBytu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PSC" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Obec" type="EnumerationValueType" />
			<xs:element name="CastObce" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Stat" type="StatType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="AdresatPodaniaEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Mesto" />
			<xs:enumeration value="Mestská časť" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="AdresatPodaniaType">
		<xs:sequence>
			<xs:element name="AdresatPodania" type="AdresatPodaniaEnumType" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CheckboxType">
		<xs:sequence>
			<xs:element name="Notifikacia" type="xs:boolean" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="DesatinneCisloPresnostNaDveDesatinneMiesta">
		<xs:restriction base="xs:decimal">
			<xs:fractionDigits value="2" />
			<xs:minInclusive value="0" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DorucenieType">
		<xs:sequence>
			<xs:element name="AdresatPodania" type="AdresatPodaniaType" />
			<xs:element name="Checkbox" type="CheckboxType" minOccurs="0" />
			<xs:element name="FormaOdoslaniaZiadosti" type="FormaOdoslaniaZiadostiEnumType" />
			<xs:element name="FormaDoruceniaRozhodnutia" type="FormaDoruceniaRozhodnutiaType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
    <xs:complexType name="E-formMetaType">
    <xs:annotation>
      <xs:documentation>Metaúdaje elektronického formulára</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="ID" type="xs:string" />
      <xs:element name="Name" type="xs:string" />
      <xs:element name="Description" type="xs:string" minOccurs="0" />
      <xs:element name="Gestor" type="xs:string" />
      <xs:element name="RecipientId" type="xs:string" />
      <xs:element name="Version" type="xs:string" />
      <xs:element name="ZepRequired" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
	<xs:simpleType name="EMailType">
		<xs:restriction base="xs:string">
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="EnumerationType" abstract="true">
		<xs:annotation>
			<xs:documentation>Položka číselníka</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Code" type="xs:string">
				<xs:annotation>
					<xs:documentation>Kód</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Názov</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WsEnumCode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Kod ciselnika WS sluzby</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="EnumerationValueType">
		<xs:sequence>
			<xs:element name="Code" type="xs:string" minOccurs="0" />
			<xs:element name="Name" type="xs:string" />
			<xs:element name="WsEnumCode" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="FormaDoruceniaRozhodnutiaEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Pošta" />
			<xs:enumeration value="Elektronická schránka" />
			<xs:enumeration value="Osobne" />
			<xs:enumeration value="Fax" />
			<xs:enumeration value="Telefonicky" />
			<xs:enumeration value="E-mail" />
			<xs:enumeration value="Bez odpovede" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="FormaDoruceniaRozhodnutiaType">
		<xs:sequence>
			<xs:element name="TypSposobuDorucenia" type="FormaDoruceniaRozhodnutiaEnumType" />
			<xs:element name="AdresaDoruceniaRozhodnutia" type="AdresaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresatPodania" type="AdresatPodaniaEnumType" minOccurs="0" maxOccurs="1" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="FaxPreDorucenie" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TelefonPreDorucenie" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="EmailPreDorucenie" type="EMailType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="FormaOdoslaniaZiadostiEnumType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Elektronicky" />
			<xs:enumeration value="Listinne" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="IdentifikaciaOsobyType">
		<xs:sequence>
			<xs:element name="TitulyPredMenom" type="TitulyPredMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodnePriezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="MestskaCast" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyZaMenom" type="TitulyZaMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumNarodenia" type="xs:date" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCislo" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="CisloObcianskehoPreukazu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="MenoZastupcu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PriezviskoZastupcu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="DIC" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{10}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="PravnaForma" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="KodKrajinyType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{3}" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="KontaktnaOsobaType">
		<xs:sequence>
			<xs:element name="Meno" type="xs:string" />
			<xs:element name="Priezvisko" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="KontaktneUdajeType">
		<xs:sequence>
			<xs:element name="TelefonneCislo" type="TelefonneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TelefonneCisloCele" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Email" type="EMailType" minOccurs="0" maxOccurs="1" />
			<xs:element name="KontaktnaOsoba" type="KontaktnaOsobaType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OpravnenaOsobaType">
		<xs:sequence>
			<xs:element name="PravnyVztah" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="Meno" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Priezvisko" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyPredMenom" type="TitulyPredMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="TitulyZaMenom" type="TitulyZaMenomType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ObchodneMenoNazov" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaOpravnenejOsoby" type="AdresaType" minOccurs="0" maxOccurs="1" />
			<xs:element name="KontaktneUdajeOpravnenejOsoby" type="KontaktneUdajeType" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OsobneUdajeType">
		<xs:sequence>
			<xs:element name="TypOsoby" type="EnumerationValueType" />
			<xs:element name="IdentifikaciaOsoby" type="IdentifikaciaOsobyType" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrilohyType">
		<xs:sequence>
			<xs:element name="Priloha" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="RodneCisloType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[0-9]{9,10}" />
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="StatType">
		<xs:complexContent>
			<xs:restriction base="EnumerationType">
				<xs:sequence>
					<xs:element name="Code" type="KodKrajinyType" />
					<xs:element name="Name" type="xs:string" />
					<xs:element name="WsEnumCode" type="xs:string" minOccurs="0" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="TelefonneCisloType">
		<xs:sequence>
			<xs:element name="MedzinarodneVolacieCislo">
				<xs:simpleType>
					<xs:restriction base="xs:string">
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Predvolba">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[1-9][0-9]*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="Cislo">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]*" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TitulyPredMenomType">
		<xs:sequence>
			<xs:element name="TitulPredMenom" type="EnumerationValueType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TitulyZaMenomType">
		<xs:sequence>
			<xs:element name="TitulZaMenom" type="EnumerationValueType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UlicaACisloType">
		<xs:sequence>
			<xs:element name="Ulica" type="xs:string" />
			<xs:element name="SupisneCislo" type="xs:integer" minOccurs="0" maxOccurs="1" />
			<xs:element name="OrientacneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZakladneVyhlasenieType">
		<xs:sequence>
			<xs:element name="SpravnostUdajovText" type="xs:string" />
			<xs:element name="SuhlasSoSpracovanimText" type="xs:string" />
			<xs:element name="PoskytujemSuhlas" type="xs:boolean" default="false" />
			<xs:element name="PoskytujemSuhlasText" type="xs:string" />
			<xs:element name="NeposkytujemSuhlas" type="xs:boolean" default="false" />
			<xs:element name="NeposkytujemSuhlasText" type="xs:string" />
		</xs:sequence>
	</xs:complexType>
	<xs:element name="E-form">
		<xs:complexType>
			<xs:sequence>
                <xs:element name="Meta" type="E-formMetaType" />
				<xs:element name="Body">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="InstanceID" type="xs:string" minOccurs="0" />
							<xs:element name="DruhPriznania" type="EnumerationValueType" />
							<xs:element name="NaRok" type="xs:nonNegativeInteger" />
							<xs:element name="Danovnik" type="OsobneUdajeType" />
							<xs:element name="AdresaDanovnika" type="AdresaType" />
							<xs:element name="OpravnenaOsoba" type="OpravnenaOsobaType" minOccurs="0" maxOccurs="1" />
							<xs:element name="KontaktneUdajeDanovnika" type="KontaktneUdajeType" minOccurs="0" />
							<xs:element name="DanZPozemkov" type="DanZPozemkovType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZoStaviebJedenUcel" type="DanZoStaviebJedenUcelType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZoStaviebViacereUcely" type="DanZoStaviebViacereUcelyType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DanZBytovANebytovychPriestorov" type="DanZBytovANebytovychPriestorovType" minOccurs="0" maxOccurs="1" />
							<xs:element name="Priloha" type="PrilohaType" minOccurs="0" maxOccurs="1" />
							<xs:element name="SuhrnPriloh" type="SuhrnPrilohType" minOccurs="0" maxOccurs="1" />
							<xs:element name="DatumZadaniaPodania" type="xs:dateTime" minOccurs="0" maxOccurs="1" />
							<xs:element name="ZakladneVyhlasenie" type="ZakladneVyhlasenieType" />
							<xs:element name="Prilohy" type="PrilohyType" minOccurs="0" maxOccurs="1" />
							<xs:element name="Dorucenie" type="DorucenieType" />
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="DanZPozemkovType">
		<xs:sequence>
			<xs:element name="DanZPozemkovZaznam" type="DanZPozemkovZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZPozemkovZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="Obec" type="xs:string" />
			<xs:element name="DruhyZmien" type="DruhyZmienType" />
			<xs:element name="HodnotaPozemkuUrcenaZnalcom" type="xs:boolean" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="Pozemky" type="PozemkyType" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DruhyZmienType">
		<xs:sequence>
			<xs:element name="DruhZmeny" type="EnumerationValueType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PozemkyType">
		<xs:sequence>
			<xs:element name="Pozemok" type="PozemokType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PozemokType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="Vymera" type="DesatinneCisloPresnostNaDveDesatinneMiesta" />
			<xs:element name="DruhPozemku" type="EnumerationValueType" />
			<xs:element name="VyuzitiePozemku" type="xs:string" minOccurs="0" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebJedenUcelType">
		<xs:sequence>
			<xs:element name="DanZoStaviebJedenUcelZaznam" type="DanZoStaviebJedenUcelZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebJedenUcelZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaStavby" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="PredmetDane" type="EnumerationValueType" />
			<xs:element name="ZakladDane" type="xs:nonNegativeInteger" />
			<xs:element name="PocetPodlazi" type="xs:nonNegativeInteger" />
			<xs:element name="CelkovaVymeraPodlahovychPloch" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebViacereUcelyType">
		<xs:sequence>
			<xs:element name="DanZoStaviebViacereUcelyZaznam" type="DanZoStaviebViacereUcelyZaznamType" minOccurs="1" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZoStaviebViacereUcelyZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaStavby" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="PopisStavby" type="xs:string" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="ZakladDane" type="xs:nonNegativeInteger" />
			<xs:element name="CelkovaVymeraPodlahovychPloch" type="xs:nonNegativeInteger" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochNaJednotliveUcely" type="VymeraPlochNaJednotliveUcelyType" />
			<xs:element name="PocetPodlazi" type="xs:nonNegativeInteger" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochNaJednotliveUcelyType">
		<xs:sequence>
			<xs:element name="VymeraPlochNaJednotlivyUcel" type="VymeraPlochNaJednotlivyUcelType" minOccurs="9" maxOccurs="9" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochNaJednotlivyUcelType">
		<xs:sequence>
			<xs:element name="Ucel" type="EnumerationValueType" />
			<xs:element name="Vymera" type="DesatinneCisloPresnostNaDveDesatinneMiesta" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZBytovANebytovychPriestorovType">
		<xs:sequence>
			<xs:element name="DanZBytovANebytovychPriestorovZaznam" type="DanZBytovANebytovychPriestorovZaznamType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DanZBytovANebytovychPriestorovZaznamType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:integer" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="AdresaBytu" type="AdresaType" />
			<xs:element name="NazovKatastralnehoUzemia" type="EnumerationValueType" minOccurs="0" />
			<xs:element name="CisloParcely" type="xs:string" />
			<xs:element name="CisloBytu" type="xs:string" />
			<xs:element name="PravnyVztah" type="EnumerationValueType" />
			<xs:element name="Spoluvlastnictvo" type="EnumerationValueType" minOccurs="0" maxOccurs="1" />
			<xs:element name="RodneCisloManzelaAleboManzelky" type="RodneCisloType" minOccurs="0" maxOccurs="1" />
			<xs:element name="PocetSpoluvlastnikov" type="xs:nonNegativeInteger" minOccurs="0" maxOccurs="1" />
			<xs:element name="SpoluvlastnikUrcenyDohodou" type="xs:boolean" minOccurs="0" maxOccurs="1" />
			<xs:element name="PopisBytu" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="NebytovePriestory" type="NebytovePriestoryType" minOccurs="0" maxOccurs="1" />
			<xs:element name="ZakladDane" type="ZakladDaneType" />
			<xs:element name="VymeraPodlahovejPlochyVyuzivanejNaIneUcely" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="VymeraPlochOslobodenychOdDane" type="VymeraPlochOslobodenychOdDaneType" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" maxOccurs="1" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ZakladDaneType">
		<xs:sequence>
			<xs:element name="Byt" type="xs:nonNegativeInteger" />
			<xs:element name="NebytovyPriestor" type="xs:nonNegativeInteger" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VymeraPlochOslobodenychOdDaneType">
		<xs:sequence>
			<xs:element name="Byt" type="xs:nonNegativeInteger" minOccurs="0" />
			<xs:element name="NebytovyPriestor" type="xs:nonNegativeInteger" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NebytovePriestoryType">
		<xs:sequence>
			<xs:element name="NebytovyPriestor" type="NebytovyPriestorType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NebytovyPriestorType">
		<xs:sequence>
			<xs:element name="PoradoveCislo" type="xs:nonNegativeInteger" />
			<xs:element name="CisloVBytovomDome" type="xs:string" />
			<xs:element name="UcelVyuzitiaVBytovomDome" type="xs:string" />
			<xs:element name="VymeraPodlahovychPloch" type="xs:nonNegativeInteger" />
			<xs:element name="DatumVznikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
			<xs:element name="DatumZanikuDanovejPovinnosti" type="xs:date" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SuhrnPrilohType">
		<xs:sequence>
			<xs:element name="PocetOddielovII" type="xs:integer" />
			<xs:element name="PocetOddielovIII" type="xs:integer" />
			<xs:element name="PocetOddielovIV" type="xs:integer" />
			<xs:element name="PocetOddielovV" type="xs:integer" />
			<xs:element name="PocetOddielovVI" type="xs:integer" />
			<xs:element name="PocetOddielovVII" type="xs:integer" />
			<xs:element name="PocetInych" type="xs:integer" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrilohaType">
		<xs:sequence>
			<xs:element name="Obec" type="xs:string" />
			<xs:element name="ICO" minOccurs="0" maxOccurs="1">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:pattern value="[0-9]{6,8}" />
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="RodneCislo" type="xs:string" minOccurs="0" maxOccurs="1" />
			<xs:element name="PozemkyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyF" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyG" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyH" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyI" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyJ" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyK" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PozemkyL" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="StavbyF" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="BytyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyA" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyB" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyC" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyD" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="PsyE" type="xs:boolean" default="false" minOccurs="0" />
			<xs:element name="Poznamka" type="xs:string" minOccurs="0" />
		</xs:sequence>
	</xs:complexType>
</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<xsl:stylesheet version="2.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:z="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"
    xmlns:fn="http://www.w3.org/2005/xpath-functions">

    <xsl:output method="text" encoding="utf-8" indent="no" />
    <xsl:preserve-space elements="*" />

    <xsl:template name="base_adresa">
        <xsl:param name="id_prefix" select="'Adresa '" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="showPoschodie" />
        <xsl:param name="typOsoby" />
        
        
        
        <xsl:if test="$id_prefix = 'FO'">
            <xsl:value-of select="concat($odsadenie, 'Adresa trvalého bydliska &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'FOP'">
            <xsl:value-of select="concat($odsadenie, 'Adresa miesta podnikania / sídlo &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'PO'">
            <xsl:value-of select="concat($odsadenie, 'Adresa sídla spoločnosti &#10;')" />
        </xsl:if>
        <xsl:if test="$id_prefix = 'MC'">
            <xsl:value-of select="concat($odsadenie, 'Adresa sídla &#10;')" />
        </xsl:if>
<!--         Ked neni dany typ osoby tak bude brat preddefinovanu hodnotu -->
        <xsl:if test="($id_prefix != 'FO') and ($id_prefix != 'PO') and ($id_prefix != 'FOP') and ($id_prefix != 'MC')">
            <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        </xsl:if>
        
            
        
        <xsl:for-each select="$values" >
            <xsl:if test="./*[local-name() = 'Meno']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'Priezvisko']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'ObchodneMenoNazov']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Obchodné meno / názov: ', ./*[local-name() = 'ObchodneMenoNazov'], '&#10;')"/>
            </xsl:if>
            
            <xsl:for-each select="./*[local-name() = 'UlicaACislo']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Ulica: ', ./*[local-name() = 'Ulica'], '&#10;')"/>
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Číslo: ', ./*[local-name() = 'SupisneCislo'], '/', ./*[local-name() = 'OrientacneCislo'], '&#10;')"/>
            </xsl:for-each>
            
            <xsl:if test="$showPoschodie = 'true'">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Poschodie a číslo bytu: ', ./*[local-name() = 'PoschodieACisloBytu'], '&#10;')"/>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'POBOX']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'P.O.Box: ', ./*[local-name() = 'POBOX'], '&#10;')"/>
            </xsl:if>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'PSČ: ', ./*[local-name() = 'PSC'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Obec: ', ./*[local-name() = 'Obec']/*[local-name() = 'Name'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Časť obce: ', ./*[local-name() = 'CastObce'], '&#10;')"/>
            
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Štát: ', ./*[local-name() = 'Stat']/*[local-name() = 'Name'], '&#10;')"/>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_adresat_podania">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="adresatPodaniaMestoText" select="'Mesto'" />
        <xsl:param name="adresatPodaniaMCInyText" select="''" />

        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        <xsl:value-of select="concat($odsadenie, '&#09;', $id_prefix, ': ')"/>

        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mesto'">
            <xsl:value-of select="concat($adresatPodaniaMestoText, '&#10;')" />
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mestská časť'">
            <xsl:text>Mestská časť&#10;</xsl:text>
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', $values/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')"/>
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mesto a iný subjekt'">
            <xsl:value-of select="concat($adresatPodaniaMestoText, '&#10;')" />
        </xsl:if>
        <xsl:if test="$values/*[local-name() = 'AdresatPodania'] = 'Mestská časť a iný subjekt'">
            <xsl:text>Mestská časť&#10;</xsl:text>
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', $values/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], $adresatPodaniaMCInyText, '&#10;')"/>
        </xsl:if>
    </xsl:template>

    <xsl:template name="base_array_to_string">
        <xsl:param name="id_prefix" />
        <xsl:param name="value" />
        <xsl:param name="arrayName" />
        <xsl:param name="odsadenie" />
        <xsl:value-of select="concat($odsadenie, $id_prefix, ': ')" />
        
        <xsl:variable name="arraylengthPred" select="count($value/*[local-name() = $arrayName])" />
        
        <xsl:for-each select="$value/*[local-name() = $arrayName]">
            <xsl:variable name="i" select="position()" />
            <xsl:value-of select="./*[local-name() = 'Name']" />
            <xsl:if test="$i &lt; $arraylengthPred">
                <xsl:text>, </xsl:text>
            </xsl:if>
        </xsl:for-each>
        <xsl:text>&#10;</xsl:text>
    </xsl:template>

    <xsl:template name="base_date_with_name">
        <xsl:param name="title" />
        <xsl:param name="value" />
        <xsl:param name="odsadenie" />

        <xsl:if test="$value != ''">
            <xsl:value-of select="concat($odsadenie, $title, ': ')"/>
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr" select="$value"/>
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
        </xsl:if>
    </xsl:template>

    <xsl:template name="base_dorucenie">
        <xsl:param name="id_prefix" select="'Doručenie'" />
        <xsl:param name="doruceniePodania" select="'Doručenie podania'" />
        <xsl:param name="dorucenieOdpovede" select="'Doručenie odpovede'" />
        <xsl:param name="formaOdoslania" select="'Forma odoslania podania'" />
        <xsl:param name="formaDorucenia" select="'Forma doručenia odpovede'" />
        <xsl:param name="adresaDorucenia" select="'Adresa doručenia odpovede'" />
        <xsl:param name="miestoOsobnehoVyzdvihnutia" select="'Miesto osobného vyzdvihnutia odpovede'" />
        <xsl:param name="adresatPodaniaMestoText" select="'Mesto'" />
        <xsl:param name="adresatPodaniaMCInyText" select="''" />
        <xsl:param name="osobneNaInySubjektText" />
        <xsl:param name="osobneVyzdvihnutieInySubjektText" />
        <xsl:param name="values" />
        <xsl:value-of select="concat($id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat('&#09;',$doruceniePodania, '&#10;')" />
            
            <xsl:call-template name="base_adresat_podania">
                <xsl:with-param name="id_prefix" select="'Adresát podania'" />
                <xsl:with-param name="values" select="./*[local-name() = 'AdresatPodania']" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
                <xsl:with-param name="adresatPodaniaMestoText" select="$adresatPodaniaMestoText" />
                <xsl:with-param name="adresatPodaniaMCInyText" select="$adresatPodaniaMCInyText" />
            </xsl:call-template>
            <xsl:value-of select="concat('&#09;&#09;', $formaOdoslania,': ' , ./*[local-name() = 'FormaOdoslaniaZiadosti'], '&#10;')" />
            
            <xsl:text>&#09;Notifikácia&#10;</xsl:text>
            
            <xsl:value-of select="concat('&#09;&#09;', 'Žiadam o zasielanie notifikácii zo spracovania podania: ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'Checkbox']/*[local-name() = 'Notifikacia'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            
            <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']">
                <xsl:value-of select="concat('&#09;',$dorucenieOdpovede, '&#10;')" />
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Pošta'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Pošta','&#10;')" />
                    <xsl:call-template name="base_adresa">
                        <xsl:with-param name="id_prefix" select="$adresaDorucenia" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresaDoruceniaRozhodnutia']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Elektronická schránka'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Elektronická schránka (eDesk)','&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Osobne na iný subjekt'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': ', $osobneNaInySubjektText,'&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;&#09;', $miestoOsobnehoVyzdvihnutia, ': ', $osobneVyzdvihnutieInySubjektText, '&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Osobne'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Osobne','&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;&#09;', $miestoOsobnehoVyzdvihnutia, ': ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresatPodania'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'AdresatPodania'] = 'Mestská časť'">
                        <xsl:value-of select="concat('&#09;&#09;&#09;', 'Mestská časť: ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')" />
                    </xsl:if>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Fax'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Fax','&#10;')" />
                    <xsl:call-template name="base_telefon">
                        <xsl:with-param name="id_prefix" select="'Fax: '" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'FaxPreDorucenie']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Telefonicky'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Telefonicky','&#10;')" />
                    <xsl:call-template name="base_telefon">
                        <xsl:with-param name="id_prefix" select="'Telefónne číslo / mobil: '" />
                        <xsl:with-param name="values" select="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TelefonPreDorucenie']" />
                        <xsl:with-param name="odsadenie" select="'&#09;&#09;'"/>
                    </xsl:call-template>
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'E-mail'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': E-mail','&#10;')" />
                    <xsl:value-of select="concat('&#09;&#09;', 'E-mail: ', ./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'EmailPreDorucenie'],'&#10;')" />
                </xsl:if>
                <xsl:if test="./*[local-name() = 'FormaDoruceniaRozhodnutia']/*[local-name() = 'TypSposobuDorucenia'] = 'Bez odpovede'">
                    <xsl:value-of select="concat('&#09;&#09;',$formaDorucenia, ': Bez odpovede','&#10;')" />
                </xsl:if>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_kontaktne_udaje">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        
        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat($odsadenie,'&#09;', 'E-mail: ', ./*[local-name() = 'Email'], '&#10;')"/>
            
            <xsl:if test="$values/*[local-name() = 'TelefonneCisloCele']">
                <xsl:value-of select="concat($odsadenie,'&#09;', 'Telefónne číslo: ', ./*[local-name() = 'TelefonneCisloCele'], '&#10;')"/>                
            </xsl:if>
            <xsl:if test="$values/*[local-name() = 'TelefonneCislo']">
                <xsl:for-each select="./*[local-name() = 'TelefonneCislo']">
                    <xsl:value-of select="concat($odsadenie,'&#09;', 'Telefónne číslo: ', ./*[local-name() = 'MedzinarodneVolacieCislo'], ' ', ./*[local-name() = 'Predvolba'], ' ', ./*[local-name() = 'Cislo'], '&#10;')"/>
                </xsl:for-each>
            </xsl:if>
            
            <xsl:if test="./*[local-name() = 'KontaktnaOsoba']">
                <xsl:value-of select="concat($odsadenie, '&#09;', 'Kontaktná osoba', '&#10;')" />
                <xsl:for-each select="./*[local-name() = 'KontaktnaOsoba']">
                    <xsl:value-of select="concat($odsadenie, '&#09;&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')"/>
                    <xsl:value-of select="concat($odsadenie, '&#09;&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')"/>
                </xsl:for-each>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="base_telefon">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />

        <xsl:value-of select="concat($odsadenie, $id_prefix)" />
        <xsl:value-of select="concat($values/*[local-name() = 'MedzinarodneVolacieCislo'], ' ')" />
        <xsl:value-of select="concat($values/*[local-name() = 'Predvolba'], ' ')" />
        <xsl:value-of select="concat($values/*[local-name() = 'Cislo'], '&#10;')" />
    </xsl:template>

    <xsl:template name="base_ziadatel">
        <xsl:param name="id_prefix" />
        <xsl:param name="values" />
        <xsl:param name="odsadenie" />
        <xsl:param name="menoZastupcuText" select="'Meno zástupcu'" />
        <xsl:param name="priezviskoZastupcuText" select="'Priezvisko zástupcu'" />
        
        <xsl:value-of select="concat($odsadenie, $id_prefix, '&#10;')" />
        
        <xsl:for-each select="$values">
            <xsl:value-of select="concat($odsadenie, '&#09;', 'Typ osoby: ', ./*[local-name() = 'TypOsoby']/*[local-name() = 'Name'], '&#10;')" />
            <xsl:for-each select="./*[local-name() = 'IdentifikaciaOsoby']">
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FO') or (../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FOP')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno: ', ./*[local-name() = 'Meno'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko: ', ./*[local-name() = 'Priezvisko'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Rodné priezvisko: ', ./*[local-name() = 'RodnePriezvisko'], '&#10;')" />
                    <xsl:call-template name="base_array_to_string">
                        <xsl:with-param name="id_prefix" select="'Titul pred menom'" />
                        <xsl:with-param name="value" select="./*[local-name() = 'TitulyPredMenom']" />
                        <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        <xsl:with-param name="arrayName" select="'TitulPredMenom'" />
                    </xsl:call-template>
                    <xsl:call-template name="base_array_to_string">
                        <xsl:with-param name="id_prefix" select="'Titul za menom'" />
                        <xsl:with-param name="value" select="./*[local-name() = 'TitulyZaMenom']" />
                        <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        <xsl:with-param name="arrayName" select="'TitulZaMenom'" />
                    </xsl:call-template>
                    <xsl:if test="./*[local-name() = 'RodneCislo']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Rodné číslo: ', ./*[local-name() = 'RodneCislo'], '&#10;')"/>
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'DatumNarodenia']">
                        <xsl:call-template name="base_date_with_name">
                            <xsl:with-param name="title" select="'Dátum narodenia'" />
                            <xsl:with-param name="value" select="./*[local-name() = 'DatumNarodenia']" />
                            <xsl:with-param name="odsadenie" select="concat($odsadenie, '&#09;')" />
                        </xsl:call-template>
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'CisloObcianskehoPreukazu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Číslo občianského preukazu: ', ./*[local-name() = 'CisloObcianskehoPreukazu'], '&#10;')"/>
                    </xsl:if>
                </xsl:if>
                
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'PO') or (../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FOP')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Obchodné meno / názov: ', ./*[local-name() = 'ObchodneMenoNazov'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Právna forma: ', ./*[local-name() = 'PravnaForma']/*[local-name() = 'Name'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'MenoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', $menoZastupcuText, ': ', ./*[local-name() = 'MenoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'PriezviskoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', $priezviskoZastupcuText, ': ', ./*[local-name() = 'PriezviskoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'IČO: ', ./*[local-name() = 'ICO'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                </xsl:if>
                
                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'FO')">                
                    <xsl:if test="./*[local-name() = 'DIC']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                    </xsl:if>
                </xsl:if>

                <xsl:if test="(../*[local-name() = 'TypOsoby']/*[local-name() = 'Code'] = 'MC')">
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'Mestská časť: ', ./*[local-name() = 'MestskaCast']/*[local-name() = 'Name'], '&#10;')" />
                    <xsl:if test="./*[local-name() = 'MenoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Meno zástupcu: ', ./*[local-name() = 'MenoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:if test="./*[local-name() = 'PriezviskoZastupcu']">
                        <xsl:value-of select="concat($odsadenie, '&#09;', 'Priezvisko zástupcu: ', ./*[local-name() = 'PriezviskoZastupcu'], '&#10;')" />
                    </xsl:if>
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'IČO: ', ./*[local-name() = 'ICO'], '&#10;')" />
                    <xsl:value-of select="concat($odsadenie, '&#09;', 'DIČ: ', ./*[local-name() = 'DIC'], '&#10;')" />
                </xsl:if>
            </xsl:for-each>
        </xsl:for-each>
    </xsl:template>

    <xsl:template name="format_date">
        <xsl:param name="instr"/>
        <!-- YYYY-MM-DD -->
        <xsl:variable name="yyyy">
            <xsl:value-of select="substring($instr,1,4)"/>
        </xsl:variable>
        <xsl:variable name="mm">
            <xsl:value-of select="substring($instr,6,2)"/>
        </xsl:variable>
        <xsl:variable name="dd">
            <xsl:value-of select="substring($instr,9,2)"/>
        </xsl:variable>

        <xsl:value-of select="concat($dd,'.',$mm,'.',$yyyy)"/>
    </xsl:template>

    <xsl:template name="zakladne_vyhlasenie">
        <xsl:param name="value" />

        <xsl:text>Vyhlásenie&#10;</xsl:text>
        <xsl:for-each select="$value" >
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'SpravnostUdajovText'], '&#10;')" />
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'SuhlasSoSpracovanimText'], '&#10;')" />
            <xsl:text>&#10;</xsl:text>
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'PoskytujemSuhlasText'], ': ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'PoskytujemSuhlas'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="concat('&#09;', ./*[local-name() = 'NeposkytujemSuhlasText'], ': ')" />
            <xsl:choose>
                <xsl:when test="./*[local-name() = 'NeposkytujemSuhlas'] = 'true'">
                    <xsl:text>Áno&#10;</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                    <xsl:text>Nie&#10;</xsl:text>
                </xsl:otherwise>
            </xsl:choose>
        </xsl:for-each>
    </xsl:template>


    <xsl:template match="/z:E-form">
        <xsl:value-of select="concat(z:Meta/z:Name, '&#10;')" />

        <xsl:text>Priznanie&#10;</xsl:text>
        <xsl:value-of
            select="concat('&#09;', 'Druh priznania: ', z:Body/z:DruhPriznania/z:Name, '&#10;')" />
        <xsl:value-of select="concat('&#09;', 'Na rok: ', z:Body/z:NaRok, '&#10;')" />

        <xsl:call-template name="base_ziadatel">
            <xsl:with-param name="id_prefix" select="'Identifikačné údaje daňovníka'" />
            <xsl:with-param name="values" select="z:Body/z:Danovnik" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:call-template name="base_adresa">
            <xsl:with-param name="id_prefix" select="z:Body/z:Danovnik/z:TypOsoby/z:Code"/>
            <xsl:with-param name="values" select="z:Body/z:AdresaDanovnika" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:call-template name="base_kontaktne_udaje">
            <xsl:with-param name="id_prefix" select="'Kontaktné údaje'" />
            <xsl:with-param name="values"
                select="z:Body/z:KontaktneUdajeDanovnika" />
            <xsl:with-param name="odsadenie" select="''" />
        </xsl:call-template>

        <xsl:text>Oprávnená osoba&#10;</xsl:text>
        <xsl:text>&#09;Identifikačné údaje oprávnenej osoby&#10;</xsl:text>
        <xsl:value-of
            select="concat('&#09;&#09;', 'Právny vzťah: ', z:Body/z:OpravnenaOsoba/z:PravnyVztah/z:Name, '&#10;')" />
        <xsl:value-of
            select="concat('&#09;&#09;', 'Meno: ', z:Body/z:OpravnenaOsoba/z:Meno, '&#10;')" />
        <xsl:value-of
            select="concat('&#09;&#09;', 'Priezvisko: ', z:Body/z:OpravnenaOsoba/z:Priezvisko, '&#10;')" />
        <xsl:call-template name="base_array_to_string">
            <xsl:with-param name="id_prefix" select="'Titul pred menom'" />
            <xsl:with-param name="value" select="z:Body/z:OpravnenaOsoba/*[local-name() = 'TitulyPredMenom']" />
            <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            <xsl:with-param name="arrayName" select="'TitulPredMenom'" />
        </xsl:call-template>
        <xsl:call-template name="base_array_to_string">
            <xsl:with-param name="id_prefix" select="'Titul za menom'" />
            <xsl:with-param name="value" select="z:Body/z:OpravnenaOsoba/*[local-name() = 'TitulyZaMenom']" />
            <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            <xsl:with-param name="arrayName" select="'TitulZaMenom'" />
        </xsl:call-template>
        <xsl:value-of
            select="concat('&#09;&#09;', 'Obchodné meno / názov: ', z:Body/z:OpravnenaOsoba/z:ObchodneMenoNazov, '&#10;')" />
        <xsl:call-template name="base_adresa">
            <xsl:with-param name="id_prefix"
                select="'Adresa trvalého bydliska / Adresa sídla spoločnosti'" />
            <xsl:with-param name="values"
                select="z:Body/z:OpravnenaOsoba/z:AdresaOpravnenejOsoby" />
            <xsl:with-param name="odsadenie" select="'&#09;'" />
        </xsl:call-template>
        <xsl:call-template name="base_kontaktne_udaje">
            <xsl:with-param name="id_prefix" select="'Kontaktné údaje'" />
            <xsl:with-param name="values"
                select="z:Body/z:OpravnenaOsoba/z:KontaktneUdajeOpravnenejOsoby" />
            <xsl:with-param name="odsadenie" select="'&#09;'" />
        </xsl:call-template>

        <xsl:if test="z:Body/*[local-name() = 'DanZPozemkov']">
            <xsl:text>II. Oddiel - Daň z pozemkov&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZPozemkov/z:DanZPozemkovZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
                        
            <xsl:value-of
                select="concat('&#09;&#09;', 'Obec, kde sa pozemok nachádza: ', z:Obec, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:HodnotaPozemkuUrcenaZnalcom = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Hodnota pozemku určená znaleckým posudkom: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Hodnota pozemku určená znaleckým posudkom: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;Pozemky&#10;</xsl:text>
            <xsl:for-each
                select="z:Pozemky/*[local-name() = 'Pozemok']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', 'Poradové číslo záznamu ', ./z:PoradoveCislo, ':', '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Názov katastrálneho územia: ', ./z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Číslo parcely: ', ./z:CisloParcely, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Výmera pozemku: ', ./z:Vymera, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Druh pozemku: ', ./z:DruhPozemku/z:Name, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Využitie pozemku: ', ./z:VyuzitiePozemku, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumVznikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumZanikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
            </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZoStaviebJedenUcel']">
            <xsl:text>III. Oddiel - Daň zo stavieb - stavba slúžiaca na jeden účel&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZoStaviebJedenUcel/z:DanZoStaviebJedenUcelZaznam">
            
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa stavby'" />
                <xsl:with-param name="values"
                    select="z:AdresaStavby" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Predmet dane: ', z:PredmetDane/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Základ dane (výmera zastavanej plochy stavby, u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:ZakladDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet nadzemných a podzemných podlaží okrem prvého nadzemného podlažia: ', z:PocetPodlazi, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Celková výmera podlahových plôch všetkých podlaží stavby (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:CelkovaVymeraPodlahovychPloch, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahových plôch časti stavby, ktorá je oslobodená od dane zo stavieb (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:VymeraPlochOslobodenychOdDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
            </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZoStaviebViacereUcely']">
            <xsl:text>III. Oddiel - Daň zo stavieb - stavba slúžiaca na viaceré účely&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZoStaviebViacereUcely/z:DanZoStaviebViacereUcelyZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa stavby'" />
                <xsl:with-param name="values"
                    select="z:AdresaStavby" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Popis stavby: ', z:PopisStavby, '&#10;')" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Základ dane (výmera zastavanej plochy stavby, u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:ZakladDane, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Celková výmera podlahových plôch všetkých podlaží stavby (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:CelkovaVymeraPodlahovychPloch, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahových plôch časti stavby, ktorá je oslobodená od dane zo stavieb (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu): ', z:VymeraPlochOslobodenychOdDane, '&#10;')" />
            <xsl:text>&#09;&#09;Výmera podlahových plôch časti stavby využívanej na jednotlivý účel (u spoluvlastníkov vo výške ich spoluvlastníckeho podielu)&#10;</xsl:text>
            <xsl:for-each
                select="z:VymeraPlochNaJednotliveUcely/*[local-name() = 'VymeraPlochNaJednotlivyUcel']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', ./z:Ucel/z:Name, ': ', ./z:Vymera, '&#10;')" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet nadzemných a podzemných podlaží okrem prvého nadzemného podlažia: ', z:PocetPodlazi, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
        </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'DanZBytovANebytovychPriestorov']">
            <xsl:text>IV. Oddiel - Daň z bytov a z nebytových priestorov v bytovom dome&#10;</xsl:text>
            <xsl:for-each select="z:Body/z:DanZBytovANebytovychPriestorov/z:DanZBytovANebytovychPriestorovZaznam">
            <xsl:value-of select="concat('&#09;', 'Záznam číslo ', position(), '&#10;')" />
            <xsl:call-template name="base_adresa">
                <xsl:with-param name="id_prefix" select="'Adresa bytu'" />
                <xsl:with-param name="values"
                    select="z:AdresaBytu" />
                <xsl:with-param name="odsadenie" select="'&#09;&#09;'" />
            </xsl:call-template>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Názov katastrálneho územia: ', z:NazovKatastralnehoUzemia/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo parcely: ', z:CisloParcely, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Číslo bytu: ', z:CisloBytu, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Právny vzťah: ', z:PravnyVztah/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Spoluvlastníctvo: ', z:Spoluvlastnictvo/z:Name, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Počet spoluvlastníkov: ', z:PocetSpoluvlastnikov, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Rodné číslo manžela/manželky: ', z:RodneCisloManzelaAleboManzelky, '&#10;')" />
            <xsl:choose>
                <xsl:when
                    test="z:SpoluvlastnikUrcenyDohodou = 'true'">
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Áno', '&#10;')" />
                </xsl:when>
                <xsl:otherwise>
                    <xsl:value-of
                        select="concat('&#09;&#09;', 'Spoluvlastník určený dohodou: ', 'Nie', '&#10;')" />
                </xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Popis bytu: ', z:PopisBytu, '&#10;')" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumVznikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:value-of select="concat('&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
            <xsl:call-template name="format_date">
                <xsl:with-param name="instr"
                    select="z:DatumZanikuDanovejPovinnosti" />
            </xsl:call-template>
            <xsl:value-of select="'&#10;'" />
            <xsl:text>&#09;&#09;Základ dane (výmera podlahovej plochy u spoluvlastníkov vo výške ich spoluvlastníckeho podielu)&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'a) Bytu: ', z:ZakladDane/z:Byt, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'b) Nebytového priestoru v bytovom dome: ', z:ZakladDane/z:NebytovyPriestor, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;', 'Výmera podlahovej plochy bytu alebo časti bytu v bytovom dome, ktorý sa využíva na iný účel ako na bývanie: ', z:VymeraPodlahovejPlochyVyuzivanejNaIneUcely, '&#10;')" />
            <xsl:text>&#09;&#09;Byt alebo nebytový priestor v bytovom dome alebo ich časti oslobodené od dane z bytov&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'a) Výmera podlahovej plochy bytu alebo jeho časti: ', z:VymeraPlochOslobodenychOdDane/z:Byt, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;&#09;&#09;', 'b) Výmera podlahovej plochy nebytového priestoru v bytovom dome alebo jeho časti: ', z:VymeraPlochOslobodenychOdDane/z:NebytovyPriestor, '&#10;')" />
            <xsl:text>&#09;&#09;Nebytové priestory&#10;</xsl:text>
            <xsl:for-each
                select="z:NebytovePriestory/*[local-name() = 'NebytovyPriestor']">
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;', 'Nebytový priestor č.', ./z:PoradoveCislo, ':', '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Číslo nebytového priestoru v bytovom dome: ', ./z:CisloVBytovomDome, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Účel využitia nebytového priestoru v bytovom dome: ', ./z:UcelVyuzitiaVBytovomDome, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Výmera podlahových plôch nebytového priestoru v bytovom dome: ', ./z:VymeraPodlahovychPloch, '&#10;')" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum vzniku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumVznikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
                <xsl:value-of
                    select="concat('&#09;&#09;&#09;&#09;', 'Dátum zániku daňovej povinosti: ')" />
                <xsl:call-template name="format_date">
                    <xsl:with-param name="instr"
                        select="./z:DatumZanikuDanovejPovinnosti" />
                </xsl:call-template>
                <xsl:value-of select="'&#10;'" />
            </xsl:for-each>
            <xsl:value-of
                select="concat('&#09;&#09;', 'Poznámka: ', z:Poznamka, '&#10;')" />
        </xsl:for-each>
        </xsl:if>

        <xsl:if test="z:Body/*[local-name() = 'Priloha']">
            <xsl:text>Príloha – Zníženie alebo oslobodenie od dane&#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;', 'Obec: ', z:Body/z:Priloha/z:Obec, '&#10;')" />
            <xsl:text>&#09;K oddielu II. Pozemky&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) Pozemky vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) Pozemky, na ktorých sú cintoríny, kolumbáriá, urnové háje a rozptylové lúky: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) Močiare, plochy slatín a slancov, rašeliniská, remízky, háje vetrolamy a pásma hygienickej ochrany vodných zdrojov I. a II. stupňa, pásma ochrany prírodných liečivých zdrojov I. a II. stupňa a zdrojov prírodných minerálnych vôd stolových I. a II. stupňa: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) Časti pozemkov, na ktorých sú zriadené meračské značky, signály a iné zariadenia bodov, geodetických základov, stožiare rozvodu elektrickej energie, stĺpy telekomunikačného vedenia a televízne prevádzače, nadzemné časti zariadení na rozvod vykurovacích plynov a pásy pozemkov v lesoch vyčlenené na rozvod elektrickej energie a vykurovacích plynov: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) Pozemky verejne prístupných parkov, priestorov a športovísk: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;f) Pozemky v národných parkoch, chránených krajinných oblastiach, chránených areáloch, prírodných rezerváciách, národných prírodných rezerváciách, prírodných pamiatkach, národných prírodných pamiatkach, chránených krajinných prvkoch, vo vyhlásených ochranných pásmach s III. a IV. stupňom ochrany a územiach medzinárodného významu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyF = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;g) Pozemky funkčne spojené so stavbami slúžiacimi verejnej doprave: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyG = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;h) Pozemky užívané školami a školskými zariadeniami: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyH = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;i) Lesné pozemky od nasledujúceho roka po vzniku holiny do roku plánovaného začatia výchovnej ťažby (prvej prebierky): </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyI = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;j) Pozemky, ktorých hospodárske využívanie je obmedzené vzhľadom na podkopanie, ich umiestnenie v oblasti dobývacích priestorov alebo pásiem hygienickej ochrany vody II. a III. stupňa, ochranu a tvorbu životného prostredia, ich postihnutie ekologickým katastrofami, nadmerným imisným zaťažením, na pozemky rekultivované investičným zúrodňovaním okrem rekultivácii plne financovaných zo štátneho rozpočtu, na rokliny, výmole, vymedzené s kroviskami alebo kamením, pásma ochrany prírodných liečivých zdrojov II. a III. stupňa a zdrojov prírodných minerálnych vôd stolových II. a III. stupňa, na genofondové plochy, brehové porasty a iné plochy stromovej a krovinatej vegetácie na nelesných pozemkoch s pôdoochranou, ekologickou alebo krajinotvornou funkciou: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyJ = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;k) Pozemky, ktorých vlastníkmi sú fyzické osoby v hmotnej núdzi alebo fyzické osoby staršie ako 62 rokov, ak tieto pozemky slúžia výhradne na ich osobnú potrebu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyK = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;l) pozemky okrem pozemkov v zastavanej časti obce, na ktorých vykonávajú samostatne hospodáriaci roľníci poľnohospodársku výrobu ako svoju hlavnú činnosť: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:PozemkyL = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
    
            <xsl:text>&#09;K oddielu III. - Stavby&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) stavby vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) stavby slúžiace školám, školským zariadeniam a zdravotníckym zariadeniam, zariadeniam na pracovnú rehabilitáciu a rekvalifikáciu občanov so zmenenou pracovnou schopnosťou, stavby užívané na účely sociálnej pomoci a múzeá, galérie, knižnice, divadlá, kiná, amfiteátre, výstavné siene, osvetové zariadenia: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) stavby, ktorých využitie je obmedzené z dôvodu rozsiahlej rekonštrukcie, stavebnej uzávery alebo umiestnenia na podkopanom pozemku: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) stavby na bývanie vo vlastníctve fyzických osôb v hmotnej núdzi, fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ako aj prevažne alebo úplne bezvládnych fyzických osôb, ktoré slúžia na ich trvalé bývanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) garáže vo vlastníctve fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ktoré slúžia pre motorové vozidlo používané na ich dopravu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;f) stavby na pôdohospodársku produkciu, skleníky, stavby využívané na skladovanie vlastnej pôdohospodárskej produkcie, stavby pre vodné hospodárstvo okrem stavieb na skladovanie inej ako vlastnej pôdohospodárskej produkcie a stavieb na administratívu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:StavbyF = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
    
            <xsl:text>&#09;K oddielu IV. - Byty&#10;</xsl:text>
            <xsl:text>&#09;&#09;a) byty vo vlastníctve právnických osôb, ktoré nie sú založené alebo zriadené na podnikanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyA = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;b) byty slúžiace školám, školským zariadeniam a zdravotníckym zariadeniam, zariadeniam na pracovnú rehabilitáciu a rekvalifikáciu občanov so zmenenou pracovnou schopnosťou: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyB = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;c) byty, ktorých využitie je obmedzené z dôvodu rozsiahlej rekonštrukcie, stavebnej uzávery alebo umiestnenia na podkopanom pozemku: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyC = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;d) byty vo vlastníctve fyzických osôb v hmotnej núdzi, fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ako aj prevažne alebo úplne bezvládnych fyzických osôb, ktoré slúžia na ich trvalé bývanie: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyD = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:text>&#09;&#09;e) nebytové priestory v bytových domoch slúžiace ako garáž vo vlastníctve fyzických osôb starších ako 62 rokov, držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím alebo držiteľov preukazu fyzickej osoby s ťažkým zdravotným postihnutím so sprievodcom, ktoré slúžia pre motorové vozidlo používané na ich dopravu: </xsl:text>
            <xsl:choose>
                <xsl:when test="z:Body/z:Priloha/z:BytyE = 'true'">Áno&#10;</xsl:when>
                <xsl:otherwise>Nie&#10;</xsl:otherwise>
            </xsl:choose>
            <xsl:value-of
                select="concat('&#09;', 'Poznámka: ', z:Body/z:Priloha/z:Poznamka, '&#10;')" />
        </xsl:if>
        
            <xsl:text>Súhrn príloh &#10;</xsl:text>
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh II. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh III. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovIII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh IV. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovIV, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh V. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovV, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh VI. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovVI, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet príloh VII. oddielu: ', z:Body/z:SuhrnPriloh/z:PocetOddielovVII, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Počet iných príloh: ', z:Body/z:SuhrnPriloh/z:PocetInych, '&#10;')" />
            <xsl:value-of
                select="concat('&#09;', 'Poznámka: ', z:Body/z:SuhrnPriloh/z:Poznamka, '&#10;')" />
        
        <xsl:call-template name="base_dorucenie">
            <xsl:with-param name="values" select="z:Body/z:Dorucenie" />
        </xsl:call-template>
        
        <xsl:call-template name="zakladne_vyhlasenie">
            <xsl:with-param name="value" select="z:Body/z:ZakladneVyhlasenie" />
        </xsl:call-template>

    </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><E-form xmlns="http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2"><Meta><ID>esmao.eforms.bratislava.obec_024</ID><Name>Ohlásenie o vzniku, zániku alebo zmene daňovej povinnosti k dani z nehnuteľností</Name><Gestor>ESMaO</Gestor><RecipientId>ico://sk/00603481</RecipientId><Version>201501.2</Version><ZepRequired>false</ZepRequired></Meta><Body><DruhPriznania><Code>3</Code><Name>Opravné priznanie</Name><WsEnumCode>ICL0020</WsEnumCode></DruhPriznania><NaRok>2024</NaRok><Danovnik><TypOsoby><Code>FO</Code><Name>fyzická osoba</Name><WsEnumCode>ICL0096</WsEnumCode></TypOsoby><IdentifikaciaOsoby><TitulyPredMenom><TitulPredMenom><Code>16</Code><Name>Mgr.</Name><WsEnumCode>0062</WsEnumCode></TitulPredMenom></TitulyPredMenom><Meno>Lincoln</Meno><Priezvisko>Abraham</Priezvisko><DatumNarodenia>1992-03-14+01:00</DatumNarodenia><RodneCislo>9203146326</RodneCislo></IdentifikaciaOsoby></Danovnik><AdresaDanovnika><Meno>Lincoln</Meno><Priezvisko>Abraham</Priezvisko><UlicaACislo><Ulica>Robotnícka</Ulica><OrientacneCislo>6</OrientacneCislo></UlicaACislo><PSC>83103</PSC><Obec><Name>Bratislava</Name></Obec><Stat><Code>686</Code><Name>Senegalská republika</Name><WsEnumCode>0086</WsEnumCode></Stat></AdresaDanovnika><KontaktneUdajeDanovnika><TelefonneCislo><MedzinarodneVolacieCislo>+421</MedzinarodneVolacieCislo><Predvolba>948</Predvolba><Cislo>417711</Cislo></TelefonneCislo><Email>test@test.com</Email></KontaktneUdajeDanovnika><DanZPozemkov><DanZPozemkovZaznam><PoradoveCislo>1</PoradoveCislo><RodneCislo>9203146326</RodneCislo><Obec>Bratislava</Obec><DruhyZmien><DruhZmeny><Code>A</Code><Name>Orná pôda, vinice, chmelnice, ovocné sady</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>B</Code><Name>Trvalé trávnaté porasty</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>C</Code><Name>Záhrady</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>D</Code><Name>Lesné pozemky, na ktorých sú hospodárske lesy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>E</Code><Name>Rybníky s chovom rýb a ostatné hospodárske vzužívané vodné plochy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>F</Code><Name>Zastavné plochy a nádvoria</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>G</Code><Name>Stavebné pozemky</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny><DruhZmeny><Code>H</Code><Name>Ostatné plochy</Name><WsEnumCode>ICL0098</WsEnumCode></DruhZmeny></DruhyZmien><HodnotaPozemkuUrcenaZnalcom>false</HodnotaPozemkuUrcenaZnalcom><PravnyVztah><Code>0</Code><Name>Vlastník</Name><WsEnumCode>ICL0038</WsEnumCode></PravnyVztah><Pozemky><Pozemok><PoradoveCislo>1</PoradoveCislo><NazovKatastralnehoUzemia><Code>810649</Code><Name>Devínska Nová Ves</Name><WsEnumCode>ICL0079</WsEnumCode></NazovKatastralnehoUzemia><CisloParcely>7986/1</CisloParcely><Vymera>18.51</Vymera><DruhPozemku><Code>B</Code><Name>Trvalé trávnaté porasty</Name><WsEnumCode>ICL0098</WsEnumCode></DruhPozemku><DatumVznikuDanovejPovinnosti>2024-01-13+01:00</DatumVznikuDanovejPovinnosti><DatumZanikuDanovejPovinnosti>2024-01-04+01:00</DatumZanikuDanovejPovinnosti></Pozemok></Pozemky></DanZPozemkovZaznam></DanZPozemkov><DanZoStaviebJedenUcel><DanZoStaviebJedenUcelZaznam><PoradoveCislo>1</PoradoveCislo><RodneCislo>9203146326</RodneCislo><AdresaStavby><UlicaACislo><Ulica>Príkladná</Ulica><SupisneCislo>2526</SupisneCislo><OrientacneCislo>35</OrientacneCislo></UlicaACislo><Obec><Code>SK0105529443</Code><Name>Bratislava - mestská časť Jarovce</Name><WsEnumCode>0025</WsEnumCode></Obec><Stat><Code>703</Code><Name>Slovenská republika</Name><WsEnumCode>0086</WsEnumCode></Stat></AdresaStavby><NazovKatastralnehoUzemia><Code>822256</Code><Name>Jarovce</Name><WsEnumCode>ICL0079</WsEnumCode></NazovKatastralnehoUzemia><CisloParcely>7859/1</CisloParcely><PravnyVztah><Code>0</Code><Name>Vlastník</Name><WsEnumCode>ICL0038</WsEnumCode></PravnyVztah><Spoluvlastnictvo><Code>0</Code><Name>Podielové</Name><WsEnumCode>ICL0042</WsEnumCode></Spoluvlastnictvo><PocetSpoluvlastnikov>2</PocetSpoluvlastnikov><SpoluvlastnikUrcenyDohodou>true</SpoluvlastnikUrcenyDohodou><DatumVznikuDanovejPovinnosti>2024-01-04+01:00</DatumVznikuDanovejPovinnosti><DatumZanikuDanovejPovinnosti>2024-01-06+01:00</DatumZanikuDanovejPovinnosti><PredmetDane><Code>0</Code><Name>Stavby na bývanie a drobné stavby, ktoré majú doplnkovú funkciu pre hlavnú stavbu</Name><WsEnumCode>ICL0041</WsEnumCode></PredmetDane><ZakladDane>1330</ZakladDane><PocetPodlazi>5</PocetPodlazi><CelkovaVymeraPodlahovychPloch>26</CelkovaVymeraPodlahovychPloch><Poznamka>Číslo LV: 4597</Poznamka></DanZoStaviebJedenUcelZaznam></DanZoStaviebJedenUcel><DanZoStaviebViacereUcely><DanZoStaviebViacereUcelyZaznam><PoradoveCislo>1</PoradoveCislo><RodneCislo>9203146326</RodneCislo><AdresaStavby><UlicaACislo><Ulica>Príkladná</Ulica><SupisneCislo>35</SupisneCislo><OrientacneCislo>35</OrientacneCislo></UlicaACislo><Obec><Code>SK0104529401</Code><Name>Bratislava - mestská časť Devín</Name><WsEnumCode>0025</WsEnumCode></Obec><Stat><Code>703</Code><Name>Slovenská republika</Name><WsEnumCode>0086</WsEnumCode></Stat></AdresaStavby><NazovKatastralnehoUzemia><Code>805301</Code><Name>Devín</Name><WsEnumCode>ICL0079</WsEnumCode></NazovKatastralnehoUzemia><CisloParcely>5697/1</CisloParcely><PravnyVztah><Code>2</Code><Name>Nájomca</Name><WsEnumCode>ICL0038</WsEnumCode></PravnyVztah><Spoluvlastnictvo><Code>1</Code><Name>Bezpodielové</Name><WsEnumCode>ICL0042</WsEnumCode></Spoluvlastnictvo><PopisStavby>Príkladná stavba</PopisStavby><DatumVznikuDanovejPovinnosti>2024-01-05+01:00</DatumVznikuDanovejPovinnosti><DatumZanikuDanovejPovinnosti>2024-01-04+01:00</DatumZanikuDanovejPovinnosti><ZakladDane>4435</ZakladDane><CelkovaVymeraPodlahovychPloch>46</CelkovaVymeraPodlahovychPloch><VymeraPlochOslobodenychOdDane>26</VymeraPlochOslobodenychOdDane><VymeraPlochNaJednotliveUcely><VymeraPlochNaJednotlivyUcel><Ucel><Code>0</Code><Name>Stavby na bývanie a drobné stavby, ktoré majú doplnkovú funkciu pre hlavnú stavbu</Name><WsEnumCode>ICL0041</WsEnumCode></Ucel><Vymera>0.00</Vymera></VymeraPlochNaJednotlivyUcel><VymeraPlochNaJednotlivyUcel><Ucel><Code>1</Code><Name>Stavby na pôdohospodársku produkciu, skleníky, stavby pre vodné hospodárstvo, stavby využívané na skladovanie vlastnej pôdohospodárskej produkcie vrátane stavieb na vlastnú administratívu</Name><WsEnumCode>ICL0041</WsEnumCode></Ucel><Vymera>45.98</Vymera></VymeraPlochNaJednotlivyUcel><VymeraPlochNaJednotlivyUcel><Ucel><Code>2</Code><Name>Chaty a stavby na individuálnu rekreáciu</Name><WsEnumCode>ICL0041</WsEnumCode></Ucel><Vymera>0.00</Vymera></VymeraPlochNaJednotlivyUcel><VymeraPlochNaJednotlivyUcel><Ucel><Code>3</Code><Name>Samostatne stojace garáže</Name><WsEnumCode>ICL0041</WsEnumCode></Ucel><Vymera>0.00</Vymera></VymeraPlochNaJednotlivyUcel><VymeraPlochNaJednotlivyUcel><Ucel><Code>4</Code><Name>Stavby hromadných garáží</Name><WsEnumCode>ICL0041</WsEnumCode></Ucel><Vymera>0.00</Vymera></VymeraPlochNaJednotlivyUcel><VymeraPlochNaJednotlivyUcel><Ucel><Code>5</Code><Name>Stavby hromadných garáží umiestnené pod zemou</Name><WsEnumCode>ICL0041</WsEnumCode></Ucel><Vymera>0.00</Vymera></VymeraPlochNaJednotlivyUcel><VymeraPlochNaJednotlivyUcel><Ucel><Code>6</Code><Name>Priemyselné stavby, stavby slúžiace energetike, stavby slúžiace stavebníctvu, stavby využívané na skladovanie vlastnej produkcie vrátane stavieb na vlastnú administratívu</Name><WsEnumCode>ICL0041</WsEnumCode></Ucel><Vymera>0.00</Vymera></VymeraPlochNaJednotlivyUcel><VymeraPlochNaJednotlivyUcel><Ucel><Code>7</Code><Name>Stavby na ostatné podnikanie a na zárobkovú činnosť, skladovanie a administratívu súvisiacu s ostatným podnikaním a so zárobkovou činnosťou</Name><WsEnumCode>ICL0041</WsEnumCode></Ucel><Vymera>0.00</Vymera></VymeraPlochNaJednotlivyUcel><VymeraPlochNaJednotlivyUcel><Ucel><Code>8</Code><Name>Ostatné stavby</Name><WsEnumCode>ICL0041</WsEnumCode></Ucel><Vymera>0.00</Vymera></VymeraPlochNaJednotlivyUcel></VymeraPlochNaJednotliveUcely><PocetPodlazi>4</PocetPodlazi><Poznamka>Príkladná 35
Číslo LV: 4597</Poznamka></DanZoStaviebViacereUcelyZaznam></DanZoStaviebViacereUcely><DanZBytovANebytovychPriestorov><DanZBytovANebytovychPriestorovZaznam><PoradoveCislo>1</PoradoveCislo><RodneCislo>9203146326</RodneCislo><AdresaBytu><UlicaACislo><Ulica>Príkladná</Ulica><SupisneCislo>3694</SupisneCislo><OrientacneCislo>35</OrientacneCislo></UlicaACislo><Obec><Code>SK0104529397</Code><Name>Bratislava - mestská časť Karlova Ves</Name><WsEnumCode>0025</WsEnumCode></Obec><Stat><Code>703</Code><Name>Slovenská republika</Name><WsEnumCode>0086</WsEnumCode></Stat></AdresaBytu><NazovKatastralnehoUzemia><Code>805211</Code><Name>Karlova Ves</Name><WsEnumCode>ICL0079</WsEnumCode></NazovKatastralnehoUzemia><CisloParcely>6975/2</CisloParcely><CisloBytu>3</CisloBytu><PravnyVztah><Code>1</Code><Name>Správca</Name><WsEnumCode>ICL0038</WsEnumCode></PravnyVztah><Spoluvlastnictvo><Code>0</Code><Name>Podielové</Name><WsEnumCode>ICL0042</WsEnumCode></Spoluvlastnictvo><PocetSpoluvlastnikov>3</PocetSpoluvlastnikov><SpoluvlastnikUrcenyDohodou>false</SpoluvlastnikUrcenyDohodou><PopisBytu>Dvojizbak</PopisBytu><DatumVznikuDanovejPovinnosti>2024-01-16+01:00</DatumVznikuDanovejPovinnosti><DatumZanikuDanovejPovinnosti>2024-01-07+01:00</DatumZanikuDanovejPovinnosti><NebytovePriestory><NebytovyPriestor><PoradoveCislo>1</PoradoveCislo><CisloVBytovomDome>G05</CisloVBytovomDome><UcelVyuzitiaVBytovomDome>Garáž</UcelVyuzitiaVBytovomDome><VymeraPodlahovychPloch>6</VymeraPodlahovychPloch><DatumVznikuDanovejPovinnosti>2024-01-05+01:00</DatumVznikuDanovejPovinnosti><DatumZanikuDanovejPovinnosti>2024-01-12+01:00</DatumZanikuDanovejPovinnosti></NebytovyPriestor></NebytovePriestory><ZakladDane><Byt>27</Byt></ZakladDane><VymeraPodlahovejPlochyVyuzivanejNaIneUcely>18</VymeraPodlahovejPlochyVyuzivanejNaIneUcely><Poznamka>Príkladná 35
Číslo LV: 2648</Poznamka></DanZBytovANebytovychPriestorovZaznam></DanZBytovANebytovychPriestorov><Priloha><Obec>Bratislava</Obec><PozemkyA>false</PozemkyA><PozemkyB>true</PozemkyB><PozemkyC>true</PozemkyC><PozemkyD>false</PozemkyD><PozemkyE>true</PozemkyE><PozemkyF>false</PozemkyF><PozemkyG>false</PozemkyG><PozemkyH>false</PozemkyH><PozemkyI>false</PozemkyI><PozemkyJ>false</PozemkyJ><PozemkyK>true</PozemkyK><PozemkyL>false</PozemkyL><StavbyA>false</StavbyA><StavbyB>true</StavbyB><StavbyC>false</StavbyC><StavbyD>true</StavbyD><StavbyE>true</StavbyE><StavbyF>false</StavbyF><BytyA>false</BytyA><BytyB>false</BytyB><BytyC>false</BytyC><BytyD>true</BytyD><BytyE>true</BytyE><Poznamka>Príkladná 35</Poznamka></Priloha><SuhrnPriloh><PocetOddielovII>1</PocetOddielovII><PocetOddielovIII>2</PocetOddielovIII><PocetOddielovIV>1</PocetOddielovIV><PocetOddielovV>0</PocetOddielovV><PocetOddielovVI>0</PocetOddielovVI><PocetOddielovVII>0</PocetOddielovVII><PocetInych>1</PocetInych><Poznamka>Korespondenčná adresa:
Ulica: Prašivá | Číslo: 7 | Obec: Bratislava | PSČ: 83106 | Štát: Slovenská republika

Údaje o manželovi/manželke:
Rodné číslo: 920314/2634 | Titul: Bsc | Meno: Petra | Priezvisko: Príkladná | Ulica: Príkladná 35 | Číslo: 25 | Obec: Abelova | PSČ: 83106 | Štát: Slovenská republika | E-mail: test@test.com | Telefón: +421948417711

Tento dokument bol vygenerovaný pomocou Bratislavského konta.</Poznamka></SuhrnPriloh><DatumZadaniaPodania>2024-01-01T01:00:00.000+01:00</DatumZadaniaPodania><ZakladneVyhlasenie><SpravnostUdajovText>Všeobecné informácie o poskytnutí, spracovaní a ochrane osobných údajov nájdete na https://esluzby.bratislava.sk/page/ochrana-osobnych-udajov</SpravnostUdajovText><SuhlasSoSpracovanimText>Týmto dávam na základe slobodnej vôle súhlas na spracovanie mojich osobných údajov uvedených vo formulári tohto podania a získaných z môjho osobného dokladu za v zmysle Nariadenia európskeho parlamentu a rady EÚ 2016/679 o ochrane fyzických osôb pri spracúvaní osobných údajov a o voľnom pohybe takýchto údajov a zákona č. 18/2018 Z.z. o ochrane osobných údajov a o zmene a doplnení niektorých zákonov. Zároveň potvrdzujem dovŕšenie veku 16 rokov pre potreby spracovania osobných údajov. Osobné údaje poskytujem za účelom spracovania mojej žiadosti.</SuhlasSoSpracovanimText><PoskytujemSuhlas>true</PoskytujemSuhlas><PoskytujemSuhlasText>Poskytujem súhlas na spracovanie osobných údajov</PoskytujemSuhlasText><NeposkytujemSuhlas>false</NeposkytujemSuhlas><NeposkytujemSuhlasText>Neposkytujem súhlas na spracovanie osobných údajov</NeposkytujemSuhlasText></ZakladneVyhlasenie><Dorucenie><AdresatPodania><AdresatPodania>Mesto</AdresatPodania></AdresatPodania><Checkbox><Notifikacia>true</Notifikacia></Checkbox><FormaOdoslaniaZiadosti>Elektronicky</FormaOdoslaniaZiadosti><FormaDoruceniaRozhodnutia><TypSposobuDorucenia>Elektronická schránka</TypSposobuDorucenia></FormaDoruceniaRozhodnutia></Dorucenie></Body></E-form>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2",
  "xslMediaDestinationTypeDescription": "TXT",
  "xslReferenceURI": "http://schemas.gov.sk/form/esmao.eforms.bratislava.obec_024/201501.2/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > stanoviskoKInvesticnemuZameruExample > should generate correct signer data 1`] = `
{
  "objectDescription": "Žiadosť o stanovisko k investičnému zámeru",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/00603481.stanoviskoKInvesticnemuZameru/0.9",
  "objectId": "Ziadost_o_stanovisko_k_investicnemu_zameru.xml",
  "signatureId": "form_data_67306229f8d453f5318c6d35b70506dadef08a50_20240101000000",
  "xdcIdentifier": "http://data.gov.sk/doc/eform/00603481.stanoviskoKInvesticnemuZameru/0.9",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://schemas.gov.sk/form/00603481.stanoviskoKInvesticnemuZameru/0.9"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://schemas.gov.sk/form/00603481.stanoviskoKInvesticnemuZameru/0.9" 
           elementFormDefault="qualified" 
           attributeFormDefault="unqualified">

  <xs:element name="eform">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="JsonVersion" type="xs:string"/>
        <xs:element name="Json" type="xs:string"/>
        <xs:element name="Summary" type="SummaryType"/>
        <xs:element name="TermsAndConditions" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="SummaryType">
    <xs:sequence>
      <xs:element name="Form" type="FormType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FormType">
    <xs:sequence>
      <xs:element name="Step" type="StepType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="StepType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayType">
    <xs:sequence>
      <xs:element name="ArrayItem" type="ArrayItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayItemType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FieldType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="StringValue" type="xs:string"/>
      <xs:element name="FileValue" type="FileValueType"/>
      <xs:element name="NoneValue">
        <xs:complexType/>
      </xs:element>
      <xs:element name="InvalidValue">
        <xs:complexType/>
      </xs:element>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="label" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FileValueType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="id" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:e="http://schemas.gov.sk/form/00603481.stanoviskoKInvesticnemuZameru/0.9"
>
  <xsl:output
    method="xml"
    indent="yes"
    encoding="UTF-8"
    omit-xml-declaration="yes"
  />
  <xsl:template match="/">
    <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE html&gt;
</xsl:text>
    <html lang="sk">
      <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title><xsl:value-of select="//e:eform/e:Summary/e:Form/@title"/></title>
        <style>
          body {
            font-family: Arial, sans-serif;
            color: #333;
          }
          .container {
            margin-bottom: 32px;
          }
          .container:last-child {
            margin-bottom: 0;
          }
          h1 {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 32px;
          }
          h2 {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 16px;
          }
          .box {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
          }
          .box-text {
            margin: 0;
            white-space: pre-wrap;
          }
          .field {
            border-bottom: 2px solid #e5e5e5;
            padding: 10px 0;
            overflow: hidden;
          }
          .field-label {
            font-weight: bold;
            float: left;
            width: 50%;
            padding-right: 4px;
            box-sizing: border-box;
          }
          .field-value {
            float: right;
            width: 50%;
          }
          .field-value-item {
            margin-bottom: 8px;
            margin-left: 4px;
          }
          .field-value-item:last-child {
            margin-bottom: 0;
          }
          .field-value-string {
            white-space: pre-wrap;
          }
          .array {
            margin-top: 16px;
          }
          .array-title {
            font-weight: bold;
            margin-bottom: 16px;
          }
          .array-item {
            border-left: 4px solid #e5e5e5;
            padding: 0 0 0 12px;
            margin-bottom: 16px;
          }
          .array-item:last-child {
            margin-bottom: 0;
          }
          .array-item-title {
            font-weight: bold;
            margin-bottom: 12px;
          }

          @media (max-width: 767px) {
            .field-label,
            .field-value {
              float: none;
              width: 100%;
            }
            .field-label {
              margin-bottom: 8px;
              padding-right: 0;
            }
            .field-value-item {
              margin-left: 0;
            }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1><xsl:value-of select="//e:eform/e:Summary/e:Form/@title" /></h1>
          <xsl:apply-templates select="//e:eform/e:Summary/e:Form/*" />
        </div>
        <div class="container">
          <h2>Ochrana osobných údajov</h2>
          <div class="box">
            <p class="box-text"><xsl:value-of select="//e:eform/e:TermsAndConditions" /></p>
          </div>
        </div>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="e:Step">
    <div class="container">
      <h2><xsl:value-of select="@title" /></h2>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:Field">
    <div class="field">
      <div class="field-label"><xsl:value-of select="@label" /></div>
      <div class="field-value">
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:StringValue">
    <div class="field-value-item">
      <span class="field-value-string"><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:FileValue">
    <div class="field-value-item">
      <span><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:NoneValue">
    <div class="field-value-item">
      <span>-</span>
    </div>
  </xsl:template>

  <xsl:template match="e:InvalidValue">
    <div class="field-value-item">
      <span class="field-value-error">Neznáma hodnota</span>
    </div>
  </xsl:template>

  <xsl:template match="e:Array">
    <div class="array">
      <div class="array-title"><xsl:value-of select="@title" /></div>
      <xsl:apply-templates />
    </div>
  </xsl:template>

  <xsl:template match="e:ArrayItem">
    <div class="array-item">
      <div class="array-item-title"><xsl:value-of select="@title" /></div>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "0.9",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><eform xmlns="http://schemas.gov.sk/form/00603481.stanoviskoKInvesticnemuZameru/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><JsonVersion>1.1.0</JsonVersion><Json>{"ziadatel":{"typ":"Fyzická osoba","email":"jan.kovac@priklad.sk","telefon":"+421905987654","menoPriezvisko":"Ján Kováč","adresa":{"ulicaACislo":"Mierová 12","mestoPsc":{"mesto":"Bratislava","psc":"82108"}}},"stavebnik":{"stavebnikZiadatelom":false,"splnomocnenie":"c6bd9718-97ea-4601-b79f-c70e7064943d","typ":"Fyzická osoba","email":"marta.novakova@priklad.sk","telefon":"+421902123456","menoPriezvisko":"Marta Nováková","adresa":{"ulicaACislo":"Šancová 56","mestoPsc":{"mesto":"Bratislava","psc":"83104"}}},"zodpovednyProjektant":{"menoPriezvisko":"Peter Horváth","email":"peter.horvath@priklad.sk","projektantTelefon":"+421911654321","autorizacneOsvedcenie":"123456789","datumSpracovania":"2024-07-03"},"stavba":{"nazov":"Nový Bytový Dom","druhStavby":"Bytový dom","ulica":"Dunajská","supisneCislo":"464","parcelneCislo":"56789","kataster":["Dúbravka","Karlova Ves"]},"prilohy":{"architektonickaStudia":["cb1e3a95-f9d2-4e55-b482-8e7919f2b43f"]}}</Json><Summary><Form title="Žiadosť o stanovisko k investičnému zámeru"><Step id="root_ziadatel" title="Žiadateľ"><Field id="root_ziadatel_typ" label="Žiadate ako"><StringValue>Fyzická osoba</StringValue></Field><Field id="root_ziadatel_menoPriezvisko" label="Meno a priezvisko"><StringValue>Ján Kováč</StringValue></Field><Field id="root_ziadatel_adresa_ulicaACislo" label="Ulica a číslo"><StringValue>Mierová 12</StringValue></Field><Field id="root_ziadatel_adresa_mestoPsc_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_ziadatel_adresa_mestoPsc_psc" label="PSČ"><StringValue>82108</StringValue></Field><Field id="root_ziadatel_email" label="E-mail"><StringValue>jan.kovac@priklad.sk</StringValue></Field><Field id="root_ziadatel_telefon" label="Telefónne číslo"><StringValue>+421905987654</StringValue></Field></Step><Step id="root_stavebnik" title="Stavebník"><Field id="root_stavebnik_stavebnikZiadatelom" label="Je stavebník rovnaká osoba ako žiadateľ?"><StringValue>Nie</StringValue></Field><Field id="root_stavebnik_splnomocnenie" label="Splnomocnenie na zastupovanie"><FileValue id="c6bd9718-97ea-4601-b79f-c70e7064943d">splnomocnenie.pdf</FileValue></Field><Field id="root_stavebnik_typ" label="Žiadate ako"><StringValue>Fyzická osoba</StringValue></Field><Field id="root_stavebnik_menoPriezvisko" label="Meno a priezvisko"><StringValue>Marta Nováková</StringValue></Field><Field id="root_stavebnik_adresa_ulicaACislo" label="Ulica a číslo"><StringValue>Šancová 56</StringValue></Field><Field id="root_stavebnik_adresa_mestoPsc_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_stavebnik_adresa_mestoPsc_psc" label="PSČ"><StringValue>83104</StringValue></Field><Field id="root_stavebnik_email" label="E-mail"><StringValue>marta.novakova@priklad.sk</StringValue></Field><Field id="root_stavebnik_telefon" label="Telefónne číslo"><StringValue>+421902123456</StringValue></Field></Step><Step id="root_zodpovednyProjektant" title="Zodpovedný projektant"><Field id="root_zodpovednyProjektant_menoPriezvisko" label="Meno a priezvisko"><StringValue>Peter Horváth</StringValue></Field><Field id="root_zodpovednyProjektant_email" label="E-mail"><StringValue>peter.horvath@priklad.sk</StringValue></Field><Field id="root_zodpovednyProjektant_projektantTelefon" label="Telefónne číslo"><StringValue>+421911654321</StringValue></Field><Field id="root_zodpovednyProjektant_autorizacneOsvedcenie" label="Číslo autorizačného osvedčenia"><StringValue>123456789</StringValue></Field><Field id="root_zodpovednyProjektant_datumSpracovania" label="Dátum spracovania projektovej dokumentácie"><StringValue>3. 7. 2024</StringValue></Field></Step><Step id="root_stavba" title="Informácie o stavbe"><Field id="root_stavba_nazov" label="Názov stavby/projektu"><StringValue>Nový Bytový Dom</StringValue></Field><Field id="root_stavba_druhStavby" label="Druh stavby"><StringValue>Bytový dom</StringValue></Field><Field id="root_stavba_ulica" label="Ulica"><StringValue>Dunajská</StringValue></Field><Field id="root_stavba_supisneCislo" label="Súpisné číslo"><StringValue>464</StringValue></Field><Field id="root_stavba_parcelneCislo" label="Parcelné číslo"><StringValue>56789</StringValue></Field><Field id="root_stavba_kataster" label="Katastrálne územie"><StringValue>Dúbravka</StringValue><StringValue>Karlova Ves</StringValue></Field></Step><Step id="root_prilohy" title="Prílohy"><Field id="root_prilohy_architektonickaStudia" label="Architektonická štúdia"><FileValue id="cb1e3a95-f9d2-4e55-b482-8e7919f2b43f">architektonicka-studia.pdf</FileValue></Field></Step></Form></Summary><TermsAndConditions>Stiahnutím, uložením a/alebo odoslaním Žiadosti výslovne vyhlasujem, že som sa oboznámil s podmienkami spracúvania osobných údajov Hlavného mesta ako prevádzkovateľa osobných údajov a beriem na vedomie, že ich spracúvanie je nevyhnutné na splnenie zákonných povinností Hlavného mesta v súvislosti s vybavením tejto žiadosti.</TermsAndConditions></eform>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/00603481.stanoviskoKInvesticnemuZameru/0.9",
  "xslMediaDestinationTypeDescription": "HTML",
  "xslReferenceURI": "http://schemas.gov.sk/form/00603481.stanoviskoKInvesticnemuZameru/0.9/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > zavazneStanoviskoKInvesticnejCinnostiExample > should generate correct signer data 1`] = `
{
  "objectDescription": "Žiadosť o záväzné stanovisko k investičnej činnosti",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/00603481.zavazneStanoviskoKInvesticnejCinnosti/0.8",
  "objectId": "Ziadost_o_zavazne_stanovisko_k_investicnej_cinnosti.xml",
  "signatureId": "form_data_2f4387770ad6e63f859d4ecf499725144847e025_20240101000000",
  "xdcIdentifier": "http://data.gov.sk/doc/eform/00603481.zavazneStanoviskoKInvesticnejCinnosti/0.8",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://schemas.gov.sk/form/00603481.zavazneStanoviskoKInvesticnejCinnosti/0.8"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://schemas.gov.sk/form/00603481.zavazneStanoviskoKInvesticnejCinnosti/0.8" 
           elementFormDefault="qualified" 
           attributeFormDefault="unqualified">

  <xs:element name="eform">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="JsonVersion" type="xs:string"/>
        <xs:element name="Json" type="xs:string"/>
        <xs:element name="Summary" type="SummaryType"/>
        <xs:element name="TermsAndConditions" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="SummaryType">
    <xs:sequence>
      <xs:element name="Form" type="FormType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FormType">
    <xs:sequence>
      <xs:element name="Step" type="StepType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="StepType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayType">
    <xs:sequence>
      <xs:element name="ArrayItem" type="ArrayItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayItemType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FieldType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="StringValue" type="xs:string"/>
      <xs:element name="FileValue" type="FileValueType"/>
      <xs:element name="NoneValue">
        <xs:complexType/>
      </xs:element>
      <xs:element name="InvalidValue">
        <xs:complexType/>
      </xs:element>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="label" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FileValueType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="id" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:e="http://schemas.gov.sk/form/00603481.zavazneStanoviskoKInvesticnejCinnosti/0.8"
>
  <xsl:output
    method="xml"
    indent="yes"
    encoding="UTF-8"
    omit-xml-declaration="yes"
  />
  <xsl:template match="/">
    <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE html&gt;
</xsl:text>
    <html lang="sk">
      <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title><xsl:value-of select="//e:eform/e:Summary/e:Form/@title"/></title>
        <style>
          body {
            font-family: Arial, sans-serif;
            color: #333;
          }
          .container {
            margin-bottom: 32px;
          }
          .container:last-child {
            margin-bottom: 0;
          }
          h1 {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 32px;
          }
          h2 {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 16px;
          }
          .box {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
          }
          .box-text {
            margin: 0;
            white-space: pre-wrap;
          }
          .field {
            border-bottom: 2px solid #e5e5e5;
            padding: 10px 0;
            overflow: hidden;
          }
          .field-label {
            font-weight: bold;
            float: left;
            width: 50%;
            padding-right: 4px;
            box-sizing: border-box;
          }
          .field-value {
            float: right;
            width: 50%;
          }
          .field-value-item {
            margin-bottom: 8px;
            margin-left: 4px;
          }
          .field-value-item:last-child {
            margin-bottom: 0;
          }
          .field-value-string {
            white-space: pre-wrap;
          }
          .array {
            margin-top: 16px;
          }
          .array-title {
            font-weight: bold;
            margin-bottom: 16px;
          }
          .array-item {
            border-left: 4px solid #e5e5e5;
            padding: 0 0 0 12px;
            margin-bottom: 16px;
          }
          .array-item:last-child {
            margin-bottom: 0;
          }
          .array-item-title {
            font-weight: bold;
            margin-bottom: 12px;
          }

          @media (max-width: 767px) {
            .field-label,
            .field-value {
              float: none;
              width: 100%;
            }
            .field-label {
              margin-bottom: 8px;
              padding-right: 0;
            }
            .field-value-item {
              margin-left: 0;
            }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1><xsl:value-of select="//e:eform/e:Summary/e:Form/@title" /></h1>
          <xsl:apply-templates select="//e:eform/e:Summary/e:Form/*" />
        </div>
        <div class="container">
          <h2>Ochrana osobných údajov</h2>
          <div class="box">
            <p class="box-text"><xsl:value-of select="//e:eform/e:TermsAndConditions" /></p>
          </div>
        </div>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="e:Step">
    <div class="container">
      <h2><xsl:value-of select="@title" /></h2>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:Field">
    <div class="field">
      <div class="field-label"><xsl:value-of select="@label" /></div>
      <div class="field-value">
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:StringValue">
    <div class="field-value-item">
      <span class="field-value-string"><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:FileValue">
    <div class="field-value-item">
      <span><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:NoneValue">
    <div class="field-value-item">
      <span>-</span>
    </div>
  </xsl:template>

  <xsl:template match="e:InvalidValue">
    <div class="field-value-item">
      <span class="field-value-error">Neznáma hodnota</span>
    </div>
  </xsl:template>

  <xsl:template match="e:Array">
    <div class="array">
      <div class="array-title"><xsl:value-of select="@title" /></div>
      <xsl:apply-templates />
    </div>
  </xsl:template>

  <xsl:template match="e:ArrayItem">
    <div class="array-item">
      <div class="array-item-title"><xsl:value-of select="@title" /></div>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "0.8",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><eform xmlns="http://schemas.gov.sk/form/00603481.zavazneStanoviskoKInvesticnejCinnosti/0.8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><JsonVersion>2.0.0</JsonVersion><Json>{"ziadatel":{"typZiadatela":"fyzickaOsoba","email":"jan.kovac@priklad.sk","telefon":"+421905987654","meno":"Ján","priezvisko":"Kováč","ulicaACislo":"Mierová 12","mesto":"Bratislava","psc":"82108"},"investor":{"investorZiadatelom":false,"splnomocnenie":"b9050ef5-0d98-41c4-aba1-b0fc5a65a442","typZiadatela":"fyzickaOsoba","email":"marta.novakova@priklad.sk","telefon":"+421902123456","meno":"Marta","priezvisko":"Nováková","ulicaACislo":"Šancová 56","mesto":"Bratislava","psc":"83104"},"zodpovednyProjektant":{"meno":"Peter","priezvisko":"Horváth","email":"peter.horvath@priklad.sk","telefon":"+421911654321","autorizacneOsvedcenie":"123456789","datumSpracovania":"2024-07-04"},"stavba":{"nazov":"Nový Bytový Dom","idStavby":"BYT-2024-001","ulica":"Dunajská","supisneCislo":"1234","parcelneCislo":"56789","katastralneUzemia":["805211","806099"],"clenenieStavby":{"hlavnaStavba":"Stavba 01 - Bytový dom Luna","clenenieHlavnejStavby":"SO 01 Hlavná budova, SO 02 Podzemné garáže","hlavnaStavbaPodlaUcelu":"1120 - VIACBYTOVÉ BUDOVY","ostatneStavby":"Stavba 02 - Oplotenie - SO 01\\nStavba 03 - Prípojky - SO 01, SO 02, SO 03"},"druhStavby":"bytovyDom"},"typZiadosti":{"typ":"stavebnyZamerNavrhovanaStavba"},"prilohy":{"projektovaDokumentacia":["1cdcb500-7f11-45d1-a31b-0ab614482e27","01d3bd64-270e-4a04-83da-f72cdd8717c4"]}}</Json><Summary><Form title="Žiadosť o záväzné stanovisko k investičnej činnosti"><Step id="root_ziadatel" title="Žiadateľ"><Field id="root_ziadatel_typZiadatela" label="Žiadate ako"><StringValue>Fyzická osoba</StringValue></Field><Field id="root_ziadatel_meno" label="Meno"><StringValue>Ján</StringValue></Field><Field id="root_ziadatel_priezvisko" label="Priezvisko"><StringValue>Kováč</StringValue></Field><Field id="root_ziadatel_ulicaACislo" label="Korešpondenčná adresa"><StringValue>Mierová 12</StringValue></Field><Field id="root_ziadatel_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_ziadatel_psc" label="PSČ"><StringValue>82108</StringValue></Field><Field id="root_ziadatel_email" label="Email"><StringValue>jan.kovac@priklad.sk</StringValue></Field><Field id="root_ziadatel_telefon" label="Telefónne číslo"><StringValue>+421905987654</StringValue></Field></Step><Step id="root_investor" title="Investor"><Field id="root_investor_investorZiadatelom" label="Je investor rovnaká osoba ako žiadateľ?"><StringValue>Nie</StringValue></Field><Field id="root_investor_splnomocnenie" label="Splnomocnenie na zastupovanie"><FileValue id="b9050ef5-0d98-41c4-aba1-b0fc5a65a442">splnomocnenie.pdf</FileValue></Field><Field id="root_investor_typZiadatela" label="Žiadate ako"><StringValue>Fyzická osoba</StringValue></Field><Field id="root_investor_meno" label="Meno"><StringValue>Marta</StringValue></Field><Field id="root_investor_priezvisko" label="Priezvisko"><StringValue>Nováková</StringValue></Field><Field id="root_investor_ulicaACislo" label="Korešpondenčná adresa"><StringValue>Šancová 56</StringValue></Field><Field id="root_investor_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_investor_psc" label="PSČ"><StringValue>83104</StringValue></Field><Field id="root_investor_email" label="Email"><StringValue>marta.novakova@priklad.sk</StringValue></Field><Field id="root_investor_telefon" label="Telefónne číslo"><StringValue>+421902123456</StringValue></Field></Step><Step id="root_zodpovednyProjektant" title="Zodpovedný projektant"><Field id="root_zodpovednyProjektant_meno" label="Meno"><StringValue>Peter</StringValue></Field><Field id="root_zodpovednyProjektant_priezvisko" label="Priezvisko"><StringValue>Horváth</StringValue></Field><Field id="root_zodpovednyProjektant_email" label="Email"><StringValue>peter.horvath@priklad.sk</StringValue></Field><Field id="root_zodpovednyProjektant_telefon" label="Telefónne číslo"><StringValue>+421911654321</StringValue></Field><Field id="root_zodpovednyProjektant_autorizacneOsvedcenie" label="Číslo autorizačného osvedčenia"><StringValue>123456789</StringValue></Field><Field id="root_zodpovednyProjektant_datumSpracovania" label="Dátum spracovania projektovej dokumentácie"><StringValue>4. 7. 2024</StringValue></Field></Step><Step id="root_stavba" title="Informácie o stavbe"><Field id="root_stavba_nazov" label="Názov stavby/projektu"><StringValue>Nový Bytový Dom</StringValue></Field><Field id="root_stavba_idStavby" label="ID stavby"><StringValue>BYT-2024-001</StringValue></Field><Field id="root_stavba_ulica" label="Ulica"><StringValue>Dunajská</StringValue></Field><Field id="root_stavba_supisneCislo" label="Súpisné číslo"><StringValue>1234</StringValue></Field><Field id="root_stavba_parcelneCislo" label="Parcelné číslo"><StringValue>56789</StringValue></Field><Field id="root_stavba_katastralneUzemia" label="Katastrálne územie"><StringValue>Karlova Ves</StringValue><StringValue>Dúbravka</StringValue></Field><Field id="root_stavba_clenenieStavby_hlavnaStavba" label="Hlavná stavba"><StringValue>Stavba 01 - Bytový dom Luna</StringValue></Field><Field id="root_stavba_clenenieStavby_clenenieHlavnejStavby" label="Členenie hlavnej stavby"><StringValue>SO 01 Hlavná budova, SO 02 Podzemné garáže</StringValue></Field><Field id="root_stavba_clenenieStavby_hlavnaStavbaPodlaUcelu" label="Hlavná stavba podľa účelu"><StringValue>1120 - VIACBYTOVÉ BUDOVY</StringValue></Field><Field id="root_stavba_clenenieStavby_ostatneStavby" label="Ostatné stavby"><StringValue>Stavba 02 - Oplotenie - SO 01
Stavba 03 - Prípojky - SO 01, SO 02, SO 03</StringValue></Field><Field id="root_stavba_druhStavby" label="Druh stavby"><StringValue>Bytový dom</StringValue></Field></Step><Step id="root_typZiadosti" title="Typ žiadosti"><Field id="root_typZiadosti_typ" label="Typ žiadosti"><StringValue>o záväzné stanovisko k stavebnému zámeru - navrhovaná stavba</StringValue></Field></Step><Step id="root_prilohy" title="Prílohy"><Field id="root_prilohy_projektovaDokumentacia" label="Projektová dokumentácia"><FileValue id="1cdcb500-7f11-45d1-a31b-0ab614482e27">projektova-dokumentacia-1.pdf</FileValue><FileValue id="01d3bd64-270e-4a04-83da-f72cdd8717c4">projektova-dokumentacia-2.pdf</FileValue></Field></Step></Form></Summary><TermsAndConditions>Stiahnutím, uložením a/alebo odoslaním Žiadosti výslovne vyhlasujem, že som sa oboznámil s podmienkami spracúvania osobných údajov Hlavného mesta ako prevádzkovateľa osobných údajov a beriem na vedomie, že ich spracúvanie je nevyhnutné na splnenie zákonných povinností Hlavného mesta v súvislosti s vybavením tejto žiadosti.</TermsAndConditions></eform>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/00603481.zavazneStanoviskoKInvesticnejCinnosti/0.8",
  "xslMediaDestinationTypeDescription": "HTML",
  "xslReferenceURI": "http://schemas.gov.sk/form/00603481.zavazneStanoviskoKInvesticnejCinnosti/0.8/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > ziadostONajomBytuExample > should generate correct signer data 1`] = `
{
  "objectDescription": "Žiadosť o nájom bytu",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/00603481.ziadostONajomnyByt/1.2",
  "objectId": "Ziadost_o_najom_bytu.xml",
  "signatureId": "form_data_083334164b123a107864b68dd1efe512b32c88e1_20240101000000",
  "xdcIdentifier": "http://data.gov.sk/doc/eform/00603481.ziadostONajomnyByt/1.2",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://schemas.gov.sk/form/00603481.ziadostONajomnyByt/1.2"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://schemas.gov.sk/form/00603481.ziadostONajomnyByt/1.2" 
           elementFormDefault="qualified" 
           attributeFormDefault="unqualified">

  <xs:element name="eform">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="JsonVersion" type="xs:string"/>
        <xs:element name="Json" type="xs:string"/>
        <xs:element name="Summary" type="SummaryType"/>
        <xs:element name="TermsAndConditions" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="SummaryType">
    <xs:sequence>
      <xs:element name="Form" type="FormType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FormType">
    <xs:sequence>
      <xs:element name="Step" type="StepType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="StepType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayType">
    <xs:sequence>
      <xs:element name="ArrayItem" type="ArrayItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayItemType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FieldType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="StringValue" type="xs:string"/>
      <xs:element name="FileValue" type="FileValueType"/>
      <xs:element name="NoneValue">
        <xs:complexType/>
      </xs:element>
      <xs:element name="InvalidValue">
        <xs:complexType/>
      </xs:element>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="label" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FileValueType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="id" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:e="http://schemas.gov.sk/form/00603481.ziadostONajomnyByt/1.2"
>
  <xsl:output
    method="xml"
    indent="yes"
    encoding="UTF-8"
    omit-xml-declaration="yes"
  />
  <xsl:template match="/">
    <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE html&gt;
</xsl:text>
    <html lang="sk">
      <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title><xsl:value-of select="//e:eform/e:Summary/e:Form/@title"/></title>
        <style>
          body {
            font-family: Arial, sans-serif;
            color: #333;
          }
          .container {
            margin-bottom: 32px;
          }
          .container:last-child {
            margin-bottom: 0;
          }
          h1 {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 32px;
          }
          h2 {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 16px;
          }
          .box {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
          }
          .box-text {
            margin: 0;
            white-space: pre-wrap;
          }
          .field {
            border-bottom: 2px solid #e5e5e5;
            padding: 10px 0;
            overflow: hidden;
          }
          .field-label {
            font-weight: bold;
            float: left;
            width: 50%;
            padding-right: 4px;
            box-sizing: border-box;
          }
          .field-value {
            float: right;
            width: 50%;
          }
          .field-value-item {
            margin-bottom: 8px;
            margin-left: 4px;
          }
          .field-value-item:last-child {
            margin-bottom: 0;
          }
          .field-value-string {
            white-space: pre-wrap;
          }
          .array {
            margin-top: 16px;
          }
          .array-title {
            font-weight: bold;
            margin-bottom: 16px;
          }
          .array-item {
            border-left: 4px solid #e5e5e5;
            padding: 0 0 0 12px;
            margin-bottom: 16px;
          }
          .array-item:last-child {
            margin-bottom: 0;
          }
          .array-item-title {
            font-weight: bold;
            margin-bottom: 12px;
          }

          @media (max-width: 767px) {
            .field-label,
            .field-value {
              float: none;
              width: 100%;
            }
            .field-label {
              margin-bottom: 8px;
              padding-right: 0;
            }
            .field-value-item {
              margin-left: 0;
            }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1><xsl:value-of select="//e:eform/e:Summary/e:Form/@title" /></h1>
          <xsl:apply-templates select="//e:eform/e:Summary/e:Form/*" />
        </div>
        <div class="container">
          <h2>Ochrana osobných údajov</h2>
          <div class="box">
            <p class="box-text"><xsl:value-of select="//e:eform/e:TermsAndConditions" /></p>
          </div>
        </div>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="e:Step">
    <div class="container">
      <h2><xsl:value-of select="@title" /></h2>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:Field">
    <div class="field">
      <div class="field-label"><xsl:value-of select="@label" /></div>
      <div class="field-value">
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:StringValue">
    <div class="field-value-item">
      <span class="field-value-string"><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:FileValue">
    <div class="field-value-item">
      <span><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:NoneValue">
    <div class="field-value-item">
      <span>-</span>
    </div>
  </xsl:template>

  <xsl:template match="e:InvalidValue">
    <div class="field-value-item">
      <span class="field-value-error">Neznáma hodnota</span>
    </div>
  </xsl:template>

  <xsl:template match="e:Array">
    <div class="array">
      <div class="array-title"><xsl:value-of select="@title" /></div>
      <xsl:apply-templates />
    </div>
  </xsl:template>

  <xsl:template match="e:ArrayItem">
    <div class="array-item">
      <div class="array-item-title"><xsl:value-of select="@title" /></div>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "1.2",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><eform xmlns="http://schemas.gov.sk/form/00603481.ziadostONajomnyByt/1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><JsonVersion>1.0.0</JsonVersion><Json>{"ziadatelZiadatelka":{"osobneUdaje":{"adresaTrvalehoPobytu":{"adresaSkutocnehoPobytuRovnaka":true,"byvanieVMestskomNajomnomByte":false,"mestoPsc":{"mesto":"Bratislava","psc":"81101"},"pobytVBratislaveViacAkoRok":true,"ulicaACislo":"Hlavná 123","vlastnikNehnutelnosti":false},"datumNarodenia":"1985-03-15","email":"jana.novakova@email.com","kontaktovanyEmailom":true,"menoPriezvisko":{"meno":"Jana","priezvisko":"Nováková"},"rodinnyStav":"rozvedeny","rodnePriezvisko":"Kováčová","statnaPrislusnost":"slovenska","telefonneCislo":"+421901234567"},"prijem":{"davkaVNezamestnanosti":false,"dochodok":false,"inePrijmy":true,"inePrijmyVyska":150,"samostatnaZarobkovaCinnost":false,"vyzivne":true,"vyzivneVyska":200,"zamestnanie":true,"zamestnaniePrijem":1200},"rizikoveFaktory":{"rizikoveFaktoryPritomne":true,"vekNajstarsiehoClena":"menejAko63","zoznamRizikovychFaktorov":["opustenieUstavnejStarostlivosti","osamelyRodic"]},"sucasneByvanie":{"bytovaNudza":true,"typByvania":"institucionalnaStarostlivost","dlzkaBytovejNudze":"menejAko1"},"zdravotnyStav":{"bezbarierovyByt":false,"chronickeOchorenie":true,"existujuceDiagnozy":["astma","chronickaParadentoza"],"tzpPreukaz":false}},"manzelManzelka":{"manzelManzelkaSucastouDomacnosti":false},"druhDruzka":{"druhDruzkaSucastouDomacnosti":true,"osobneUdaje":{"adresaSkutocnehoPobytu":{"mestoPsc":{"mesto":"Bratislava","psc":"82105"},"ulicaACislo":"Nová 456","vlastnikNehnutelnosti":false},"datumNarodenia":"1982-07-22","menoPriezvisko":{"meno":"Peter","priezvisko":"Horváth"},"rodinnyStav":"slobodny","rodnePriezvisko":"Horváth","statnaPrislusnost":"slovenska"},"prijem":{"davkaVNezamestnanosti":false,"dochodok":false,"inePrijmy":false,"samostatnaZarobkovaCinnost":true,"samostatnaZarobkovaCinnostPrijem":300,"vyzivne":false,"zamestnanie":true,"zamestnaniePrijem":1500},"sucasneByvanie":{"situaciaRovnakaAkoVasa":true},"zdravotnyStav":{"mieraFunkcnejPoruchy":"50az74","tzpPreukaz":true}},"deti":{"detiSucastouDomacnosti":true,"zoznamDeti":[{"osobneUdaje":{"menoPriezvisko":{"meno":"Lucia","priezvisko":"Nováková"},"statnaPrislusnost":"slovenska","vlastnikNehnutelnosti":false,"datumNarodenia":"2010-11-30"},"sucasneByvanie":{"situaciaRovnakaAkoVasa":true},"prijem":{"student":true,"maPrijem":false},"zdravotnyStav":{"tzpPreukaz":false,"chronickeOchorenie":false}},{"osobneUdaje":{"menoPriezvisko":{"meno":"Michal","priezvisko":"Novák"},"statnaPrislusnost":"slovenska","vlastnikNehnutelnosti":false,"datumNarodenia":"2005-04-18"},"sucasneByvanie":{"situaciaRovnakaAkoVasa":true},"prijem":{"student":true,"maPrijem":true,"prijemVyska":200},"zdravotnyStav":{"tzpPreukaz":true,"mieraFunkcnejPoruchy":"75az100"}}]},"inyClenoviaClenkyDomacnosti":{"inyClenoviaClenkySucastouDomacnosti":true,"zoznamInychClenov":[{"osobneUdaje":{"menoPriezvisko":{"meno":"Mária","priezvisko":"Kováčová"},"statnaPrislusnost":"slovenska","datumNarodenia":"1960-09-05","rodinnyStav":"vdovec","rodnePriezvisko":"Hrušková","vlastnikNehnutelnosti":false},"sucasneByvanie":{"situaciaRovnakaAkoVasa":true},"prijem":{"zamestnanie":false,"samostatnaZarobkovaCinnost":false,"dochodok":true,"vyzivne":false,"davkaVNezamestnanosti":false,"inePrijmy":false,"dochodokVyska":550},"zdravotnyStav":{"tzpPreukaz":true,"mieraFunkcnejPoruchy":"50az74"}}]},"ineOkolnosti":{"dovodyPodaniaZiadosti":"Potrebujeme väčší byt pre našu rastúcu rodinu a lepšie podmienky pre dieťa so zdravotným postihnutím.","maximalnaVyskaNajomneho":700,"preferovanaLokalita":["ruzinov","noveMesto"],"preferovanaVelkost":"3izbovy"},"sucetPrijmovCestneVyhlasenie":{"cestneVyhlasenie":true}}</Json><Summary><Form title="Žiadosť o nájom bytu"><Step id="root_ziadatelZiadatelka" title="Žiadateľ/žiadateľka"><Field id="root_ziadatelZiadatelka_osobneUdaje_menoPriezvisko_meno" label="Meno"><StringValue>Jana</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_menoPriezvisko_priezvisko" label="Priezvisko"><StringValue>Nováková</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_rodnePriezvisko" label="Rodné priezvisko"><StringValue>Kováčová</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_datumNarodenia" label="Dátum narodenia"><StringValue>15. 3. 1985</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_statnaPrislusnost" label="Štátna príslušnosť"><StringValue>Slovenská</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_rodinnyStav" label="Rodinný stav"><StringValue>Rozvedený/rozvedená</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_email" label="Email"><StringValue>jana.novakova@email.com</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_kontaktovanyEmailom" label="Chcem byť kontaktovaný/á emailom?"><StringValue>Áno</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_telefonneCislo" label="Telefónne číslo"><StringValue>+421901234567</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_adresaTrvalehoPobytu_ulicaACislo" label="Ulica a číslo"><StringValue>Hlavná 123</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_adresaTrvalehoPobytu_mestoPsc_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_adresaTrvalehoPobytu_mestoPsc_psc" label="PSČ"><StringValue>81101</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_adresaTrvalehoPobytu_vlastnikNehnutelnosti" label="Ste vlastníkom/vlastníčkou alebo spoluvlastníkom/spoluvlastníčkou nehnuteľnosti určenej na bývanie?"><StringValue>Nie</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_adresaTrvalehoPobytu_byvanieVMestskomNajomnomByte" label="Bývate v mestskom nájomnom byte v Bratislave?"><StringValue>Nie</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_adresaTrvalehoPobytu_pobytVBratislaveViacAkoRok" label="Žijete na území Bratislavy viac ako 1 rok? (vrátane trvalého a skutočného pobytu)"><StringValue>Áno</StringValue></Field><Field id="root_ziadatelZiadatelka_osobneUdaje_adresaTrvalehoPobytu_adresaSkutocnehoPobytuRovnaka" label="Je adresa skutočného pobytu rovnaká ako adresa trvalého pobytu?"><StringValue>Áno</StringValue></Field><Field id="root_ziadatelZiadatelka_sucasneByvanie_bytovaNudza" label="Nachádzate sa v bytovej núdzi?"><StringValue>Áno</StringValue></Field><Field id="root_ziadatelZiadatelka_sucasneByvanie_typByvania" label="Typ bývania"><StringValue>Bývanie v inštitucionálnej starostlivosti</StringValue></Field><Field id="root_ziadatelZiadatelka_sucasneByvanie_dlzkaBytovejNudze" label="Uveďte, ako dlho trvá vaša bytová núdza"><StringValue>Menej ako 1 rok</StringValue></Field><Field id="root_ziadatelZiadatelka_prijem_zamestnanie" label="Boli ste v minulom kalendárnom roku zamestnaný/á?"><StringValue>Áno</StringValue></Field><Field id="root_ziadatelZiadatelka_prijem_zamestnaniePrijem" label="Čistý mesačný príjem zo zamestnania"><StringValue>1 200</StringValue></Field><Field id="root_ziadatelZiadatelka_prijem_samostatnaZarobkovaCinnost" label="Mali ste v minulom kalendárnom roku príjem zo samostatnej zárobkovej činnosti?"><StringValue>Nie</StringValue></Field><Field id="root_ziadatelZiadatelka_prijem_dochodok" label="Poberali ste v minulom kalendárnom roku dôchodok?"><StringValue>Nie</StringValue></Field><Field id="root_ziadatelZiadatelka_prijem_vyzivne" label="Poberali ste v minulom kalendárnom roku výživné alebo náhradné výživné na dieťa/deti?"><StringValue>Áno</StringValue></Field><Field id="root_ziadatelZiadatelka_prijem_vyzivneVyska" label="Mesačná výška sumy výživného na dieťa/deti"><StringValue>200</StringValue></Field><Field id="root_ziadatelZiadatelka_prijem_davkaVNezamestnanosti" label="Poberali ste v minulom kalendárnom roku dávku v nezamestnanosti?"><StringValue>Nie</StringValue></Field><Field id="root_ziadatelZiadatelka_prijem_inePrijmy" label="Poberali ste v minulom kalendárnom roku iné príjmy?"><StringValue>Áno</StringValue></Field><Field id="root_ziadatelZiadatelka_prijem_inePrijmyVyska" label="Iné pravidelné mesačné príjmy"><StringValue>150</StringValue></Field><Field id="root_ziadatelZiadatelka_zdravotnyStav_tzpPreukaz" label="Ste držiteľom preukazu ŤZP?"><StringValue>Nie</StringValue></Field><Field id="root_ziadatelZiadatelka_zdravotnyStav_chronickeOchorenie" label="Trpíte chronickým ochorením?"><StringValue>Áno</StringValue></Field><Field id="root_ziadatelZiadatelka_zdravotnyStav_existujuceDiagnozy" label="Máte niektorú z týchto diagnóz?"><StringValue>Astma</StringValue><StringValue>Chronická paradentóza</StringValue></Field><Field id="root_ziadatelZiadatelka_zdravotnyStav_bezbarierovyByt" label="Uchádzate sa o pridelenie bezbariérového bytu?"><StringValue>Nie</StringValue></Field><Field id="root_ziadatelZiadatelka_rizikoveFaktory_rizikoveFaktoryPritomne" label="Týkajú sa vás alebo niektorého člena/členky vašej domácnosti rizikové faktory, ktoré zvyšujú sociálno-ekonomickú zraniteľnosť?"><StringValue>Áno</StringValue></Field><Field id="root_ziadatelZiadatelka_rizikoveFaktory_zoznamRizikovychFaktorov" label="Označte rizikové faktory"><StringValue>Opustenie ústavnej starostlivosti v uplynulých 3 rokoch: Centrum pre deti a rodiny a resocializačné stredisko</StringValue><StringValue>Osamelý rodič (dospelá osoba), ktorý/á žije v spoločnej domácnosti s nezaopatreným dieťaťom/deťmi, avšak bez manžela/manželky alebo partnera/partnerky, a zároveň tomuto dieťaťu/deťom zabezpečuje osobnú starostlivosť.</StringValue></Field><Field id="root_ziadatelZiadatelka_rizikoveFaktory_vekNajstarsiehoClena" label="Zvoľte vek najstaršieho člena domácnosti"><StringValue>menej ako 63 rokov</StringValue></Field></Step><Step id="root_manzelManzelka" title="Manžel/manželka"><Field id="root_manzelManzelka_manzelManzelkaSucastouDomacnosti" label="Bude súčasťou budúcej domácnosti aj váš manžel/manželka?"><StringValue>Nie</StringValue></Field></Step><Step id="root_druhDruzka" title="Druh/družka"><Field id="root_druhDruzka_druhDruzkaSucastouDomacnosti" label="Bude súčasťou budúcej domácnosti aj váš druh/družka?"><StringValue>Áno</StringValue></Field><Field id="root_druhDruzka_osobneUdaje_menoPriezvisko_meno" label="Meno"><StringValue>Peter</StringValue></Field><Field id="root_druhDruzka_osobneUdaje_menoPriezvisko_priezvisko" label="Priezvisko"><StringValue>Horváth</StringValue></Field><Field id="root_druhDruzka_osobneUdaje_rodnePriezvisko" label="Rodné priezvisko"><StringValue>Horváth</StringValue></Field><Field id="root_druhDruzka_osobneUdaje_datumNarodenia" label="Dátum narodenia"><StringValue>22. 7. 1982</StringValue></Field><Field id="root_druhDruzka_osobneUdaje_statnaPrislusnost" label="Štátna príslušnosť"><StringValue>Slovenská</StringValue></Field><Field id="root_druhDruzka_osobneUdaje_rodinnyStav" label="Rodinný stav"><StringValue>Slobodný/slobodná</StringValue></Field><Field id="root_druhDruzka_osobneUdaje_adresaSkutocnehoPobytu_ulicaACislo" label="Ulica a číslo"><StringValue>Nová 456</StringValue></Field><Field id="root_druhDruzka_osobneUdaje_adresaSkutocnehoPobytu_mestoPsc_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_druhDruzka_osobneUdaje_adresaSkutocnehoPobytu_mestoPsc_psc" label="PSČ"><StringValue>82105</StringValue></Field><Field id="root_druhDruzka_osobneUdaje_adresaSkutocnehoPobytu_vlastnikNehnutelnosti" label="Je váš druh/družka vlastníkom/vlastníčkou alebo spoluvlastníkom/spoluvlastníčkou nehnuteľnosti určenej na bývanie?"><StringValue>Nie</StringValue></Field><Field id="root_druhDruzka_sucasneByvanie_situaciaRovnakaAkoVasa" label="Je situácia súčasného bývania vášho druha/družky rovnaká ako vaša?"><StringValue>Áno</StringValue></Field><Field id="root_druhDruzka_prijem_zamestnanie" label="Bol váš druh/družka v minulom kalendárnom roku zamestnaný/á?"><StringValue>Áno</StringValue></Field><Field id="root_druhDruzka_prijem_zamestnaniePrijem" label="Čistý mesačný príjem zo zamestnania"><StringValue>1 500</StringValue></Field><Field id="root_druhDruzka_prijem_samostatnaZarobkovaCinnost" label="Mal/mala v minulom kalendárnom roku príjem zo samostatnej zárobkovej činnosti?"><StringValue>Áno</StringValue></Field><Field id="root_druhDruzka_prijem_samostatnaZarobkovaCinnostPrijem" label="Mesačný príjem z podnikania"><StringValue>300</StringValue></Field><Field id="root_druhDruzka_prijem_dochodok" label="Poberal/poberala v minulom kalendárnom roku dôchodok?"><StringValue>Nie</StringValue></Field><Field id="root_druhDruzka_prijem_vyzivne" label="Poberal/poberala v minulom kalendárnom roku výživné alebo náhradné výživné na dieťa/deti?"><StringValue>Nie</StringValue></Field><Field id="root_druhDruzka_prijem_davkaVNezamestnanosti" label="Poberal/poberala v minulom kalendárnom roku dávku v nezamestnanosti?"><StringValue>Nie</StringValue></Field><Field id="root_druhDruzka_prijem_inePrijmy" label="Poberal/poberala v minulom kalendárnom roku iné príjmy?"><StringValue>Nie</StringValue></Field><Field id="root_druhDruzka_zdravotnyStav_tzpPreukaz" label="Je držiteľom preukazu ŤZP?"><StringValue>Áno</StringValue></Field><Field id="root_druhDruzka_zdravotnyStav_mieraFunkcnejPoruchy" label="Má uznanú mieru funkčnej poruchy?"><StringValue>Od 50 % do 74 %</StringValue></Field></Step><Step id="root_deti" title="Nezaopatrené deti do 25 rokov"><Field id="root_deti_detiSucastouDomacnosti" label="Bude súčasťou budúcej domácnosti aj vaše dieťa/deti?"><StringValue>Áno</StringValue></Field><Array id="root_deti_zoznamDeti" title="Deti"><ArrayItem id="root_deti_zoznamDeti_0" title="Dieťa č. 1"><Field id="root_deti_zoznamDeti_0_osobneUdaje_menoPriezvisko_meno" label="Meno"><StringValue>Lucia</StringValue></Field><Field id="root_deti_zoznamDeti_0_osobneUdaje_menoPriezvisko_priezvisko" label="Priezvisko"><StringValue>Nováková</StringValue></Field><Field id="root_deti_zoznamDeti_0_osobneUdaje_datumNarodenia" label="Dátum narodenia"><StringValue>30. 11. 2010</StringValue></Field><Field id="root_deti_zoznamDeti_0_osobneUdaje_statnaPrislusnost" label="Štátna príslušnosť"><StringValue>Slovenská</StringValue></Field><Field id="root_deti_zoznamDeti_0_osobneUdaje_vlastnikNehnutelnosti" label="Je vaše dieťa vlastníkom/vlastníčkou alebo spoluvlastníkom/spoluvlastníčkou nehnuteľnosti určenej na bývanie?"><StringValue>Nie</StringValue></Field><Field id="root_deti_zoznamDeti_0_sucasneByvanie_situaciaRovnakaAkoVasa" label="Je situácia súčasného bývania vášho dieťaťa rovnaká ako vaša?"><StringValue>Áno</StringValue></Field><Field id="root_deti_zoznamDeti_0_prijem_student" label="Je dieťa študent základnej, strednej alebo vysokej školy na dennom štúdiu?"><StringValue>Áno</StringValue></Field><Field id="root_deti_zoznamDeti_0_prijem_maPrijem" label="Malo dieťa staršie ako 15 rokov v minulom kalendárnom roku príjem, ktorý by sa mohol zarátavať do celkového príjmu domácnosti?"><StringValue>Nie</StringValue></Field><Field id="root_deti_zoznamDeti_0_zdravotnyStav_tzpPreukaz" label="Je držiteľom preukazu ŤZP?"><StringValue>Nie</StringValue></Field><Field id="root_deti_zoznamDeti_0_zdravotnyStav_chronickeOchorenie" label="Trpí chronickým ochorením?"><StringValue>Nie</StringValue></Field></ArrayItem><ArrayItem id="root_deti_zoznamDeti_1" title="Dieťa č. 2"><Field id="root_deti_zoznamDeti_1_osobneUdaje_menoPriezvisko_meno" label="Meno"><StringValue>Michal</StringValue></Field><Field id="root_deti_zoznamDeti_1_osobneUdaje_menoPriezvisko_priezvisko" label="Priezvisko"><StringValue>Novák</StringValue></Field><Field id="root_deti_zoznamDeti_1_osobneUdaje_datumNarodenia" label="Dátum narodenia"><StringValue>18. 4. 2005</StringValue></Field><Field id="root_deti_zoznamDeti_1_osobneUdaje_statnaPrislusnost" label="Štátna príslušnosť"><StringValue>Slovenská</StringValue></Field><Field id="root_deti_zoznamDeti_1_osobneUdaje_vlastnikNehnutelnosti" label="Je vaše dieťa vlastníkom/vlastníčkou alebo spoluvlastníkom/spoluvlastníčkou nehnuteľnosti určenej na bývanie?"><StringValue>Nie</StringValue></Field><Field id="root_deti_zoznamDeti_1_sucasneByvanie_situaciaRovnakaAkoVasa" label="Je situácia súčasného bývania vášho dieťaťa rovnaká ako vaša?"><StringValue>Áno</StringValue></Field><Field id="root_deti_zoznamDeti_1_prijem_student" label="Je dieťa študent základnej, strednej alebo vysokej školy na dennom štúdiu?"><StringValue>Áno</StringValue></Field><Field id="root_deti_zoznamDeti_1_prijem_maPrijem" label="Malo dieťa staršie ako 15 rokov v minulom kalendárnom roku príjem, ktorý by sa mohol zarátavať do celkového príjmu domácnosti?"><StringValue>Áno</StringValue></Field><Field id="root_deti_zoznamDeti_1_prijem_prijemVyska" label="Čistý mesačný príjem dieťaťa"><StringValue>200</StringValue></Field><Field id="root_deti_zoznamDeti_1_zdravotnyStav_tzpPreukaz" label="Je držiteľom preukazu ŤZP?"><StringValue>Áno</StringValue></Field><Field id="root_deti_zoznamDeti_1_zdravotnyStav_mieraFunkcnejPoruchy" label="Má uznanú mieru funkčnej poruchy?"><StringValue>Od 75 % do 100 %</StringValue></Field></ArrayItem></Array></Step><Step id="root_inyClenoviaClenkyDomacnosti" title="Iní členovia/členky domácnosti"><Field id="root_inyClenoviaClenkyDomacnosti_inyClenoviaClenkySucastouDomacnosti" label="Budú súčasťou budúcej domácnosti aj iní členovia/členky? (zaopatrené deti, starí rodičia a pod.)"><StringValue>Áno</StringValue></Field><Array id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov" title="Iní členovia/členky domácnosti"><ArrayItem id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0" title="Člen/členka domácnosti č. 1"><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_osobneUdaje_menoPriezvisko_meno" label="Meno"><StringValue>Mária</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_osobneUdaje_menoPriezvisko_priezvisko" label="Priezvisko"><StringValue>Kováčová</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_osobneUdaje_rodnePriezvisko" label="Rodné priezvisko"><StringValue>Hrušková</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_osobneUdaje_datumNarodenia" label="Dátum narodenia"><StringValue>5. 9. 1960</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_osobneUdaje_statnaPrislusnost" label="Štátna príslušnosť"><StringValue>Slovenská</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_osobneUdaje_rodinnyStav" label="Rodinný stav"><StringValue>Vdovec/vdova</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_osobneUdaje_vlastnikNehnutelnosti" label="Je člen/členka domácnosti vlastníkom/vlastníčkou alebo spoluvlastníkom/spoluvlastníčkou nehnuteľnosti určenej na bývanie?"><StringValue>Nie</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_sucasneByvanie_situaciaRovnakaAkoVasa" label="Je situácia súčasného bývania člena/členky domácnosti rovnaká ako vaša?"><StringValue>Áno</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_prijem_zamestnanie" label="Bol člen/členka  v minulom kalendárnom roku zamestnaný/á?"><StringValue>Nie</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_prijem_samostatnaZarobkovaCinnost" label="Mal/mala v minulom kalendárnom roku príjem zo samostatnej zárobkovej činnosti?"><StringValue>Nie</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_prijem_dochodok" label="Poberal/poberala v minulom kalendárnom roku dôchodok?"><StringValue>Áno</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_prijem_dochodokVyska" label="Mesačná výška dôchodku"><StringValue>550</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_prijem_vyzivne" label="Poberal/poberala v minulom kalendárnom roku výživné alebo náhradné výživné na dieťa/deti?"><StringValue>Nie</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_prijem_davkaVNezamestnanosti" label="Poberal/poberala v minulom kalendárnom roku dávku v nezamestnanosti?"><StringValue>Nie</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_prijem_inePrijmy" label="Poberal/poberala v minulom kalendárnom roku iné príjmy?"><StringValue>Nie</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_zdravotnyStav_tzpPreukaz" label="Je držiteľom preukazu ŤZP?"><StringValue>Áno</StringValue></Field><Field id="root_inyClenoviaClenkyDomacnosti_zoznamInychClenov_0_zdravotnyStav_mieraFunkcnejPoruchy" label="Má uznanú mieru funkčnej poruchy?"><StringValue>Od 50 % do 74 %</StringValue></Field></ArrayItem></Array></Step><Step id="root_ineOkolnosti" title="Iné okolnosti"><Field id="root_ineOkolnosti_dovodyPodaniaZiadosti" label="Prečo si podávate žiadosť?"><StringValue>Potrebujeme väčší byt pre našu rastúcu rodinu a lepšie podmienky pre dieťa so zdravotným postihnutím.</StringValue></Field><Field id="root_ineOkolnosti_preferovanaVelkost" label="Akú veľkosť nájomného bytu preferujete?"><StringValue>3-izbový byt</StringValue></Field><Field id="root_ineOkolnosti_preferovanaLokalita" label="Aká je vaša preferovaná lokalita nájomného bytu (mestská časť)?"><StringValue>Ružinov</StringValue><StringValue>Nové Mesto</StringValue></Field><Field id="root_ineOkolnosti_maximalnaVyskaNajomneho" label="Uveďte, prosím, maximálnu výšku nájomného (vrátane energií), ktorú dokážete mesačne platiť"><StringValue>700</StringValue></Field></Step><Step id="root_sucetPrijmovCestneVyhlasenie" title="Súčet príjmov a čestné výhlásenie"><Field id="root_sucetPrijmovCestneVyhlasenie_cestneVyhlasenie" label="Čestné vyhlásenie"><StringValue>Čestne vyhlasujem, že všetky údaje uvedené v žiadosti a dokumentoch na nahliadnutie sú pravdivé a úplné. Zároveň som si vedomý/á toho, že poskytnutie nepravdivých a/alebo neúplných informácií môže mať za následok nezaradenie žiadosti do evidencie žiadateľov.</StringValue></Field></Step></Form></Summary><TermsAndConditions>Stiahnutím, uložením a/alebo odoslaním Žiadosti výslovne vyhlasujem, že som sa oboznámil s:

podmienkami ochrany súkromia pre politiku nájomných bytov
podmienkami ochrany súkromia v rámci Bratislavského konta a podmienkami spracúvania osobných údajov Hlavného mesta

ako prevádzkovateľa osobných údajov a beriem na vedomie, že ich spracúvanie je nevyhnutné na vyhodnotenie splnenia podmienok pre pridelenie nájomného bytu.</TermsAndConditions></eform>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/00603481.ziadostONajomnyByt/1.2",
  "xslMediaDestinationTypeDescription": "HTML",
  "xslReferenceURI": "http://schemas.gov.sk/form/00603481.ziadostONajomnyByt/1.2/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;

exports[`signerData > ziadostOSlobodnyPristupKInformaciamExample > should generate correct signer data 1`] = `
{
  "objectDescription": "Žiadosť o sprístupnenie informácií podľa zákona č. 211/2000 Z.z.",
  "objectFormatIdentifier": "http://schemas.gov.sk/form/00603481.ziadostOSlobodnyPristupKInformaciam/1.0",
  "objectId": "Ziadost_o_spristupnenie_informacii_podla_zakona_c._211/2000_Z.z..xml",
  "signatureId": "form_data_3ebd63efb6b31208d33669be40e9b4736a75b0d0_20240101000000",
  "xdcIdentifier": "http://data.gov.sk/doc/eform/00603481.ziadostOSlobodnyPristupKInformaciam/1.0",
  "xdcIncludeRefs": true,
  "xdcNamespaceURI": "http://data.gov.sk/def/container/xmldatacontainer+xml/1.0",
  "xdcUsedXSD": "<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://schemas.gov.sk/form/00603481.ziadostOSlobodnyPristupKInformaciam/1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://schemas.gov.sk/form/00603481.ziadostOSlobodnyPristupKInformaciam/1.0" 
           elementFormDefault="qualified" 
           attributeFormDefault="unqualified">

  <xs:element name="eform">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="JsonVersion" type="xs:string"/>
        <xs:element name="Json" type="xs:string"/>
        <xs:element name="Summary" type="SummaryType"/>
        <xs:element name="TermsAndConditions" type="xs:string"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="SummaryType">
    <xs:sequence>
      <xs:element name="Form" type="FormType"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="FormType">
    <xs:sequence>
      <xs:element name="Step" type="StepType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="StepType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayType">
    <xs:sequence>
      <xs:element name="ArrayItem" type="ArrayItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="ArrayItemType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="Field" type="FieldType"/>
      <xs:element name="Array" type="ArrayType"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="title" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FieldType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="StringValue" type="xs:string"/>
      <xs:element name="FileValue" type="FileValueType"/>
      <xs:element name="NoneValue">
        <xs:complexType/>
      </xs:element>
      <xs:element name="InvalidValue">
        <xs:complexType/>
      </xs:element>
    </xs:choice>
    <xs:attribute name="id" type="xs:string" use="required"/>
    <xs:attribute name="label" type="xs:string" use="required"/>
  </xs:complexType>

  <xs:complexType name="FileValueType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="id" type="xs:string" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

</xs:schema>",
  "xdcUsedXSLT": "<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet
  version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns="http://www.w3.org/1999/xhtml"
  xmlns:e="http://schemas.gov.sk/form/00603481.ziadostOSlobodnyPristupKInformaciam/1.0"
>
  <xsl:output
    method="xml"
    indent="yes"
    encoding="UTF-8"
    omit-xml-declaration="yes"
  />
  <xsl:template match="/">
    <xsl:text disable-output-escaping="yes">&lt;!DOCTYPE html&gt;
</xsl:text>
    <html lang="sk">
      <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <title><xsl:value-of select="//e:eform/e:Summary/e:Form/@title"/></title>
        <style>
          body {
            font-family: Arial, sans-serif;
            color: #333;
          }
          .container {
            margin-bottom: 32px;
          }
          .container:last-child {
            margin-bottom: 0;
          }
          h1 {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 32px;
          }
          h2 {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 16px;
          }
          .box {
            background-color: #f9f9f9;
            padding: 20px;
            border-radius: 8px;
          }
          .box-text {
            margin: 0;
            white-space: pre-wrap;
          }
          .field {
            border-bottom: 2px solid #e5e5e5;
            padding: 10px 0;
            overflow: hidden;
          }
          .field-label {
            font-weight: bold;
            float: left;
            width: 50%;
            padding-right: 4px;
            box-sizing: border-box;
          }
          .field-value {
            float: right;
            width: 50%;
          }
          .field-value-item {
            margin-bottom: 8px;
            margin-left: 4px;
          }
          .field-value-item:last-child {
            margin-bottom: 0;
          }
          .field-value-string {
            white-space: pre-wrap;
          }
          .array {
            margin-top: 16px;
          }
          .array-title {
            font-weight: bold;
            margin-bottom: 16px;
          }
          .array-item {
            border-left: 4px solid #e5e5e5;
            padding: 0 0 0 12px;
            margin-bottom: 16px;
          }
          .array-item:last-child {
            margin-bottom: 0;
          }
          .array-item-title {
            font-weight: bold;
            margin-bottom: 12px;
          }

          @media (max-width: 767px) {
            .field-label,
            .field-value {
              float: none;
              width: 100%;
            }
            .field-label {
              margin-bottom: 8px;
              padding-right: 0;
            }
            .field-value-item {
              margin-left: 0;
            }
          }
        </style>
      </head>
      <body>
        <div class="container">
          <h1><xsl:value-of select="//e:eform/e:Summary/e:Form/@title" /></h1>
          <xsl:apply-templates select="//e:eform/e:Summary/e:Form/*" />
        </div>
        <div class="container">
          <h2>Ochrana osobných údajov</h2>
          <div class="box">
            <p class="box-text"><xsl:value-of select="//e:eform/e:TermsAndConditions" /></p>
          </div>
        </div>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="e:Step">
    <div class="container">
      <h2><xsl:value-of select="@title" /></h2>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:Field">
    <div class="field">
      <div class="field-label"><xsl:value-of select="@label" /></div>
      <div class="field-value">
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>

  <xsl:template match="e:StringValue">
    <div class="field-value-item">
      <span class="field-value-string"><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:FileValue">
    <div class="field-value-item">
      <span><xsl:value-of select="." /></span>
    </div>
  </xsl:template>

  <xsl:template match="e:NoneValue">
    <div class="field-value-item">
      <span>-</span>
    </div>
  </xsl:template>

  <xsl:template match="e:InvalidValue">
    <div class="field-value-item">
      <span class="field-value-error">Neznáma hodnota</span>
    </div>
  </xsl:template>

  <xsl:template match="e:Array">
    <div class="array">
      <div class="array-title"><xsl:value-of select="@title" /></div>
      <xsl:apply-templates />
    </div>
  </xsl:template>

  <xsl:template match="e:ArrayItem">
    <div class="array-item">
      <div class="array-item-title"><xsl:value-of select="@title" /></div>
      <div>
        <xsl:apply-templates />
      </div>
    </div>
  </xsl:template>
</xsl:stylesheet>
",
  "xdcVersion": "1.0",
  "xdcXMLData": "<?xml version="1.0" encoding="UTF-8"?><eform xmlns="http://schemas.gov.sk/form/00603481.ziadostOSlobodnyPristupKInformaciam/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><JsonVersion>1.0.0</JsonVersion><Json>{"ziadatel":{"typZiadatela":"fyzickaOsoba","meno":"Martin","priezvisko":"Kováč","ulicaCislo":"Bajkalská 28","mesto":"Bratislava","psc":"82109","kontaktneUdaje":{"email":"martin.kovac@example.com","telefon":"+421908123456"}},"pozadovaneInformacie":{"predmetZiadosti":"Rozpočet mestskej časti na rok 2024","obsahZiadosti":"Žiadam o sprístupnenie dokumentácie týkajúcej sa schváleného rozpočtu mestskej časti Bratislava-Ružinov na rok 2024 vrátane všetkých plánovaných investícií do verejnej infraštruktúry.","prilohyZiadosti":["b9050ef5-0d98-41c4-aba1-b0fc5a65a443"]},"sposobSpristupnenia":{"sposobSpristupnenia":"email","emailSpristupnenia":"martin.kovac@example.com"}}</Json><Summary><Form title="Žiadosť o sprístupnenie informácií podľa zákona č. 211/2000 Z.z."><Step id="root_ziadatel" title="Žiadateľ"><Field id="root_ziadatel_typZiadatela" label="Žiadate ako"><StringValue>Fyzická osoba</StringValue></Field><Field id="root_ziadatel_meno" label="Meno"><StringValue>Martin</StringValue></Field><Field id="root_ziadatel_priezvisko" label="Priezvisko"><StringValue>Kováč</StringValue></Field><Field id="root_ziadatel_ulicaCislo" label="Adresa pobytu"><StringValue>Bajkalská 28</StringValue></Field><Field id="root_ziadatel_mesto" label="Mesto"><StringValue>Bratislava</StringValue></Field><Field id="root_ziadatel_psc" label="PSČ"><StringValue>82109</StringValue></Field><Field id="root_ziadatel_kontaktneUdaje_email" label="Email"><StringValue>martin.kovac@example.com</StringValue></Field><Field id="root_ziadatel_kontaktneUdaje_telefon" label="Telefónne číslo"><StringValue>+421908123456</StringValue></Field></Step><Step id="root_pozadovaneInformacie" title="Požadované informácie"><Field id="root_pozadovaneInformacie_predmetZiadosti" label="Predmet žiadosti"><StringValue>Rozpočet mestskej časti na rok 2024</StringValue></Field><Field id="root_pozadovaneInformacie_obsahZiadosti" label="Obsah žiadosti"><StringValue>Žiadam o sprístupnenie dokumentácie týkajúcej sa schváleného rozpočtu mestskej časti Bratislava-Ružinov na rok 2024 vrátane všetkých plánovaných investícií do verejnej infraštruktúry.</StringValue></Field><Field id="root_pozadovaneInformacie_prilohyZiadosti" label="Prílohy k žiadosti"><FileValue id="b9050ef5-0d98-41c4-aba1-b0fc5a65a443">ziadost_o_rozpocet.pdf</FileValue></Field></Step><Step id="root_sposobSpristupnenia" title="Spôsob sprístupnenia informácií"><Field id="root_sposobSpristupnenia_sposobSpristupnenia" label="Akým spôsobom chcete sprístupniť požadované informácie"><StringValue>na emailovú adresu</StringValue></Field><Field id="root_sposobSpristupnenia_emailSpristupnenia" label="Email"><StringValue>martin.kovac@example.com</StringValue></Field></Step></Form></Summary><TermsAndConditions>Stiahnutím, uložením a/alebo odoslaním Žiadosti výslovne vyhlasujem, že som sa oboznámil s podmienkami spracúvania osobných údajov Hlavného mesta ako prevádzkovateľa osobných údajov a beriem na vedomie, že ich spracúvanie je nevyhnutné na splnenie zákonných povinností Hlavného mesta v súvislosti s vybavením tejto žiadosti.</TermsAndConditions></eform>",
  "xsdReferenceURI": "http://schemas.gov.sk/form/00603481.ziadostOSlobodnyPristupKInformaciam/1.0",
  "xslMediaDestinationTypeDescription": "HTML",
  "xslReferenceURI": "http://schemas.gov.sk/form/00603481.ziadostOSlobodnyPristupKInformaciam/1.0/form.xslt",
  "xslTargetEnvironment": "",
  "xslXSLTLanguage": "sk",
}
`;
