# Example setup for local development
# Key takeaways:
# - uses staging cognito user pool - recommended to create separate user for your local database and for staging deployment
# - the postgres, rabbitmq credentials are set to match docker-compose
# - validation is written in a way where it does not pass with empty string (TODO this can be improved, along with the rest of the config setup)

# Get the following secrets from team before starting development:
# - AWS_COGNITO_SECRET

# Get the other omitted secrets as needed when developing related sections of the service

DATABASE_URL="postgresql://postgres:postgres@localhost:5422/city-account?schema=public"

# aws
AWS_COGNITO_CLIENT_ID="1pdeai19927kshpgikd6l1ptc6"
AWS_COGNITO_USERPOOL_ID="eu-central-1_FZDV0j2ZK"
AWS_COGNITO_REGION="eu-central-1"
AWS_COGNITO_ACCESS="AKIA55KLWRXCW5KRHIYH"
AWS_COGNITO_SECRET="!!!change-this!!!"

# magproxy - get MAGPROXY_AZURE_CLIENT_SECRET if you need user verification
MAGPROXY_URL="https://new-magproxy.bratislava.sk"

MAGPROXY_AZURE_AD_URL="https://login.microsoftonline.com/fe69e74e-1e66-4fcb-99c5-58e4a2d2a063/oauth2/v2.0/token"
MAGPROXY_AZURE_CLIENT_ID="ec200915-180f-448b-b135-1a24d5189953"
MAGPROXY_AZURE_CLIENT_SECRET="banana"
MAGPROXY_AZURE_SCOPE="api://ec200915-180f-448b-b135-1a24d5189953/.default"

# rabbitmq
RABBIT_MQ_URI="amqp://guest:guest@localhost:5633"

# always pass turnstile_secret - https://developers.cloudflare.com/turnstile/troubleshooting/testing/
TURNSTILE_SECRET="1x0000000000000000000000000000000AA"

# mailgun
MAILGUN_API_KEY="banana"
DEFAULT_MAILGUN_DOMAIN="banana"

# nases - get credentials to do eID user verification
SLOVENSKO_SK_CONTAINER_URI="https://fix.slovensko-sk-api.bratislava.sk"
API_TOKEN_PRIVATE="banana"
OBO_TOKEN_PUBLIC="banana"
SUB_NASES_TECHNICAL_ACCOUNT="banana"

# bloomreach
BLOOMREACH_INTEGRATION_STATE="INACTIVE"
BLOOMREACH_PROJECT_TOKEN="banana"
BLOOMREACH_API_KEY="banana"
BLOOMREACH_API_SECRET="banana"
BLOOMREACH_API_URL="https://api.eu1.exponea.com"

# tax backend - sending user data to tax backend in cron jobs
TAX_BACKEND_URL='https://nest-tax-backend.bratislava.sk'
TAX_BACKEND_API_KEY='banana'

# various internal, needed to be set for app to work
ADMIN_APP_SECRET='banana'
CRYPTO_SECRET_KEY='banana'

# Used for the settings toggle based on the cluster environment
CLUSTER_ENV=staging

# Delivery method
MUNICIPAL_TAX_LOCK_MONTH='04'
MUNICIPAL_TAX_LOCK_DAY='01'

OAUTH2_LOGIN_URL=https://city-account-next.dev.bratislava.sk/prihlasenie
OAUTH2_CLIENT_LIST=MPA
